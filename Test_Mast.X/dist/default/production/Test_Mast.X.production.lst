

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 23 15:16:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379                           
   380                           	psect	strings
   381  0003                     __pstrings:
   382  0003                     stringtab:
   383  0003                     __stringtab:
   384                           
   385                           ;	String table - string pointers are 1 byte each
   386  0003  1BFF               	btfsc	btemp+1,7
   387  0004  280D               	ljmp	stringcode
   388  0005  1383               	bcf	3,7
   389  0006  187F               	btfsc	btemp+1,0
   390  0007  1783               	bsf	3,7
   391  0008  0800               	movf	0,w
   392  0009  0A84               	incf	4,f
   393  000A  1903               	skipnz
   394  000B  0AFF               	incf	btemp+1,f
   395  000C  0008               	return
   396  000D                     stringcode:
   397  000D                     stringdir:
   398  000D  3000               	movlw	high stringdir
   399  000E  008A               	movwf	10
   400  000F  0804               	movf	4,w
   401  0010  0A84               	incf	4,f
   402  0011  0782               	addwf	2,f
   403  0012                     __stringbase:
   404  0012  3400               	retlw	0
   405  0013                     __end_of__stringtab:
   406  0013                     _dpowers:
   407  0013  3401               	retlw	1
   408  0014  3400               	retlw	0
   409  0015  340A               	retlw	10
   410  0016  3400               	retlw	0
   411  0017  3464               	retlw	100
   412  0018  3400               	retlw	0
   413  0019  34E8               	retlw	232
   414  001A  3403               	retlw	3
   415  001B  3410               	retlw	16
   416  001C  3427               	retlw	39
   417  001D                     __end_of_dpowers:
   418  0008                     _PORTD	set	8
   419  0013                     _SSPBUF	set	19
   420  0014                     _SSPCON	set	20
   421  003F                     _RC7	set	63
   422  003E                     _RC6	set	62
   423  0063                     _SSPIF	set	99
   424  005E                     _PEIE	set	94
   425  005F                     _GIE	set	95
   426  008F                     _OSCCONbits	set	143
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0086                     _TRISB	set	134
   430  0085                     _TRISA	set	133
   431  0091                     _SSPCON2bits	set	145
   432  0087                     _TRISCbits	set	135
   433  0094                     _SSPSTAT	set	148
   434  0093                     _SSPADD	set	147
   435  0091                     _SSPCON2	set	145
   436  0463                     _SSPIE	set	1123
   437  043C                     _TRISC4	set	1084
   438  043B                     _TRISC3	set	1083
   439  0189                     _ANSELH	set	393
   440  0188                     _ANSEL	set	392
   441  001D                     STR_1:
   442  001D  3450               	retlw	80	;'P'
   443  001E  346F               	retlw	111	;'o'
   444  001F  3474               	retlw	116	;'t'
   445  0020  343A               	retlw	58	;':'
   446  0021  3420               	retlw	32	;' '
   447  0022  3420               	retlw	32	;' '
   448  0023  3443               	retlw	67	;'C'
   449  0024  346F               	retlw	111	;'o'
   450  0025  346E               	retlw	110	;'n'
   451  0026  343A               	retlw	58	;':'
   452  0027  3420               	retlw	32	;' '
   453  0028  3400               	retlw	0
   454  0029                     STR_4:
   455  0029  3425               	retlw	37	;'%'
   456  002A  3464               	retlw	100	;'d'
   457  002B  3420               	retlw	32	;' '
   458  002C  3420               	retlw	32	;' '
   459  002D  3400               	retlw	0
   460  002E                     STR_5:
   461  002E  3420               	retlw	32	;' '
   462  002F  3420               	retlw	32	;' '
   463  0030  3425               	retlw	37	;'%'
   464  0031  3464               	retlw	100	;'d'
   465  0032  3400               	retlw	0
   466  0030                     
   467                           	psect	cinit
   468  07F4                     start_initialization:	
   469                           ; #config settings
   470                           
   471  07F4                     __initialization:
   472                           
   473                           ; Clear objects allocated to BANK0
   474  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   475  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   476  07F6  01B0               	clrf	__pbssBANK0& (0+127)
   477  07F7  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   478  07F8  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   479  07F9  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   480  07FA  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   481  07FB  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   482  07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  07FC                     __end_of__initialization:
   486  07FC  0183               	clrf	3
   487  07FD  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssBANK0
   490  0030                     __pbssBANK0:
   491  0030                     _uni:
   492  0030                     	ds	1
   493  0031                     _dec:
   494  0031                     	ds	1
   495  0032                     _cen:
   496  0032                     	ds	1
   497  0033                     _con:
   498  0033                     	ds	1
   499  0034                     _pot:
   500  0034                     	ds	1
   501  0035                     _buffer:
   502  0035                     	ds	1
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:
   506  0070                     ?_Lcd_Init:
   507  0070                     ?_Lcd_Clear:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_I2C_Master_Wait:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_I2C_Master_Wait:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_I2C_Master_Start:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_I2C_Master_Start:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_I2C_Master_Stop:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_I2C_Master_Stop:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_I2C_Master_Write:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_Division:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_setup:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_Lcd_Cmd:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_Lcd_Cmd:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_Lcd_Write_Char:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_Lcd_Write_Char:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_I2C_Master_Read:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?___awmod:	
   556                           ; 2 bytes @ 0x0
   557                           
   558  0070                     ?___lwdiv:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0070                     ?___lldiv:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0070                     I2C_Master_Write@d:	
   565                           ; 4 bytes @ 0x0
   566                           
   567  0070                     I2C_Master_Read@a:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___awmod@divisor:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___lwdiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     ___lldiv@divisor:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 4 bytes @ 0x0
   581  0070                     	ds	1
   582  0071                     Lcd_Write_Char@a:
   583                           
   584                           ; 1 bytes @ 0x1
   585  0071                     	ds	1
   586  0072                     ?_Lcd_Write_String:
   587  0072                     ??_I2C_Master_Write:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ??_I2C_Master_Read:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     Lcd_Cmd@a:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     Lcd_Write_String@a:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ___awmod@dividend:	
   600                           ; 2 bytes @ 0x2
   601                           
   602  0072                     ___lwdiv@dividend:	
   603                           ; 2 bytes @ 0x2
   604                           
   605                           
   606                           ; 2 bytes @ 0x2
   607  0072                     	ds	1
   608  0073                     ??_Lcd_Init:
   609  0073                     ??_Lcd_Clear:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0073                     ?_Lcd_Set_Cursor:	
   613                           ; 1 bytes @ 0x3
   614                           
   615  0073                     Lcd_Set_Cursor@b:	
   616                           ; 1 bytes @ 0x3
   617                           
   618                           
   619                           ; 1 bytes @ 0x3
   620  0073                     	ds	1
   621  0074                     ??_Lcd_Set_Cursor:
   622  0074                     ??_Lcd_Write_String:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ??___awmod:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??___lwdiv:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     Lcd_Set_Cursor@a:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     I2C_Master_Read@temp:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ___lldiv@dividend:	
   638                           ; 2 bytes @ 0x4
   639                           
   640                           
   641                           ; 4 bytes @ 0x4
   642  0074                     	ds	1
   643  0075                     ___awmod@counter:
   644  0075                     ___lwdiv@quotient:	
   645                           ; 1 bytes @ 0x5
   646                           
   647                           
   648                           ; 2 bytes @ 0x5
   649  0075                     	ds	1
   650  0076                     ___awmod@sign:
   651                           
   652                           ; 1 bytes @ 0x6
   653  0076                     	ds	1
   654  0077                     ?___awdiv:
   655  0077                     ___lwdiv@counter:	
   656                           ; 2 bytes @ 0x7
   657                           
   658  0077                     Lcd_Write_String@i:	
   659                           ; 1 bytes @ 0x7
   660                           
   661  0077                     ___awdiv@divisor:	
   662                           ; 2 bytes @ 0x7
   663                           
   664                           
   665                           ; 2 bytes @ 0x7
   666  0077                     	ds	1
   667  0078                     ??___lldiv:
   668  0078                     ?___lwmod:	
   669                           ; 1 bytes @ 0x8
   670                           
   671  0078                     ___lwmod@divisor:	
   672                           ; 2 bytes @ 0x8
   673                           
   674                           
   675                           ; 2 bytes @ 0x8
   676  0078                     	ds	1
   677  0079                     ___awdiv@dividend:
   678  0079                     ___lldiv@quotient:	
   679                           ; 2 bytes @ 0x9
   680                           
   681                           
   682                           ; 4 bytes @ 0x9
   683  0079                     	ds	1
   684  007A                     ___lwmod@dividend:
   685                           
   686                           ; 2 bytes @ 0xA
   687  007A                     	ds	1
   688  007B                     ??___awdiv:
   689                           
   690                           ; 1 bytes @ 0xB
   691  007B                     	ds	1
   692  007C                     ??___lwmod:
   693                           
   694                           ; 1 bytes @ 0xC
   695  007C                     	ds	1
   696  007D                     ___lldiv@counter:
   697  007D                     ___lwmod@counter:	
   698                           ; 1 bytes @ 0xD
   699                           
   700                           
   701                           ; 1 bytes @ 0xD
   702  007D                     	ds	1
   703  007E                     ??_setup:
   704                           
   705                           	psect	cstackBANK0
   706  0020                     __pcstackBANK0:	
   707                           ; 1 bytes @ 0xE
   708                           
   709  0020                     ?_I2C_Master_Init:
   710  0020                     ?_sprintf:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0020                     sprintf@f:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0020                     ___awdiv@counter:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0020                     I2C_Master_Init@c:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 4 bytes @ 0x0
   724  0020                     	ds	1
   725  0021                     ___awdiv@sign:
   726                           
   727                           ; 1 bytes @ 0x1
   728  0021                     	ds	1
   729  0022                     ___awdiv@quotient:
   730                           
   731                           ; 2 bytes @ 0x2
   732  0022                     	ds	1
   733  0023                     ??_sprintf:
   734                           
   735                           ; 1 bytes @ 0x3
   736  0023                     	ds	1
   737  0024                     ??_I2C_Master_Init:
   738  0024                     ??_Division:	
   739                           ; 1 bytes @ 0x4
   740                           
   741                           
   742                           ; 1 bytes @ 0x4
   743  0024                     	ds	2
   744  0026                     sprintf@ap:
   745                           
   746                           ; 1 bytes @ 0x6
   747  0026                     	ds	1
   748  0027                     sprintf@flag:
   749  0027                     _Division$885:	
   750                           ; 1 bytes @ 0x7
   751                           
   752                           
   753                           ; 2 bytes @ 0x7
   754  0027                     	ds	1
   755  0028                     sprintf@prec:
   756                           
   757                           ; 1 bytes @ 0x8
   758  0028                     	ds	1
   759  0029                     Division@y:
   760  0029                     sprintf@val:	
   761                           ; 1 bytes @ 0x9
   762                           
   763                           
   764                           ; 2 bytes @ 0x9
   765  0029                     	ds	2
   766  002B                     sprintf@sp:
   767                           
   768                           ; 1 bytes @ 0xB
   769  002B                     	ds	1
   770  002C                     sprintf@c:
   771                           
   772                           ; 1 bytes @ 0xC
   773  002C                     	ds	1
   774  002D                     ??_main:
   775                           
   776                           ; 1 bytes @ 0xD
   777  002D                     	ds	3
   778                           
   779                           	psect	maintext
   780  06CB                     __pmaintext:	
   781 ;;
   782 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   783 ;;
   784 ;; *************** function _main *****************
   785 ;; Defined at:
   786 ;;		line 59 in file "Master_Test.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : B00/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          0       3       0       0       0
   803 ;;      Totals:         0       3       0       0       0
   804 ;;Total ram usage:        3 bytes
   805 ;; Hardware stack levels required when called:    3
   806 ;; This function calls:
   807 ;;		_Division
   808 ;;		_I2C_Master_Read
   809 ;;		_I2C_Master_Start
   810 ;;		_I2C_Master_Stop
   811 ;;		_I2C_Master_Write
   812 ;;		_Lcd_Set_Cursor
   813 ;;		_Lcd_Write_String
   814 ;;		_setup
   815 ;;		_sprintf
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _main
   823  06CB                     _main:
   824  06CB                     l1557:	
   825                           ;incstack = 0
   826                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   827                           
   828                           
   829                           ;Master_Test.c: 60:     setup();
   830  06CB  120A  118A  22FB  120A  118A  	fcall	_setup
   831  06D0                     l1559:
   832                           
   833                           ;Master_Test.c: 63:         I2C_Master_Start();
   834  06D0  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Start
   835  06D5                     l1561:
   836                           
   837                           ;Master_Test.c: 64:         I2C_Master_Write(0x51);
   838  06D5  3051               	movlw	81
   839  06D6  00F0               	movwf	I2C_Master_Write@d
   840  06D7  3000               	movlw	0
   841  06D8  00F1               	movwf	I2C_Master_Write@d+1
   842  06D9  120A  118A  222F  120A  118A  	fcall	_I2C_Master_Write
   843  06DE                     l1563:
   844                           
   845                           ;Master_Test.c: 65:         pot = I2C_Master_Read(0);
   846  06DE  3000               	movlw	0
   847  06DF  00F0               	movwf	I2C_Master_Read@a
   848  06E0  00F1               	movwf	I2C_Master_Read@a+1
   849  06E1  120A  118A  2295  120A  118A  	fcall	_I2C_Master_Read
   850  06E6  0870               	movf	?_I2C_Master_Read,w
   851  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   852  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   853  06E9  00AD               	movwf	??_main
   854  06EA  082D               	movf	??_main,w
   855  06EB  00B4               	movwf	_pot
   856  06EC                     l1565:
   857                           
   858                           ;Master_Test.c: 66:         I2C_Master_Stop();
   859  06EC  120A  118A  2226  120A  118A  	fcall	_I2C_Master_Stop
   860  06F1                     l1567:
   861                           
   862                           ;Master_Test.c: 67:         _delay((unsigned long)((200)*(8000000/4000.0)));
   863  06F1  3003               	movlw	3
   864  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   865  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   866  06F4  00AF               	movwf	??_main+2
   867  06F5  3008               	movlw	8
   868  06F6  00AE               	movwf	??_main+1
   869  06F7  3076               	movlw	118
   870  06F8  00AD               	movwf	??_main
   871  06F9                     u1117:
   872  06F9  0BAD               	decfsz	??_main,f
   873  06FA  2EF9               	goto	u1117
   874  06FB  0BAE               	decfsz	??_main+1,f
   875  06FC  2EF9               	goto	u1117
   876  06FD  0BAF               	decfsz	??_main+2,f
   877  06FE  2EF9               	goto	u1117
   878  06FF  0000               	nop
   879  0700                     l1569:
   880                           
   881                           ;Master_Test.c: 69:         Division(pot);
   882  0700  1283               	bcf	3,5	;RP0=0, select bank0
   883  0701  1303               	bcf	3,6	;RP1=0, select bank0
   884  0702  0834               	movf	_pot,w
   885  0703  120A  118A  24AE  120A  118A  	fcall	_Division
   886  0708                     l1571:
   887                           
   888                           ;Master_Test.c: 70:         Lcd_Set_Cursor(2,1);
   889  0708  01F3               	clrf	Lcd_Set_Cursor@b
   890  0709  0AF3               	incf	Lcd_Set_Cursor@b,f
   891  070A  3002               	movlw	2
   892  070B  120A  118A  2277  120A  118A  	fcall	_Lcd_Set_Cursor
   893  0710                     l1573:
   894                           
   895                           ;Master_Test.c: 71:         sprintf(buffer, "%d", cen);
   896  0710  301E               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
   897  0711  1283               	bcf	3,5	;RP0=0, select bank0
   898  0712  1303               	bcf	3,6	;RP1=0, select bank0
   899  0713  00AD               	movwf	??_main
   900  0714  082D               	movf	??_main,w
   901  0715  00A0               	movwf	sprintf@f
   902  0716  0832               	movf	_cen,w
   903  0717  00AE               	movwf	??_main+1
   904  0718  01AF               	clrf	??_main+2
   905  0719  082E               	movf	??_main+1,w
   906  071A  00A1               	movwf	?_sprintf+1
   907  071B  082F               	movf	??_main+2,w
   908  071C  00A2               	movwf	?_sprintf+2
   909  071D  3035               	movlw	(low (_buffer| 0))& (0+255)
   910  071E  120A  118A  25E3  120A  118A  	fcall	_sprintf
   911  0723                     l1575:
   912                           
   913                           ;Master_Test.c: 72:         Lcd_Write_String(buffer);
   914  0723  3035               	movlw	(low (_buffer| 0))& (0+255)
   915  0724  00F2               	movwf	Lcd_Write_String@a
   916  0725  3000               	movlw	0
   917  0726  00F3               	movwf	Lcd_Write_String@a+1
   918  0727  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
   919  072C                     l1577:
   920                           
   921                           ;Master_Test.c: 73:         sprintf(buffer, "%d", dec);
   922  072C  301E               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
   923  072D  1283               	bcf	3,5	;RP0=0, select bank0
   924  072E  1303               	bcf	3,6	;RP1=0, select bank0
   925  072F  00AD               	movwf	??_main
   926  0730  082D               	movf	??_main,w
   927  0731  00A0               	movwf	sprintf@f
   928  0732  0831               	movf	_dec,w
   929  0733  00AE               	movwf	??_main+1
   930  0734  01AF               	clrf	??_main+2
   931  0735  082E               	movf	??_main+1,w
   932  0736  00A1               	movwf	?_sprintf+1
   933  0737  082F               	movf	??_main+2,w
   934  0738  00A2               	movwf	?_sprintf+2
   935  0739  3035               	movlw	(low (_buffer| 0))& (0+255)
   936  073A  120A  118A  25E3  120A  118A  	fcall	_sprintf
   937  073F                     l1579:
   938                           
   939                           ;Master_Test.c: 74:         Lcd_Write_String(buffer);
   940  073F  3035               	movlw	(low (_buffer| 0))& (0+255)
   941  0740  00F2               	movwf	Lcd_Write_String@a
   942  0741  3000               	movlw	0
   943  0742  00F3               	movwf	Lcd_Write_String@a+1
   944  0743  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
   945  0748                     l1581:
   946                           
   947                           ;Master_Test.c: 75:         sprintf(buffer, "%d  ", uni);
   948  0748  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   949  0749  1283               	bcf	3,5	;RP0=0, select bank0
   950  074A  1303               	bcf	3,6	;RP1=0, select bank0
   951  074B  00AD               	movwf	??_main
   952  074C  082D               	movf	??_main,w
   953  074D  00A0               	movwf	sprintf@f
   954  074E  0830               	movf	_uni,w
   955  074F  00AE               	movwf	??_main+1
   956  0750  01AF               	clrf	??_main+2
   957  0751  082E               	movf	??_main+1,w
   958  0752  00A1               	movwf	?_sprintf+1
   959  0753  082F               	movf	??_main+2,w
   960  0754  00A2               	movwf	?_sprintf+2
   961  0755  3035               	movlw	(low (_buffer| 0))& (0+255)
   962  0756  120A  118A  25E3  120A  118A  	fcall	_sprintf
   963  075B                     l1583:
   964                           
   965                           ;Master_Test.c: 76:         Lcd_Write_String(buffer);
   966  075B  3035               	movlw	(low (_buffer| 0))& (0+255)
   967  075C  00F2               	movwf	Lcd_Write_String@a
   968  075D  3000               	movlw	0
   969  075E  00F3               	movwf	Lcd_Write_String@a+1
   970  075F  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
   971  0764                     l1585:
   972                           
   973                           ;Master_Test.c: 78:         I2C_Master_Start();
   974  0764  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Start
   975  0769                     l1587:
   976                           
   977                           ;Master_Test.c: 79:         I2C_Master_Write(0x31);
   978  0769  3031               	movlw	49
   979  076A  00F0               	movwf	I2C_Master_Write@d
   980  076B  3000               	movlw	0
   981  076C  00F1               	movwf	I2C_Master_Write@d+1
   982  076D  120A  118A  222F  120A  118A  	fcall	_I2C_Master_Write
   983  0772                     l1589:
   984                           
   985                           ;Master_Test.c: 80:         con = I2C_Master_Read(0);
   986  0772  3000               	movlw	0
   987  0773  00F0               	movwf	I2C_Master_Read@a
   988  0774  00F1               	movwf	I2C_Master_Read@a+1
   989  0775  120A  118A  2295  120A  118A  	fcall	_I2C_Master_Read
   990  077A  0870               	movf	?_I2C_Master_Read,w
   991  077B  1283               	bcf	3,5	;RP0=0, select bank0
   992  077C  1303               	bcf	3,6	;RP1=0, select bank0
   993  077D  00AD               	movwf	??_main
   994  077E  082D               	movf	??_main,w
   995  077F  00B3               	movwf	_con
   996  0780                     l1591:
   997                           
   998                           ;Master_Test.c: 81:         I2C_Master_Stop();
   999  0780  120A  118A  2226  120A  118A  	fcall	_I2C_Master_Stop
  1000  0785                     l1593:
  1001                           
  1002                           ;Master_Test.c: 82:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1003  0785  3003               	movlw	3
  1004  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0788  00AF               	movwf	??_main+2
  1007  0789  3008               	movlw	8
  1008  078A  00AE               	movwf	??_main+1
  1009  078B  3076               	movlw	118
  1010  078C  00AD               	movwf	??_main
  1011  078D                     u1127:
  1012  078D  0BAD               	decfsz	??_main,f
  1013  078E  2F8D               	goto	u1127
  1014  078F  0BAE               	decfsz	??_main+1,f
  1015  0790  2F8D               	goto	u1127
  1016  0791  0BAF               	decfsz	??_main+2,f
  1017  0792  2F8D               	goto	u1127
  1018  0793  0000               	nop
  1019  0794                     l1595:
  1020                           
  1021                           ;Master_Test.c: 84:         Division(con);
  1022  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0796  0833               	movf	_con,w
  1025  0797  120A  118A  24AE  120A  118A  	fcall	_Division
  1026  079C                     l1597:
  1027                           
  1028                           ;Master_Test.c: 86:         sprintf(buffer, "  %d", cen);
  1029  079C  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1030  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1031  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1032  079F  00AD               	movwf	??_main
  1033  07A0  082D               	movf	??_main,w
  1034  07A1  00A0               	movwf	sprintf@f
  1035  07A2  0832               	movf	_cen,w
  1036  07A3  00AE               	movwf	??_main+1
  1037  07A4  01AF               	clrf	??_main+2
  1038  07A5  082E               	movf	??_main+1,w
  1039  07A6  00A1               	movwf	?_sprintf+1
  1040  07A7  082F               	movf	??_main+2,w
  1041  07A8  00A2               	movwf	?_sprintf+2
  1042  07A9  3035               	movlw	(low (_buffer| 0))& (0+255)
  1043  07AA  120A  118A  25E3  120A  118A  	fcall	_sprintf
  1044  07AF                     l1599:
  1045                           
  1046                           ;Master_Test.c: 87:         Lcd_Write_String(buffer);
  1047  07AF  3035               	movlw	(low (_buffer| 0))& (0+255)
  1048  07B0  00F2               	movwf	Lcd_Write_String@a
  1049  07B1  3000               	movlw	0
  1050  07B2  00F3               	movwf	Lcd_Write_String@a+1
  1051  07B3  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
  1052  07B8                     l1601:
  1053                           
  1054                           ;Master_Test.c: 88:         sprintf(buffer, "%d", dec);
  1055  07B8  301E               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1056  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1057  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1058  07BB  00AD               	movwf	??_main
  1059  07BC  082D               	movf	??_main,w
  1060  07BD  00A0               	movwf	sprintf@f
  1061  07BE  0831               	movf	_dec,w
  1062  07BF  00AE               	movwf	??_main+1
  1063  07C0  01AF               	clrf	??_main+2
  1064  07C1  082E               	movf	??_main+1,w
  1065  07C2  00A1               	movwf	?_sprintf+1
  1066  07C3  082F               	movf	??_main+2,w
  1067  07C4  00A2               	movwf	?_sprintf+2
  1068  07C5  3035               	movlw	(low (_buffer| 0))& (0+255)
  1069  07C6  120A  118A  25E3  120A  118A  	fcall	_sprintf
  1070  07CB                     l1603:
  1071                           
  1072                           ;Master_Test.c: 89:         Lcd_Write_String(buffer);
  1073  07CB  3035               	movlw	(low (_buffer| 0))& (0+255)
  1074  07CC  00F2               	movwf	Lcd_Write_String@a
  1075  07CD  3000               	movlw	0
  1076  07CE  00F3               	movwf	Lcd_Write_String@a+1
  1077  07CF  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
  1078  07D4                     l1605:
  1079                           
  1080                           ;Master_Test.c: 90:         sprintf(buffer, "%d", uni);
  1081  07D4  301E               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1082  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1083  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1084  07D7  00AD               	movwf	??_main
  1085  07D8  082D               	movf	??_main,w
  1086  07D9  00A0               	movwf	sprintf@f
  1087  07DA  0830               	movf	_uni,w
  1088  07DB  00AE               	movwf	??_main+1
  1089  07DC  01AF               	clrf	??_main+2
  1090  07DD  082E               	movf	??_main+1,w
  1091  07DE  00A1               	movwf	?_sprintf+1
  1092  07DF  082F               	movf	??_main+2,w
  1093  07E0  00A2               	movwf	?_sprintf+2
  1094  07E1  3035               	movlw	(low (_buffer| 0))& (0+255)
  1095  07E2  120A  118A  25E3  120A  118A  	fcall	_sprintf
  1096  07E7                     l1607:
  1097                           
  1098                           ;Master_Test.c: 91:         Lcd_Write_String(buffer);
  1099  07E7  3035               	movlw	(low (_buffer| 0))& (0+255)
  1100  07E8  00F2               	movwf	Lcd_Write_String@a
  1101  07E9  3000               	movlw	0
  1102  07EA  00F3               	movwf	Lcd_Write_String@a+1
  1103  07EB  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
  1104  07F0  2ED0               	goto	l1559
  1105  07F1  120A  118A  2800   	ljmp	start
  1106  07F4                     __end_of_main:
  1107                           
  1108                           	psect	text1
  1109  05E3                     __ptext1:	
  1110 ;; *************** function _sprintf *****************
  1111 ;; Defined at:
  1112 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  sp              1    wreg     PTR unsigned char 
  1115 ;;		 -> buffer(1), 
  1116 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1117 ;;		 -> STR_7(3), STR_6(3), STR_5(5), STR_4(5), 
  1118 ;;		 -> STR_3(3), STR_2(3), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1121 ;;		 -> buffer(1), 
  1122 ;;  tmpval          4    0        struct .
  1123 ;;  val             2    9[BANK0 ] unsigned int 
  1124 ;;  cp              2    0        PTR const unsigned char 
  1125 ;;  len             2    0        unsigned int 
  1126 ;;  c               1   12[BANK0 ] unsigned char 
  1127 ;;  prec            1    8[BANK0 ] char 
  1128 ;;  flag            1    7[BANK0 ] unsigned char 
  1129 ;;  ap              1    6[BANK0 ] PTR void [1]
  1130 ;;		 -> ?_sprintf(2), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[BANK0 ] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       3       0       0       0
  1141 ;;      Locals:         0       7       0       0       0
  1142 ;;      Temps:          0       3       0       0       0
  1143 ;;      Totals:         0      13       0       0       0
  1144 ;;Total ram usage:       13 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    1
  1147 ;; This function calls:
  1148 ;;		___lwdiv
  1149 ;;		___lwmod
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _sprintf
  1157  05E3                     _sprintf:
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1161                           ;sprintf@sp stored from wreg
  1162  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1163  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1164  05E5  00AB               	movwf	sprintf@sp
  1165  05E6                     l1491:
  1166                           
  1167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1168  05E6  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1169  05E7  00A3               	movwf	??_sprintf
  1170  05E8  0823               	movf	??_sprintf,w
  1171  05E9  00A6               	movwf	sprintf@ap
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1174  05EA  2EB4               	goto	l1543
  1175  05EB                     l1493:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1178  05EB  3025               	movlw	37
  1179  05EC  062C               	xorwf	sprintf@c,w
  1180  05ED  1903               	btfsc	3,2
  1181  05EE  2DF0               	goto	u1041
  1182  05EF  2DF1               	goto	u1040
  1183  05F0                     u1041:
  1184  05F0  2DFD               	goto	l1499
  1185  05F1                     u1040:
  1186  05F1                     l1495:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1189  05F1  082C               	movf	sprintf@c,w
  1190  05F2  00A3               	movwf	??_sprintf
  1191  05F3  082B               	movf	sprintf@sp,w
  1192  05F4  0084               	movwf	4
  1193  05F5  0823               	movf	??_sprintf,w
  1194  05F6  1383               	bcf	3,7	;select IRP bank0
  1195  05F7  0080               	movwf	0
  1196  05F8                     l1497:
  1197  05F8  3001               	movlw	1
  1198  05F9  00A3               	movwf	??_sprintf
  1199  05FA  0823               	movf	??_sprintf,w
  1200  05FB  07AB               	addwf	sprintf@sp,f
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1203  05FC  2EB4               	goto	l1543
  1204  05FD                     l1499:
  1205                           
  1206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1207  05FD  01A7               	clrf	sprintf@flag
  1208  05FE                     l1503:	
  1209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1210                           
  1211  05FE  3001               	movlw	1
  1212  05FF  07A0               	addwf	sprintf@f,f
  1213  0600  30FF               	movlw	-1
  1214  0601  0720               	addwf	sprintf@f,w
  1215  0602  0084               	movwf	4
  1216  0603  120A  118A  200D  120A  118A  	fcall	stringdir
  1217  0608  00AC               	movwf	sprintf@c
  1218  0609  00A3               	movwf	??_sprintf
  1219  060A  01A4               	clrf	??_sprintf+1
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ; direct_byte           11     8 (fixed)
  1228                           ; jumptable            260     6 (fixed)
  1229                           ;	Chosen strategy is simple_byte
  1230  060B  0824               	movf	??_sprintf+1,w
  1231  060C  3A00               	xorlw	0	; case 0
  1232  060D  1903               	skipnz
  1233  060E  2E10               	goto	l1633
  1234  060F  2EB4               	goto	l1543
  1235  0610                     l1633:
  1236                           
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 3, Range of values is 0 to 105
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte           10     6 (average)
  1242                           ; jumptable            260     6 (fixed)
  1243                           ;	Chosen strategy is simple_byte
  1244  0610  0823               	movf	??_sprintf,w
  1245  0611  3A00               	xorlw	0	; case 0
  1246  0612  1903               	skipnz
  1247  0613  2EC6               	goto	l1545
  1248  0614  3A64               	xorlw	100	; case 100
  1249  0615  1903               	skipnz
  1250  0616  2E1B               	goto	l1505
  1251  0617  3A0D               	xorlw	13	; case 105
  1252  0618  1903               	skipnz
  1253  0619  2E1B               	goto	l1505
  1254  061A  2EB4               	goto	l1543
  1255  061B                     l1505:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1258  061B  0826               	movf	sprintf@ap,w
  1259  061C  0084               	movwf	4
  1260  061D  1383               	bcf	3,7	;select IRP bank0
  1261  061E  0800               	movf	0,w
  1262  061F  00A9               	movwf	sprintf@val
  1263  0620  0A84               	incf	4,f
  1264  0621  0800               	movf	0,w
  1265  0622  00AA               	movwf	sprintf@val+1
  1266  0623                     l1507:
  1267  0623  3002               	movlw	2
  1268  0624  00A3               	movwf	??_sprintf
  1269  0625  0823               	movf	??_sprintf,w
  1270  0626  07A6               	addwf	sprintf@ap,f
  1271  0627                     l1509:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1274  0627  1FAA               	btfss	sprintf@val+1,7
  1275  0628  2E2A               	goto	u1051
  1276  0629  2E2B               	goto	u1050
  1277  062A                     u1051:
  1278  062A  2E34               	goto	l1515
  1279  062B                     u1050:
  1280  062B                     l1511:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1283  062B  3003               	movlw	3
  1284  062C  00A3               	movwf	??_sprintf
  1285  062D  0823               	movf	??_sprintf,w
  1286  062E  04A7               	iorwf	sprintf@flag,f
  1287  062F                     l1513:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1290  062F  09A9               	comf	sprintf@val,f
  1291  0630  09AA               	comf	sprintf@val+1,f
  1292  0631  0AA9               	incf	sprintf@val,f
  1293  0632  1903               	skipnz
  1294  0633  0AAA               	incf	sprintf@val+1,f
  1295  0634                     l1515:
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1298  0634  01AC               	clrf	sprintf@c
  1299  0635  0AAC               	incf	sprintf@c,f
  1300  0636                     l1521:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1303  0636  082C               	movf	sprintf@c,w
  1304  0637  00A3               	movwf	??_sprintf
  1305  0638  0723               	addwf	??_sprintf,w
  1306  0639  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1307  063A  0084               	movwf	4
  1308  063B  120A  118A  200D  120A  118A  	fcall	stringdir
  1309  0640  00A4               	movwf	??_sprintf+1
  1310  0641  120A  118A  200D  120A  118A  	fcall	stringdir
  1311  0646  00A5               	movwf	??_sprintf+2
  1312  0647  0825               	movf	??_sprintf+2,w
  1313  0648  022A               	subwf	sprintf@val+1,w
  1314  0649  1D03               	skipz
  1315  064A  2E4D               	goto	u1065
  1316  064B  0824               	movf	??_sprintf+1,w
  1317  064C  0229               	subwf	sprintf@val,w
  1318  064D                     u1065:
  1319  064D  1803               	skipnc
  1320  064E  2E50               	goto	u1061
  1321  064F  2E51               	goto	u1060
  1322  0650                     u1061:
  1323  0650  2E52               	goto	l1525
  1324  0651                     u1060:
  1325  0651  2E5C               	goto	l1527
  1326  0652                     l1525:
  1327  0652  3001               	movlw	1
  1328  0653  00A3               	movwf	??_sprintf
  1329  0654  0823               	movf	??_sprintf,w
  1330  0655  07AC               	addwf	sprintf@c,f
  1331  0656  3005               	movlw	5
  1332  0657  062C               	xorwf	sprintf@c,w
  1333  0658  1D03               	btfss	3,2
  1334  0659  2E5B               	goto	u1071
  1335  065A  2E5C               	goto	u1070
  1336  065B                     u1071:
  1337  065B  2E36               	goto	l1521
  1338  065C                     u1070:
  1339  065C                     l1527:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1342  065C  0827               	movf	sprintf@flag,w
  1343  065D  3903               	andlw	3
  1344  065E  1903               	btfsc	3,2
  1345  065F  2E61               	goto	u1081
  1346  0660  2E62               	goto	u1080
  1347  0661                     u1081:
  1348  0661  2E6D               	goto	l1533
  1349  0662                     u1080:
  1350  0662                     l1529:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1353  0662  302D               	movlw	45
  1354  0663  00A3               	movwf	??_sprintf
  1355  0664  082B               	movf	sprintf@sp,w
  1356  0665  0084               	movwf	4
  1357  0666  0823               	movf	??_sprintf,w
  1358  0667  1383               	bcf	3,7	;select IRP bank0
  1359  0668  0080               	movwf	0
  1360  0669                     l1531:
  1361  0669  3001               	movlw	1
  1362  066A  00A3               	movwf	??_sprintf
  1363  066B  0823               	movf	??_sprintf,w
  1364  066C  07AB               	addwf	sprintf@sp,f
  1365  066D                     l1533:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1368  066D  082C               	movf	sprintf@c,w
  1369  066E  00A3               	movwf	??_sprintf
  1370  066F  0823               	movf	??_sprintf,w
  1371  0670  00A8               	movwf	sprintf@prec
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1374  0671  2EAB               	goto	l1541
  1375  0672                     l1535:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1378  0672  300A               	movlw	10
  1379  0673  00F8               	movwf	___lwmod@divisor
  1380  0674  3000               	movlw	0
  1381  0675  00F9               	movwf	___lwmod@divisor+1
  1382  0676  0828               	movf	sprintf@prec,w
  1383  0677  00A3               	movwf	??_sprintf
  1384  0678  0723               	addwf	??_sprintf,w
  1385  0679  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1386  067A  0084               	movwf	4
  1387  067B  120A  118A  200D  120A  118A  	fcall	stringdir
  1388  0680  00F0               	movwf	___lwdiv@divisor
  1389  0681  120A  118A  200D  120A  118A  	fcall	stringdir
  1390  0686  00F1               	movwf	___lwdiv@divisor+1
  1391  0687  082A               	movf	sprintf@val+1,w
  1392  0688  00F3               	movwf	___lwdiv@dividend+1
  1393  0689  0829               	movf	sprintf@val,w
  1394  068A  00F2               	movwf	___lwdiv@dividend
  1395  068B  120A  118A  23B0  120A  118A  	fcall	___lwdiv
  1396  0690  0871               	movf	?___lwdiv+1,w
  1397  0691  00FB               	movwf	___lwmod@dividend+1
  1398  0692  0870               	movf	?___lwdiv,w
  1399  0693  00FA               	movwf	___lwmod@dividend
  1400  0694  120A  118A  2334  120A  118A  	fcall	___lwmod
  1401  0699  0878               	movf	?___lwmod,w
  1402  069A  3E30               	addlw	48
  1403  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1404  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1405  069D  00A4               	movwf	??_sprintf+1
  1406  069E  0824               	movf	??_sprintf+1,w
  1407  069F  00AC               	movwf	sprintf@c
  1408  06A0                     l1537:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1411  06A0  082C               	movf	sprintf@c,w
  1412  06A1  00A3               	movwf	??_sprintf
  1413  06A2  082B               	movf	sprintf@sp,w
  1414  06A3  0084               	movwf	4
  1415  06A4  0823               	movf	??_sprintf,w
  1416  06A5  1383               	bcf	3,7	;select IRP bank0
  1417  06A6  0080               	movwf	0
  1418  06A7                     l1539:
  1419  06A7  3001               	movlw	1
  1420  06A8  00A3               	movwf	??_sprintf
  1421  06A9  0823               	movf	??_sprintf,w
  1422  06AA  07AB               	addwf	sprintf@sp,f
  1423  06AB                     l1541:
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1426  06AB  30FF               	movlw	255
  1427  06AC  00A3               	movwf	??_sprintf
  1428  06AD  0823               	movf	??_sprintf,w
  1429  06AE  07A8               	addwf	sprintf@prec,f
  1430  06AF  0A28               	incf	sprintf@prec,w
  1431  06B0  1D03               	btfss	3,2
  1432  06B1  2EB3               	goto	u1091
  1433  06B2  2EB4               	goto	u1090
  1434  06B3                     u1091:
  1435  06B3  2E72               	goto	l1535
  1436  06B4                     u1090:
  1437  06B4                     l1543:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1440  06B4  3001               	movlw	1
  1441  06B5  07A0               	addwf	sprintf@f,f
  1442  06B6  30FF               	movlw	-1
  1443  06B7  0720               	addwf	sprintf@f,w
  1444  06B8  0084               	movwf	4
  1445  06B9  120A  118A  200D  120A  118A  	fcall	stringdir
  1446  06BE  00A3               	movwf	??_sprintf
  1447  06BF  0823               	movf	??_sprintf,w
  1448  06C0  00AC               	movwf	sprintf@c
  1449  06C1  082C               	movf	sprintf@c,w
  1450  06C2  1D03               	btfss	3,2
  1451  06C3  2EC5               	goto	u1101
  1452  06C4  2EC6               	goto	u1100
  1453  06C5                     u1101:
  1454  06C5  2DEB               	goto	l1493
  1455  06C6                     u1100:
  1456  06C6                     l1545:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1459  06C6  082B               	movf	sprintf@sp,w
  1460  06C7  0084               	movwf	4
  1461  06C8  1383               	bcf	3,7	;select IRP bank0
  1462  06C9  0180               	clrf	0
  1463  06CA                     l265:
  1464  06CA  0008               	return
  1465  06CB                     __end_of_sprintf:
  1466                           
  1467                           	psect	text2
  1468  0334                     __ptext2:	
  1469 ;; *************** function ___lwmod *****************
  1470 ;; Defined at:
  1471 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  divisor         2    8[COMMON] unsigned int 
  1474 ;;  dividend        2   10[COMMON] unsigned int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  counter         1   13[COMMON] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    8[COMMON] unsigned int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         4       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         6       0       0       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_sprintf
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function ___lwmod
  1501  0334                     ___lwmod:
  1502  0334                     l1421:	
  1503                           ;incstack = 0
  1504                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1505                           
  1506  0334  0878               	movf	___lwmod@divisor,w
  1507  0335  0479               	iorwf	___lwmod@divisor+1,w
  1508  0336  1903               	btfsc	3,2
  1509  0337  2B39               	goto	u971
  1510  0338  2B3A               	goto	u970
  1511  0339                     u971:
  1512  0339  2B69               	goto	l1439
  1513  033A                     u970:
  1514  033A                     l1423:
  1515  033A  01FD               	clrf	___lwmod@counter
  1516  033B  0AFD               	incf	___lwmod@counter,f
  1517  033C  2B48               	goto	l1429
  1518  033D                     l1425:
  1519  033D  3001               	movlw	1
  1520  033E                     u985:
  1521  033E  1003               	clrc
  1522  033F  0DF8               	rlf	___lwmod@divisor,f
  1523  0340  0DF9               	rlf	___lwmod@divisor+1,f
  1524  0341  3EFF               	addlw	-1
  1525  0342  1D03               	skipz
  1526  0343  2B3E               	goto	u985
  1527  0344                     l1427:
  1528  0344  3001               	movlw	1
  1529  0345  00FC               	movwf	??___lwmod
  1530  0346  087C               	movf	??___lwmod,w
  1531  0347  07FD               	addwf	___lwmod@counter,f
  1532  0348                     l1429:
  1533  0348  1FF9               	btfss	___lwmod@divisor+1,7
  1534  0349  2B4B               	goto	u991
  1535  034A  2B4C               	goto	u990
  1536  034B                     u991:
  1537  034B  2B3D               	goto	l1425
  1538  034C                     u990:
  1539  034C                     l1431:
  1540  034C  0879               	movf	___lwmod@divisor+1,w
  1541  034D  027B               	subwf	___lwmod@dividend+1,w
  1542  034E  1D03               	skipz
  1543  034F  2B52               	goto	u1005
  1544  0350  0878               	movf	___lwmod@divisor,w
  1545  0351  027A               	subwf	___lwmod@dividend,w
  1546  0352                     u1005:
  1547  0352  1C03               	skipc
  1548  0353  2B55               	goto	u1001
  1549  0354  2B56               	goto	u1000
  1550  0355                     u1001:
  1551  0355  2B5C               	goto	l1435
  1552  0356                     u1000:
  1553  0356                     l1433:
  1554  0356  0878               	movf	___lwmod@divisor,w
  1555  0357  02FA               	subwf	___lwmod@dividend,f
  1556  0358  0879               	movf	___lwmod@divisor+1,w
  1557  0359  1C03               	skipc
  1558  035A  03FB               	decf	___lwmod@dividend+1,f
  1559  035B  02FB               	subwf	___lwmod@dividend+1,f
  1560  035C                     l1435:
  1561  035C  3001               	movlw	1
  1562  035D                     u1015:
  1563  035D  1003               	clrc
  1564  035E  0CF9               	rrf	___lwmod@divisor+1,f
  1565  035F  0CF8               	rrf	___lwmod@divisor,f
  1566  0360  3EFF               	addlw	-1
  1567  0361  1D03               	skipz
  1568  0362  2B5D               	goto	u1015
  1569  0363                     l1437:
  1570  0363  3001               	movlw	1
  1571  0364  02FD               	subwf	___lwmod@counter,f
  1572  0365  1D03               	btfss	3,2
  1573  0366  2B68               	goto	u1021
  1574  0367  2B69               	goto	u1020
  1575  0368                     u1021:
  1576  0368  2B4C               	goto	l1431
  1577  0369                     u1020:
  1578  0369                     l1439:
  1579  0369  087B               	movf	___lwmod@dividend+1,w
  1580  036A  00F9               	movwf	?___lwmod+1
  1581  036B  087A               	movf	___lwmod@dividend,w
  1582  036C  00F8               	movwf	?___lwmod
  1583  036D                     l551:
  1584  036D  0008               	return
  1585  036E                     __end_of___lwmod:
  1586                           
  1587                           	psect	text3
  1588  03B0                     __ptext3:	
  1589 ;; *************** function ___lwdiv *****************
  1590 ;; Defined at:
  1591 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  divisor         2    0[COMMON] unsigned int 
  1594 ;;  dividend        2    2[COMMON] unsigned int 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  quotient        2    5[COMMON] unsigned int 
  1597 ;;  counter         1    7[COMMON] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2    0[COMMON] unsigned int 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         4       0       0       0       0
  1608 ;;      Locals:         3       0       0       0       0
  1609 ;;      Temps:          1       0       0       0       0
  1610 ;;      Totals:         8       0       0       0       0
  1611 ;;Total ram usage:        8 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_sprintf
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function ___lwdiv
  1622  03B0                     ___lwdiv:
  1623  03B0                     l1395:	
  1624                           ;incstack = 0
  1625                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1626                           
  1627  03B0  01F5               	clrf	___lwdiv@quotient
  1628  03B1  01F6               	clrf	___lwdiv@quotient+1
  1629  03B2                     l1397:
  1630  03B2  0870               	movf	___lwdiv@divisor,w
  1631  03B3  0471               	iorwf	___lwdiv@divisor+1,w
  1632  03B4  1903               	btfsc	3,2
  1633  03B5  2BB7               	goto	u901
  1634  03B6  2BB8               	goto	u900
  1635  03B7                     u901:
  1636  03B7  2BEF               	goto	l1417
  1637  03B8                     u900:
  1638  03B8                     l1399:
  1639  03B8  01F7               	clrf	___lwdiv@counter
  1640  03B9  0AF7               	incf	___lwdiv@counter,f
  1641  03BA  2BC6               	goto	l1405
  1642  03BB                     l1401:
  1643  03BB  3001               	movlw	1
  1644  03BC                     u915:
  1645  03BC  1003               	clrc
  1646  03BD  0DF0               	rlf	___lwdiv@divisor,f
  1647  03BE  0DF1               	rlf	___lwdiv@divisor+1,f
  1648  03BF  3EFF               	addlw	-1
  1649  03C0  1D03               	skipz
  1650  03C1  2BBC               	goto	u915
  1651  03C2                     l1403:
  1652  03C2  3001               	movlw	1
  1653  03C3  00F4               	movwf	??___lwdiv
  1654  03C4  0874               	movf	??___lwdiv,w
  1655  03C5  07F7               	addwf	___lwdiv@counter,f
  1656  03C6                     l1405:
  1657  03C6  1FF1               	btfss	___lwdiv@divisor+1,7
  1658  03C7  2BC9               	goto	u921
  1659  03C8  2BCA               	goto	u920
  1660  03C9                     u921:
  1661  03C9  2BBB               	goto	l1401
  1662  03CA                     u920:
  1663  03CA                     l1407:
  1664  03CA  3001               	movlw	1
  1665  03CB                     u935:
  1666  03CB  1003               	clrc
  1667  03CC  0DF5               	rlf	___lwdiv@quotient,f
  1668  03CD  0DF6               	rlf	___lwdiv@quotient+1,f
  1669  03CE  3EFF               	addlw	-1
  1670  03CF  1D03               	skipz
  1671  03D0  2BCB               	goto	u935
  1672  03D1  0871               	movf	___lwdiv@divisor+1,w
  1673  03D2  0273               	subwf	___lwdiv@dividend+1,w
  1674  03D3  1D03               	skipz
  1675  03D4  2BD7               	goto	u945
  1676  03D5  0870               	movf	___lwdiv@divisor,w
  1677  03D6  0272               	subwf	___lwdiv@dividend,w
  1678  03D7                     u945:
  1679  03D7  1C03               	skipc
  1680  03D8  2BDA               	goto	u941
  1681  03D9  2BDB               	goto	u940
  1682  03DA                     u941:
  1683  03DA  2BE2               	goto	l1413
  1684  03DB                     u940:
  1685  03DB                     l1409:
  1686  03DB  0870               	movf	___lwdiv@divisor,w
  1687  03DC  02F2               	subwf	___lwdiv@dividend,f
  1688  03DD  0871               	movf	___lwdiv@divisor+1,w
  1689  03DE  1C03               	skipc
  1690  03DF  03F3               	decf	___lwdiv@dividend+1,f
  1691  03E0  02F3               	subwf	___lwdiv@dividend+1,f
  1692  03E1                     l1411:
  1693  03E1  1475               	bsf	___lwdiv@quotient,0
  1694  03E2                     l1413:
  1695  03E2  3001               	movlw	1
  1696  03E3                     u955:
  1697  03E3  1003               	clrc
  1698  03E4  0CF1               	rrf	___lwdiv@divisor+1,f
  1699  03E5  0CF0               	rrf	___lwdiv@divisor,f
  1700  03E6  3EFF               	addlw	-1
  1701  03E7  1D03               	skipz
  1702  03E8  2BE3               	goto	u955
  1703  03E9                     l1415:
  1704  03E9  3001               	movlw	1
  1705  03EA  02F7               	subwf	___lwdiv@counter,f
  1706  03EB  1D03               	btfss	3,2
  1707  03EC  2BEE               	goto	u961
  1708  03ED  2BEF               	goto	u960
  1709  03EE                     u961:
  1710  03EE  2BCA               	goto	l1407
  1711  03EF                     u960:
  1712  03EF                     l1417:
  1713  03EF  0876               	movf	___lwdiv@quotient+1,w
  1714  03F0  00F1               	movwf	?___lwdiv+1
  1715  03F1  0875               	movf	___lwdiv@quotient,w
  1716  03F2  00F0               	movwf	?___lwdiv
  1717  03F3                     l541:
  1718  03F3  0008               	return
  1719  03F4                     __end_of___lwdiv:
  1720                           
  1721                           	psect	text4
  1722  02FB                     __ptext4:	
  1723 ;; *************** function _setup *****************
  1724 ;; Defined at:
  1725 ;;		line 39 in file "Master_Test.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    2
  1746 ;; This function calls:
  1747 ;;		_I2C_Master_Init
  1748 ;;		_Lcd_Clear
  1749 ;;		_Lcd_Init
  1750 ;;		_Lcd_Set_Cursor
  1751 ;;		_Lcd_Write_String
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _setup
  1759  02FB                     _setup:
  1760  02FB                     l1473:	
  1761                           ;incstack = 0
  1762                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1763                           
  1764                           
  1765                           ;Master_Test.c: 40:     ANSEL = 0x00;
  1766  02FB  1683               	bsf	3,5	;RP0=1, select bank3
  1767  02FC  1703               	bsf	3,6	;RP1=1, select bank3
  1768  02FD  0188               	clrf	8	;volatile
  1769                           
  1770                           ;Master_Test.c: 41:     ANSELH = 0x00;
  1771  02FE  0189               	clrf	9	;volatile
  1772                           
  1773                           ;Master_Test.c: 43:     TRISA = 0x00;
  1774  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1776  0301  0185               	clrf	5	;volatile
  1777                           
  1778                           ;Master_Test.c: 44:     TRISB = 0x00;
  1779  0302  0186               	clrf	6	;volatile
  1780                           
  1781                           ;Master_Test.c: 45:     TRISC = 0x00;
  1782  0303  0187               	clrf	7	;volatile
  1783                           
  1784                           ;Master_Test.c: 46:     TRISD = 0x00;
  1785  0304  0188               	clrf	8	;volatile
  1786  0305                     l1475:
  1787                           
  1788                           ;Master_Test.c: 48:     OSCCONbits.IRCF = 0B111;
  1789  0305  3070               	movlw	112
  1790  0306  048F               	iorwf	15,f	;volatile
  1791  0307                     l1477:
  1792                           
  1793                           ;Master_Test.c: 49:     OSCCONbits.OSTS = 0;
  1794  0307  118F               	bcf	15,3	;volatile
  1795  0308                     l1479:
  1796                           
  1797                           ;Master_Test.c: 50:     OSCCONbits.SCS = 1;
  1798  0308  140F               	bsf	15,0	;volatile
  1799  0309                     l1481:
  1800                           
  1801                           ;Master_Test.c: 52:     I2C_Master_Init(100000);
  1802  0309  3000               	movlw	0
  1803  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1804  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1805  030C  00A3               	movwf	I2C_Master_Init@c+3
  1806  030D  3001               	movlw	1
  1807  030E  00A2               	movwf	I2C_Master_Init@c+2
  1808  030F  3086               	movlw	134
  1809  0310  00A1               	movwf	I2C_Master_Init@c+1
  1810  0311  30A0               	movlw	160
  1811  0312  00A0               	movwf	I2C_Master_Init@c
  1812  0313  120A  118A  22C3  120A  118A  	fcall	_I2C_Master_Init
  1813  0318                     l1483:
  1814                           
  1815                           ;Master_Test.c: 53:     Lcd_Init();
  1816  0318  120A  118A  244D  120A  118A  	fcall	_Lcd_Init
  1817  031D                     l1485:
  1818                           
  1819                           ;Master_Test.c: 54:     Lcd_Clear();
  1820  031D  120A  118A  2246  120A  118A  	fcall	_Lcd_Clear
  1821  0322                     l1487:
  1822                           
  1823                           ;Master_Test.c: 55:     Lcd_Set_Cursor(1,1);
  1824  0322  01F3               	clrf	Lcd_Set_Cursor@b
  1825  0323  0AF3               	incf	Lcd_Set_Cursor@b,f
  1826  0324  3001               	movlw	1
  1827  0325  120A  118A  2277  120A  118A  	fcall	_Lcd_Set_Cursor
  1828  032A                     l1489:
  1829                           
  1830                           ;Master_Test.c: 56:     Lcd_Write_String("Pot:  Con: ");
  1831  032A  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1832  032B  00F2               	movwf	Lcd_Write_String@a
  1833  032C  3080               	movlw	128
  1834  032D  00F3               	movwf	Lcd_Write_String@a+1
  1835  032E  120A  118A  236E  120A  118A  	fcall	_Lcd_Write_String
  1836  0333                     l109:
  1837  0333  0008               	return
  1838  0334                     __end_of_setup:
  1839                           
  1840                           	psect	text5
  1841  036E                     __ptext5:	
  1842 ;; *************** function _Lcd_Write_String *****************
  1843 ;; Defined at:
  1844 ;;		line 73 in file "LCD.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  a               2    2[COMMON] PTR unsigned char 
  1847 ;;		 -> buffer(1), STR_1(12), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  i               2    7[COMMON] int 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         2       0       0       0       0
  1860 ;;      Locals:         2       0       0       0       0
  1861 ;;      Temps:          3       0       0       0       0
  1862 ;;      Totals:         7       0       0       0       0
  1863 ;;Total ram usage:        7 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    1
  1866 ;; This function calls:
  1867 ;;		_Lcd_Write_Char
  1868 ;; This function is called by:
  1869 ;;		_setup
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _Lcd_Write_String
  1876  036E                     _Lcd_Write_String:
  1877  036E                     l1305:	
  1878                           ;incstack = 0
  1879                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1880                           
  1881                           
  1882                           ;LCD.c: 74:     int i;;LCD.c: 75:     for (i = 0; a[i] != '\0'; i++)
  1883  036E  01F7               	clrf	Lcd_Write_String@i
  1884  036F  01F8               	clrf	Lcd_Write_String@i+1
  1885  0370  2B93               	goto	l1311
  1886  0371                     l1307:
  1887                           
  1888                           ;LCD.c: 76:         Lcd_Write_Char(a[i]);
  1889  0371  0877               	movf	Lcd_Write_String@i,w
  1890  0372  0772               	addwf	Lcd_Write_String@a,w
  1891  0373  00F5               	movwf	??_Lcd_Write_String+1
  1892  0374  0873               	movf	Lcd_Write_String@a+1,w
  1893  0375  00F4               	movwf	??_Lcd_Write_String
  1894  0376  1803               	skipnc
  1895  0377  0AF4               	incf	??_Lcd_Write_String,f
  1896  0378  1FF7               	btfss	Lcd_Write_String@i,7
  1897  0379  2B7B               	goto	u680
  1898  037A  03F4               	decf	??_Lcd_Write_String,f
  1899  037B                     u680:
  1900  037B  0874               	movf	??_Lcd_Write_String,w
  1901  037C  00F6               	movwf	??_Lcd_Write_String+2
  1902  037D  0876               	movf	??_Lcd_Write_String+2,w
  1903  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1904  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0380  00FF               	movwf	btemp+1
  1906  0381  0875               	movf	??_Lcd_Write_String+1,w
  1907  0382  0084               	movwf	4
  1908  0383  120A  118A  2003  120A  118A  	fcall	stringtab
  1909  0388  120A  118A  2253  120A  118A  	fcall	_Lcd_Write_Char
  1910  038D                     l1309:
  1911  038D  3001               	movlw	1
  1912  038E  07F7               	addwf	Lcd_Write_String@i,f
  1913  038F  1803               	skipnc
  1914  0390  0AF8               	incf	Lcd_Write_String@i+1,f
  1915  0391  3000               	movlw	0
  1916  0392  07F8               	addwf	Lcd_Write_String@i+1,f
  1917  0393                     l1311:
  1918  0393  0877               	movf	Lcd_Write_String@i,w
  1919  0394  0772               	addwf	Lcd_Write_String@a,w
  1920  0395  00F5               	movwf	??_Lcd_Write_String+1
  1921  0396  0873               	movf	Lcd_Write_String@a+1,w
  1922  0397  00F4               	movwf	??_Lcd_Write_String
  1923  0398  1803               	skipnc
  1924  0399  0AF4               	incf	??_Lcd_Write_String,f
  1925  039A  1FF7               	btfss	Lcd_Write_String@i,7
  1926  039B  2B9D               	goto	u690
  1927  039C  03F4               	decf	??_Lcd_Write_String,f
  1928  039D                     u690:
  1929  039D  0874               	movf	??_Lcd_Write_String,w
  1930  039E  00F6               	movwf	??_Lcd_Write_String+2
  1931  039F  0876               	movf	??_Lcd_Write_String+2,w
  1932  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1933  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1934  03A2  00FF               	movwf	btemp+1
  1935  03A3  0875               	movf	??_Lcd_Write_String+1,w
  1936  03A4  0084               	movwf	4
  1937  03A5  120A  118A  2003  120A  118A  	fcall	stringtab
  1938  03AA  3A00               	xorlw	0
  1939  03AB  1D03               	skipz
  1940  03AC  2BAE               	goto	u701
  1941  03AD  2BAF               	goto	u700
  1942  03AE                     u701:
  1943  03AE  2B71               	goto	l1307
  1944  03AF                     u700:
  1945  03AF                     l149:
  1946  03AF  0008               	return
  1947  03B0                     __end_of_Lcd_Write_String:
  1948                           
  1949                           	psect	text6
  1950  0253                     __ptext6:	
  1951 ;; *************** function _Lcd_Write_Char *****************
  1952 ;; Defined at:
  1953 ;;		line 59 in file "LCD.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  a               1    wreg     unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  a               1    1[COMMON] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         0       0       0       0       0
  1968 ;;      Locals:         1       0       0       0       0
  1969 ;;      Temps:          1       0       0       0       0
  1970 ;;      Totals:         2       0       0       0       0
  1971 ;;Total ram usage:        2 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		_Lcd_Write_String
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _Lcd_Write_Char
  1982  0253                     _Lcd_Write_Char:
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _Lcd_Write_Char: [wreg]
  1986                           ;Lcd_Write_Char@a stored from wreg
  1987  0253  00F1               	movwf	Lcd_Write_Char@a
  1988  0254                     l1219:
  1989                           
  1990                           ;LCD.c: 62:     RC6 = 1;
  1991  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0256  1707               	bsf	7,6	;volatile
  1994  0257                     l1221:
  1995                           
  1996                           ;LCD.c: 63:     PORTD = a;
  1997  0257  0871               	movf	Lcd_Write_Char@a,w
  1998  0258  0088               	movwf	8	;volatile
  1999  0259                     l1223:
  2000                           
  2001                           ;LCD.c: 64:     RC7 = 1;
  2002  0259  1787               	bsf	7,7	;volatile
  2003                           
  2004                           ;LCD.c: 65:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2005  025A  301A               	movlw	26
  2006  025B  00F0               	movwf	??_Lcd_Write_Char
  2007  025C                     u1137:
  2008  025C  0BF0               	decfsz	??_Lcd_Write_Char,f
  2009  025D  2A5C               	goto	u1137
  2010  025E  0000               	nop
  2011  025F                     l1225:
  2012                           
  2013                           ;LCD.c: 70:     RC7 = 0;
  2014  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0261  1387               	bcf	7,7	;volatile
  2017  0262                     l143:
  2018  0262  0008               	return
  2019  0263                     __end_of_Lcd_Write_Char:
  2020                           
  2021                           	psect	text7
  2022  0277                     __ptext7:	
  2023 ;; *************** function _Lcd_Set_Cursor *****************
  2024 ;; Defined at:
  2025 ;;		line 30 in file "LCD.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  a               1    wreg     unsigned char 
  2028 ;;  b               1    3[COMMON] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  a               1    4[COMMON] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         1       0       0       0       0
  2041 ;;      Locals:         1       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         2       0       0       0       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    1
  2047 ;; This function calls:
  2048 ;;		_Lcd_Cmd
  2049 ;; This function is called by:
  2050 ;;		_setup
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _Lcd_Set_Cursor
  2057  0277                     _Lcd_Set_Cursor:
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2061                           ;Lcd_Set_Cursor@a stored from wreg
  2062  0277  00F4               	movwf	Lcd_Set_Cursor@a
  2063  0278                     l1297:
  2064                           
  2065                           ;LCD.c: 31:     if (a == 1){
  2066  0278  0374               	decf	Lcd_Set_Cursor@a,w
  2067  0279  1D03               	btfss	3,2
  2068  027A  2A7C               	goto	u661
  2069  027B  2A7D               	goto	u660
  2070  027C                     u661:
  2071  027C  2A86               	goto	l1301
  2072  027D                     u660:
  2073  027D                     l1299:
  2074                           
  2075                           ;LCD.c: 32:         Lcd_Cmd((b & 0x0F)|0x80);
  2076  027D  0873               	movf	Lcd_Set_Cursor@b,w
  2077  027E  390F               	andlw	15
  2078  027F  3880               	iorlw	128
  2079  0280  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2080                           
  2081                           ;LCD.c: 33:     }
  2082  0285  2A94               	goto	l137
  2083  0286                     l1301:
  2084  0286  3002               	movlw	2
  2085  0287  0674               	xorwf	Lcd_Set_Cursor@a,w
  2086  0288  1D03               	btfss	3,2
  2087  0289  2A8B               	goto	u671
  2088  028A  2A8C               	goto	u670
  2089  028B                     u671:
  2090  028B  2A94               	goto	l137
  2091  028C                     u670:
  2092  028C                     l1303:
  2093                           
  2094                           ;LCD.c: 35:         Lcd_Cmd((b & 0x0F)|0xC0);
  2095  028C  0873               	movf	Lcd_Set_Cursor@b,w
  2096  028D  390F               	andlw	15
  2097  028E  38C0               	iorlw	192
  2098  028F  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2099  0294                     l137:
  2100  0294  0008               	return
  2101  0295                     __end_of_Lcd_Set_Cursor:
  2102                           
  2103                           	psect	text8
  2104  044D                     __ptext8:	
  2105 ;; *************** function _Lcd_Init *****************
  2106 ;; Defined at:
  2107 ;;		line 40 in file "LCD.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0
  2123 ;;      Temps:          3       0       0       0       0
  2124 ;;      Totals:         3       0       0       0       0
  2125 ;;Total ram usage:        3 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    1
  2128 ;; This function calls:
  2129 ;;		_Lcd_Cmd
  2130 ;; This function is called by:
  2131 ;;		_setup
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _Lcd_Init
  2137  044D                     _Lcd_Init:
  2138  044D                     l1267:	
  2139                           ;incstack = 0
  2140                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2141                           
  2142                           
  2143                           ;LCD.c: 41:     PORTD = (0x00);
  2144  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2145  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2146  044F  0188               	clrf	8	;volatile
  2147  0450                     l1269:
  2148                           
  2149                           ;LCD.c: 42:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2150  0450  3034               	movlw	52
  2151  0451  00F4               	movwf	??_Lcd_Init+1
  2152  0452  30F1               	movlw	241
  2153  0453  00F3               	movwf	??_Lcd_Init
  2154  0454                     u1147:
  2155  0454  0BF3               	decfsz	??_Lcd_Init,f
  2156  0455  2C54               	goto	u1147
  2157  0456  0BF4               	decfsz	??_Lcd_Init+1,f
  2158  0457  2C54               	goto	u1147
  2159  0458  2C59               	nop2
  2160  0459                     l1271:
  2161                           
  2162                           ;LCD.c: 43:     Lcd_Cmd(0x30);
  2163  0459  3030               	movlw	48
  2164  045A  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2165  045F                     l1273:
  2166                           
  2167                           ;LCD.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2168  045F  300D               	movlw	13
  2169  0460  00F4               	movwf	??_Lcd_Init+1
  2170  0461  30FB               	movlw	251
  2171  0462  00F3               	movwf	??_Lcd_Init
  2172  0463                     u1157:
  2173  0463  0BF3               	decfsz	??_Lcd_Init,f
  2174  0464  2C63               	goto	u1157
  2175  0465  0BF4               	decfsz	??_Lcd_Init+1,f
  2176  0466  2C63               	goto	u1157
  2177  0467  2C68               	nop2
  2178  0468                     l1275:
  2179                           
  2180                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  2181  0468  3030               	movlw	48
  2182  0469  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2183  046E                     l1277:
  2184                           
  2185                           ;LCD.c: 46:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2186  046E  301D               	movlw	29
  2187  046F  00F4               	movwf	??_Lcd_Init+1
  2188  0470  3091               	movlw	145
  2189  0471  00F3               	movwf	??_Lcd_Init
  2190  0472                     u1167:
  2191  0472  0BF3               	decfsz	??_Lcd_Init,f
  2192  0473  2C72               	goto	u1167
  2193  0474  0BF4               	decfsz	??_Lcd_Init+1,f
  2194  0475  2C72               	goto	u1167
  2195  0476                     l1279:
  2196                           
  2197                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  2198  0476  3030               	movlw	48
  2199  0477  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2200  047C                     l1281:
  2201                           
  2202                           ;LCD.c: 49:     Lcd_Cmd(0x38);
  2203  047C  3038               	movlw	56
  2204  047D  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2205  0482                     l1283:
  2206                           
  2207                           ;LCD.c: 50:     Lcd_Cmd(0x10);
  2208  0482  3010               	movlw	16
  2209  0483  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2210  0488                     l1285:
  2211                           
  2212                           ;LCD.c: 51:     Lcd_Cmd(0x01);
  2213  0488  3001               	movlw	1
  2214  0489  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2215  048E                     l1287:
  2216                           
  2217                           ;LCD.c: 52:     Lcd_Cmd(0x06);
  2218  048E  3006               	movlw	6
  2219  048F  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2220  0494                     l1289:
  2221                           
  2222                           ;LCD.c: 53:     Lcd_Cmd(0x10);
  2223  0494  3010               	movlw	16
  2224  0495  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2225  049A                     l1291:
  2226                           
  2227                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  2228  049A  300C               	movlw	12
  2229  049B  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2230  04A0                     l1293:
  2231                           
  2232                           ;LCD.c: 55:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2233  04A0  3002               	movlw	2
  2234  04A1  00F5               	movwf	??_Lcd_Init+2
  2235  04A2  3004               	movlw	4
  2236  04A3  00F4               	movwf	??_Lcd_Init+1
  2237  04A4  30BA               	movlw	186
  2238  04A5  00F3               	movwf	??_Lcd_Init
  2239  04A6                     u1177:
  2240  04A6  0BF3               	decfsz	??_Lcd_Init,f
  2241  04A7  2CA6               	goto	u1177
  2242  04A8  0BF4               	decfsz	??_Lcd_Init+1,f
  2243  04A9  2CA6               	goto	u1177
  2244  04AA  0BF5               	decfsz	??_Lcd_Init+2,f
  2245  04AB  2CA6               	goto	u1177
  2246  04AC  0000               	nop
  2247  04AD                     l140:
  2248  04AD  0008               	return
  2249  04AE                     __end_of_Lcd_Init:
  2250                           
  2251                           	psect	text9
  2252  0246                     __ptext9:	
  2253 ;; *************** function _Lcd_Clear *****************
  2254 ;; Defined at:
  2255 ;;		line 25 in file "LCD.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    1
  2276 ;; This function calls:
  2277 ;;		_Lcd_Cmd
  2278 ;; This function is called by:
  2279 ;;		_setup
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _Lcd_Clear
  2285  0246                     _Lcd_Clear:
  2286  0246                     l1295:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2289                           
  2290                           
  2291                           ;LCD.c: 26:     Lcd_Cmd(0);
  2292  0246  3000               	movlw	0
  2293  0247  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2294                           
  2295                           ;LCD.c: 27:     Lcd_Cmd(1);
  2296  024C  3001               	movlw	1
  2297  024D  120A  118A  2263  120A  118A  	fcall	_Lcd_Cmd
  2298  0252                     l131:
  2299  0252  0008               	return
  2300  0253                     __end_of_Lcd_Clear:
  2301                           
  2302                           	psect	text10
  2303  0263                     __ptext10:	
  2304 ;; *************** function _Lcd_Cmd *****************
  2305 ;; Defined at:
  2306 ;;		line 17 in file "LCD.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  a               1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  a               1    2[COMMON] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         1       0       0       0       0
  2322 ;;      Temps:          2       0       0       0       0
  2323 ;;      Totals:         3       0       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_Lcd_Clear
  2330 ;;		_Lcd_Set_Cursor
  2331 ;;		_Lcd_Init
  2332 ;;		_Lcd_Shift_Right
  2333 ;;		_Lcd_Shift_Left
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _Lcd_Cmd
  2339  0263                     _Lcd_Cmd:
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _Lcd_Cmd: [wreg]
  2343                           ;Lcd_Cmd@a stored from wreg
  2344  0263  00F2               	movwf	Lcd_Cmd@a
  2345  0264                     l1211:
  2346                           
  2347                           ;LCD.c: 18:     RC6 = 0;
  2348  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0266  1307               	bcf	7,6	;volatile
  2351  0267                     l1213:
  2352                           
  2353                           ;LCD.c: 19:     PORTD = a;
  2354  0267  0872               	movf	Lcd_Cmd@a,w
  2355  0268  0088               	movwf	8	;volatile
  2356  0269                     l1215:
  2357                           
  2358                           ;LCD.c: 20:     RC7 = 1;
  2359  0269  1787               	bsf	7,7	;volatile
  2360                           
  2361                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2362  026A  300D               	movlw	13
  2363  026B  00F1               	movwf	??_Lcd_Cmd+1
  2364  026C  30FB               	movlw	251
  2365  026D  00F0               	movwf	??_Lcd_Cmd
  2366  026E                     u1187:
  2367  026E  0BF0               	decfsz	??_Lcd_Cmd,f
  2368  026F  2A6E               	goto	u1187
  2369  0270  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2370  0271  2A6E               	goto	u1187
  2371  0272  2A73               	nop2
  2372  0273                     l1217:
  2373                           
  2374                           ;LCD.c: 22:     RC7 = 0;
  2375  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0275  1387               	bcf	7,7	;volatile
  2378  0276                     l128:
  2379  0276  0008               	return
  2380  0277                     __end_of_Lcd_Cmd:
  2381                           
  2382                           	psect	text11
  2383  02C3                     __ptext11:	
  2384 ;; *************** function _I2C_Master_Init *****************
  2385 ;; Defined at:
  2386 ;;		line 16 in file "I2C.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  c               4    0[BANK0 ] const unsigned long 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       4       0       0       0
  2401 ;;      Locals:         0       0       0       0       0
  2402 ;;      Temps:          0       4       0       0       0
  2403 ;;      Totals:         0       8       0       0       0
  2404 ;;Total ram usage:        8 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		___lldiv
  2409 ;; This function is called by:
  2410 ;;		_setup
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _I2C_Master_Init
  2416  02C3                     _I2C_Master_Init:
  2417  02C3                     l1251:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2420                           
  2421                           
  2422                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2423  02C3  3028               	movlw	40
  2424  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2425  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2426  02C6  0094               	movwf	20	;volatile
  2427  02C7                     l1253:
  2428                           
  2429                           ;I2C.c: 19:     SSPCON2 = 0;
  2430  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2431  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2432  02C9  0191               	clrf	17	;volatile
  2433  02CA                     l1255:
  2434                           
  2435                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2436  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2437  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2438  02CC  0820               	movf	I2C_Master_Init@c,w
  2439  02CD  00A4               	movwf	??_I2C_Master_Init
  2440  02CE  0821               	movf	I2C_Master_Init@c+1,w
  2441  02CF  00A5               	movwf	??_I2C_Master_Init+1
  2442  02D0  0822               	movf	I2C_Master_Init@c+2,w
  2443  02D1  00A6               	movwf	??_I2C_Master_Init+2
  2444  02D2  0823               	movf	I2C_Master_Init@c+3,w
  2445  02D3  00A7               	movwf	??_I2C_Master_Init+3
  2446  02D4  3002               	movlw	2
  2447  02D5                     u635:
  2448  02D5  1003               	clrc
  2449  02D6  0DA4               	rlf	??_I2C_Master_Init,f
  2450  02D7  0DA5               	rlf	??_I2C_Master_Init+1,f
  2451  02D8  0DA6               	rlf	??_I2C_Master_Init+2,f
  2452  02D9  0DA7               	rlf	??_I2C_Master_Init+3,f
  2453  02DA                     u630:
  2454  02DA  3EFF               	addlw	-1
  2455  02DB  1D03               	skipz
  2456  02DC  2AD5               	goto	u635
  2457  02DD  0827               	movf	??_I2C_Master_Init+3,w
  2458  02DE  00F3               	movwf	___lldiv@divisor+3
  2459  02DF  0826               	movf	??_I2C_Master_Init+2,w
  2460  02E0  00F2               	movwf	___lldiv@divisor+2
  2461  02E1  0825               	movf	??_I2C_Master_Init+1,w
  2462  02E2  00F1               	movwf	___lldiv@divisor+1
  2463  02E3  0824               	movf	??_I2C_Master_Init,w
  2464  02E4  00F0               	movwf	___lldiv@divisor
  2465  02E5  3000               	movlw	0
  2466  02E6  00F7               	movwf	___lldiv@dividend+3
  2467  02E7  307A               	movlw	122
  2468  02E8  00F6               	movwf	___lldiv@dividend+2
  2469  02E9  3012               	movlw	18
  2470  02EA  00F5               	movwf	___lldiv@dividend+1
  2471  02EB  3000               	movlw	0
  2472  02EC  00F4               	movwf	___lldiv@dividend
  2473  02ED  120A  118A  2514  120A  118A  	fcall	___lldiv
  2474  02F2  0870               	movf	?___lldiv,w
  2475  02F3  3EFF               	addlw	255
  2476  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2477  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2478  02F6  0093               	movwf	19	;volatile
  2479  02F7                     l1257:
  2480                           
  2481                           ;I2C.c: 21:     SSPSTAT = 0;
  2482  02F7  0194               	clrf	20	;volatile
  2483  02F8                     l1259:
  2484                           
  2485                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2486  02F8  1587               	bsf	7,3	;volatile
  2487  02F9                     l1261:
  2488                           
  2489                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2490  02F9  1607               	bsf	7,4	;volatile
  2491  02FA                     l29:
  2492  02FA  0008               	return
  2493  02FB                     __end_of_I2C_Master_Init:
  2494                           
  2495                           	psect	text12
  2496  0514                     __ptext12:	
  2497 ;; *************** function ___lldiv *****************
  2498 ;; Defined at:
  2499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  divisor         4    0[COMMON] unsigned long 
  2502 ;;  dividend        4    4[COMMON] unsigned long 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  quotient        4    9[COMMON] unsigned long 
  2505 ;;  counter         1   13[COMMON] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  4    0[COMMON] unsigned long 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         8       0       0       0       0
  2516 ;;      Locals:         5       0       0       0       0
  2517 ;;      Temps:          1       0       0       0       0
  2518 ;;      Totals:        14       0       0       0       0
  2519 ;;Total ram usage:       14 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_I2C_Master_Init
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function ___lldiv
  2530  0514                     ___lldiv:
  2531  0514                     l1227:	
  2532                           ;incstack = 0
  2533                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2534                           
  2535  0514  3000               	movlw	0
  2536  0515  00FC               	movwf	___lldiv@quotient+3
  2537  0516  3000               	movlw	0
  2538  0517  00FB               	movwf	___lldiv@quotient+2
  2539  0518  3000               	movlw	0
  2540  0519  00FA               	movwf	___lldiv@quotient+1
  2541  051A  3000               	movlw	0
  2542  051B  00F9               	movwf	___lldiv@quotient
  2543  051C  0873               	movf	___lldiv@divisor+3,w
  2544  051D  0472               	iorwf	___lldiv@divisor+2,w
  2545  051E  0471               	iorwf	___lldiv@divisor+1,w
  2546  051F  0470               	iorwf	___lldiv@divisor,w
  2547  0520  1903               	skipnz
  2548  0521  2D23               	goto	u561
  2549  0522  2D24               	goto	u560
  2550  0523                     u561:
  2551  0523  2D71               	goto	l1247
  2552  0524                     u560:
  2553  0524                     l1229:
  2554  0524  01FD               	clrf	___lldiv@counter
  2555  0525  0AFD               	incf	___lldiv@counter,f
  2556  0526  2D34               	goto	l1233
  2557  0527                     l1231:
  2558  0527  3001               	movlw	1
  2559  0528  00F8               	movwf	??___lldiv
  2560  0529                     u575:
  2561  0529  1003               	clrc
  2562  052A  0DF0               	rlf	___lldiv@divisor,f
  2563  052B  0DF1               	rlf	___lldiv@divisor+1,f
  2564  052C  0DF2               	rlf	___lldiv@divisor+2,f
  2565  052D  0DF3               	rlf	___lldiv@divisor+3,f
  2566  052E  0BF8               	decfsz	??___lldiv,f
  2567  052F  2D29               	goto	u575
  2568  0530  3001               	movlw	1
  2569  0531  00F8               	movwf	??___lldiv
  2570  0532  0878               	movf	??___lldiv,w
  2571  0533  07FD               	addwf	___lldiv@counter,f
  2572  0534                     l1233:
  2573  0534  1FF3               	btfss	___lldiv@divisor+3,7
  2574  0535  2D37               	goto	u581
  2575  0536  2D38               	goto	u580
  2576  0537                     u581:
  2577  0537  2D27               	goto	l1231
  2578  0538                     u580:
  2579  0538                     l1235:
  2580  0538  3001               	movlw	1
  2581  0539  00F8               	movwf	??___lldiv
  2582  053A                     u595:
  2583  053A  1003               	clrc
  2584  053B  0DF9               	rlf	___lldiv@quotient,f
  2585  053C  0DFA               	rlf	___lldiv@quotient+1,f
  2586  053D  0DFB               	rlf	___lldiv@quotient+2,f
  2587  053E  0DFC               	rlf	___lldiv@quotient+3,f
  2588  053F  0BF8               	decfsz	??___lldiv,f
  2589  0540  2D3A               	goto	u595
  2590  0541                     l1237:
  2591  0541  0873               	movf	___lldiv@divisor+3,w
  2592  0542  0277               	subwf	___lldiv@dividend+3,w
  2593  0543  1D03               	skipz
  2594  0544  2D4F               	goto	u605
  2595  0545  0872               	movf	___lldiv@divisor+2,w
  2596  0546  0276               	subwf	___lldiv@dividend+2,w
  2597  0547  1D03               	skipz
  2598  0548  2D4F               	goto	u605
  2599  0549  0871               	movf	___lldiv@divisor+1,w
  2600  054A  0275               	subwf	___lldiv@dividend+1,w
  2601  054B  1D03               	skipz
  2602  054C  2D4F               	goto	u605
  2603  054D  0870               	movf	___lldiv@divisor,w
  2604  054E  0274               	subwf	___lldiv@dividend,w
  2605  054F                     u605:
  2606  054F  1C03               	skipc
  2607  0550  2D52               	goto	u601
  2608  0551  2D53               	goto	u600
  2609  0552                     u601:
  2610  0552  2D62               	goto	l1243
  2611  0553                     u600:
  2612  0553                     l1239:
  2613  0553  0870               	movf	___lldiv@divisor,w
  2614  0554  02F4               	subwf	___lldiv@dividend,f
  2615  0555  0871               	movf	___lldiv@divisor+1,w
  2616  0556  1C03               	skipc
  2617  0557  0F71               	incfsz	___lldiv@divisor+1,w
  2618  0558  02F5               	subwf	___lldiv@dividend+1,f
  2619  0559  0872               	movf	___lldiv@divisor+2,w
  2620  055A  1C03               	skipc
  2621  055B  0F72               	incfsz	___lldiv@divisor+2,w
  2622  055C  02F6               	subwf	___lldiv@dividend+2,f
  2623  055D  0873               	movf	___lldiv@divisor+3,w
  2624  055E  1C03               	skipc
  2625  055F  0F73               	incfsz	___lldiv@divisor+3,w
  2626  0560  02F7               	subwf	___lldiv@dividend+3,f
  2627  0561                     l1241:
  2628  0561  1479               	bsf	___lldiv@quotient,0
  2629  0562                     l1243:
  2630  0562  3001               	movlw	1
  2631  0563                     u615:
  2632  0563  1003               	clrc
  2633  0564  0CF3               	rrf	___lldiv@divisor+3,f
  2634  0565  0CF2               	rrf	___lldiv@divisor+2,f
  2635  0566  0CF1               	rrf	___lldiv@divisor+1,f
  2636  0567  0CF0               	rrf	___lldiv@divisor,f
  2637  0568  3EFF               	addlw	-1
  2638  0569  1D03               	skipz
  2639  056A  2D63               	goto	u615
  2640  056B                     l1245:
  2641  056B  3001               	movlw	1
  2642  056C  02FD               	subwf	___lldiv@counter,f
  2643  056D  1D03               	btfss	3,2
  2644  056E  2D70               	goto	u621
  2645  056F  2D71               	goto	u620
  2646  0570                     u621:
  2647  0570  2D38               	goto	l1235
  2648  0571                     u620:
  2649  0571                     l1247:
  2650  0571  087C               	movf	___lldiv@quotient+3,w
  2651  0572  00F3               	movwf	?___lldiv+3
  2652  0573  087B               	movf	___lldiv@quotient+2,w
  2653  0574  00F2               	movwf	?___lldiv+2
  2654  0575  087A               	movf	___lldiv@quotient+1,w
  2655  0576  00F1               	movwf	?___lldiv+1
  2656  0577  0879               	movf	___lldiv@quotient,w
  2657  0578  00F0               	movwf	?___lldiv
  2658  0579                     l305:
  2659  0579  0008               	return
  2660  057A                     __end_of___lldiv:
  2661                           
  2662                           	psect	text13
  2663  022F                     __ptext13:	
  2664 ;; *************** function _I2C_Master_Write *****************
  2665 ;; Defined at:
  2666 ;;		line 65 in file "I2C.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  d               2    0[COMMON] unsigned int 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, pclath, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2680 ;;      Params:         2       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0
  2683 ;;      Totals:         2       0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    1
  2687 ;; This function calls:
  2688 ;;		_I2C_Master_Wait
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _I2C_Master_Write
  2696  022F                     _I2C_Master_Write:
  2697  022F                     l1451:	
  2698                           ;incstack = 0
  2699                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2700                           
  2701                           
  2702                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2703  022F  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2704  0234                     l1453:
  2705                           
  2706                           ;I2C.c: 68:     SSPBUF = d;
  2707  0234  0870               	movf	I2C_Master_Write@d,w
  2708  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0237  0093               	movwf	19	;volatile
  2711  0238                     l47:
  2712  0238  0008               	return
  2713  0239                     __end_of_I2C_Master_Write:
  2714                           
  2715                           	psect	text14
  2716  0226                     __ptext14:	
  2717 ;; *************** function _I2C_Master_Stop *****************
  2718 ;; Defined at:
  2719 ;;		line 55 in file "I2C.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    1
  2740 ;; This function calls:
  2741 ;;		_I2C_Master_Wait
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _I2C_Master_Stop
  2749  0226                     _I2C_Master_Stop:
  2750  0226                     l1447:	
  2751                           ;incstack = 0
  2752                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2753                           
  2754                           
  2755                           ;I2C.c: 57:     I2C_Master_Wait();
  2756  0226  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2757  022B                     l1449:
  2758                           
  2759                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2760  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2761  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2762  022D  1511               	bsf	17,2	;volatile
  2763  022E                     l44:
  2764  022E  0008               	return
  2765  022F                     __end_of_I2C_Master_Stop:
  2766                           
  2767                           	psect	text15
  2768  021D                     __ptext15:	
  2769 ;; *************** function _I2C_Master_Start *****************
  2770 ;; Defined at:
  2771 ;;		line 39 in file "I2C.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    1
  2792 ;; This function calls:
  2793 ;;		_I2C_Master_Wait
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _I2C_Master_Start
  2801  021D                     _I2C_Master_Start:
  2802  021D                     l1443:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2805                           
  2806                           
  2807                           ;I2C.c: 41:     I2C_Master_Wait();
  2808  021D  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2809  0222                     l1445:
  2810                           
  2811                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2812  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0224  1411               	bsf	17,0	;volatile
  2815  0225                     l38:
  2816  0225  0008               	return
  2817  0226                     __end_of_I2C_Master_Start:
  2818                           
  2819                           	psect	text16
  2820  0295                     __ptext16:	
  2821 ;; *************** function _I2C_Master_Read *****************
  2822 ;; Defined at:
  2823 ;;		line 74 in file "I2C.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  a               2    0[COMMON] unsigned short 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  temp            2    4[COMMON] unsigned short 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  2    0[COMMON] unsigned short 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         2       0       0       0       0
  2838 ;;      Locals:         2       0       0       0       0
  2839 ;;      Temps:          2       0       0       0       0
  2840 ;;      Totals:         6       0       0       0       0
  2841 ;;Total ram usage:        6 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		_I2C_Master_Wait
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _I2C_Master_Read
  2853  0295                     _I2C_Master_Read:
  2854  0295                     l1455:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2857                           
  2858                           
  2859                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2860  0295  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2861  029A                     l1457:
  2862                           
  2863                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2864  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2865  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2866  029C  1591               	bsf	17,3	;volatile
  2867                           
  2868                           ;I2C.c: 79:     I2C_Master_Wait();
  2869  029D  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2870  02A2                     l1459:
  2871                           
  2872                           ;I2C.c: 80:     temp = SSPBUF;
  2873  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2874  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2875  02A4  0813               	movf	19,w	;volatile
  2876  02A5  00F2               	movwf	??_I2C_Master_Read
  2877  02A6  01F3               	clrf	??_I2C_Master_Read+1
  2878  02A7  0872               	movf	??_I2C_Master_Read,w
  2879  02A8  00F4               	movwf	I2C_Master_Read@temp
  2880  02A9  0873               	movf	??_I2C_Master_Read+1,w
  2881  02AA  00F5               	movwf	I2C_Master_Read@temp+1
  2882  02AB                     l1461:
  2883                           
  2884                           ;I2C.c: 81:     I2C_Master_Wait();
  2885  02AB  120A  118A  2239  120A  118A  	fcall	_I2C_Master_Wait
  2886  02B0                     l1463:
  2887                           
  2888                           ;I2C.c: 82:     if(a == 1){
  2889  02B0  0370               	decf	I2C_Master_Read@a,w
  2890  02B1  0471               	iorwf	I2C_Master_Read@a+1,w
  2891  02B2  1D03               	btfss	3,2
  2892  02B3  2AB5               	goto	u1031
  2893  02B4  2AB6               	goto	u1030
  2894  02B5                     u1031:
  2895  02B5  2ABA               	goto	l50
  2896  02B6                     u1030:
  2897  02B6                     l1465:
  2898                           
  2899                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2900  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2901  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2902  02B8  1291               	bcf	17,5	;volatile
  2903                           
  2904                           ;I2C.c: 84:     }else{
  2905  02B9  2ABD               	goto	l51
  2906  02BA                     l50:
  2907                           
  2908                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2909  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2910  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2911  02BC  1691               	bsf	17,5	;volatile
  2912  02BD                     l51:	
  2913                           ;I2C.c: 86:     }
  2914                           
  2915                           
  2916                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2917  02BD  1611               	bsf	17,4	;volatile
  2918  02BE                     l1467:
  2919                           
  2920                           ;I2C.c: 88:     return temp;
  2921  02BE  0875               	movf	I2C_Master_Read@temp+1,w
  2922  02BF  00F1               	movwf	?_I2C_Master_Read+1
  2923  02C0  0874               	movf	I2C_Master_Read@temp,w
  2924  02C1  00F0               	movwf	?_I2C_Master_Read
  2925  02C2                     l52:
  2926  02C2  0008               	return
  2927  02C3                     __end_of_I2C_Master_Read:
  2928                           
  2929                           	psect	text17
  2930  0239                     __ptext17:	
  2931 ;; *************** function _I2C_Master_Wait *****************
  2932 ;; Defined at:
  2933 ;;		line 32 in file "I2C.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_I2C_Master_Start
  2957 ;;		_I2C_Master_Stop
  2958 ;;		_I2C_Master_Write
  2959 ;;		_I2C_Master_Read
  2960 ;;		_I2C_Master_RepeatedStart
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _I2C_Master_Wait
  2966  0239                     _I2C_Master_Wait:
  2967  0239                     l1263:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2970                           
  2971  0239                     l32:	
  2972                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2973                           
  2974  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2975  023A  1303               	bcf	3,6	;RP1=0, select bank1
  2976  023B  1914               	btfsc	20,2	;volatile
  2977  023C  2A3E               	goto	u641
  2978  023D  2A3F               	goto	u640
  2979  023E                     u641:
  2980  023E  2A39               	goto	l32
  2981  023F                     u640:
  2982  023F                     l1265:
  2983  023F  0811               	movf	17,w	;volatile
  2984  0240  391F               	andlw	31
  2985  0241  1D03               	btfss	3,2
  2986  0242  2A44               	goto	u651
  2987  0243  2A45               	goto	u650
  2988  0244                     u651:
  2989  0244  2A39               	goto	l32
  2990  0245                     u650:
  2991  0245                     l35:
  2992  0245  0008               	return
  2993  0246                     __end_of_I2C_Master_Wait:
  2994                           
  2995                           	psect	text18
  2996  04AE                     __ptext18:	
  2997 ;; *************** function _Division *****************
  2998 ;; Defined at:
  2999 ;;		line 33 in file "Master_Test.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  y               1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  y               1    9[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       0       0       0
  3014 ;;      Locals:         0       3       0       0       0
  3015 ;;      Temps:          0       3       0       0       0
  3016 ;;      Totals:         0       6       0       0       0
  3017 ;;Total ram usage:        6 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		___awdiv
  3022 ;;		___awmod
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _Division
  3030  04AE                     _Division:
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  3034                           ;Division@y stored from wreg
  3035  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3036  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3037  04B0  00A9               	movwf	Division@y
  3038  04B1                     l1471:
  3039                           
  3040                           ;Master_Test.c: 34:         cen = (y/100);
  3041  04B1  3064               	movlw	100
  3042  04B2  00F7               	movwf	___awdiv@divisor
  3043  04B3  3000               	movlw	0
  3044  04B4  00F8               	movwf	___awdiv@divisor+1
  3045  04B5  0829               	movf	Division@y,w
  3046  04B6  00A4               	movwf	??_Division
  3047  04B7  01A5               	clrf	??_Division+1
  3048  04B8  0824               	movf	??_Division,w
  3049  04B9  00F9               	movwf	___awdiv@dividend
  3050  04BA  0825               	movf	??_Division+1,w
  3051  04BB  00FA               	movwf	___awdiv@dividend+1
  3052  04BC  120A  118A  257A  120A  118A  	fcall	___awdiv
  3053  04C1  0877               	movf	?___awdiv,w
  3054  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3055  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3056  04C4  00A6               	movwf	??_Division+2
  3057  04C5  0826               	movf	??_Division+2,w
  3058  04C6  00B2               	movwf	_cen
  3059                           
  3060                           ;Master_Test.c: 35:         dec = ((y%100)/10);
  3061  04C7  300A               	movlw	10
  3062  04C8  00F7               	movwf	___awdiv@divisor
  3063  04C9  3000               	movlw	0
  3064  04CA  00F8               	movwf	___awdiv@divisor+1
  3065  04CB  0829               	movf	Division@y,w
  3066  04CC  00A4               	movwf	??_Division
  3067  04CD  01A5               	clrf	??_Division+1
  3068  04CE  0824               	movf	??_Division,w
  3069  04CF  00F2               	movwf	___awmod@dividend
  3070  04D0  0825               	movf	??_Division+1,w
  3071  04D1  00F3               	movwf	___awmod@dividend+1
  3072  04D2  3064               	movlw	100
  3073  04D3  00F0               	movwf	___awmod@divisor
  3074  04D4  3000               	movlw	0
  3075  04D5  00F1               	movwf	___awmod@divisor+1
  3076  04D6  120A  118A  23F4  120A  118A  	fcall	___awmod
  3077  04DB  0871               	movf	?___awmod+1,w
  3078  04DC  00FA               	movwf	___awdiv@dividend+1
  3079  04DD  0870               	movf	?___awmod,w
  3080  04DE  00F9               	movwf	___awdiv@dividend
  3081  04DF  120A  118A  257A  120A  118A  	fcall	___awdiv
  3082  04E4  0877               	movf	?___awdiv,w
  3083  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3084  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3085  04E7  00A6               	movwf	??_Division+2
  3086  04E8  0826               	movf	??_Division+2,w
  3087  04E9  00B1               	movwf	_dec
  3088                           
  3089                           ;Master_Test.c: 36:         uni = ((y%100)%10);
  3090  04EA  0829               	movf	Division@y,w
  3091  04EB  00A4               	movwf	??_Division
  3092  04EC  01A5               	clrf	??_Division+1
  3093  04ED  0824               	movf	??_Division,w
  3094  04EE  00F2               	movwf	___awmod@dividend
  3095  04EF  0825               	movf	??_Division+1,w
  3096  04F0  00F3               	movwf	___awmod@dividend+1
  3097  04F1  3064               	movlw	100
  3098  04F2  00F0               	movwf	___awmod@divisor
  3099  04F3  3000               	movlw	0
  3100  04F4  00F1               	movwf	___awmod@divisor+1
  3101  04F5  120A  118A  23F4  120A  118A  	fcall	___awmod
  3102  04FA  0871               	movf	?___awmod+1,w
  3103  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3104  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3105  04FD  00A8               	movwf	_Division$885+1
  3106  04FE  0870               	movf	?___awmod,w
  3107  04FF  00A7               	movwf	_Division$885
  3108                           
  3109                           ;Master_Test.c: 36:         uni = ((y%100)%10);
  3110  0500  300A               	movlw	10
  3111  0501  00F0               	movwf	___awmod@divisor
  3112  0502  3000               	movlw	0
  3113  0503  00F1               	movwf	___awmod@divisor+1
  3114  0504  0828               	movf	_Division$885+1,w
  3115  0505  00F3               	movwf	___awmod@dividend+1
  3116  0506  0827               	movf	_Division$885,w
  3117  0507  00F2               	movwf	___awmod@dividend
  3118  0508  120A  118A  23F4  120A  118A  	fcall	___awmod
  3119  050D  0870               	movf	?___awmod,w
  3120  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3121  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0510  00A4               	movwf	??_Division
  3123  0511  0824               	movf	??_Division,w
  3124  0512  00B0               	movwf	_uni
  3125  0513                     l106:
  3126  0513  0008               	return
  3127  0514                     __end_of_Division:
  3128                           
  3129                           	psect	text19
  3130  03F4                     __ptext19:	
  3131 ;; *************** function ___awmod *****************
  3132 ;; Defined at:
  3133 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  divisor         2    0[COMMON] int 
  3136 ;;  dividend        2    2[COMMON] int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  sign            1    6[COMMON] unsigned char 
  3139 ;;  counter         1    5[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2    0[COMMON] int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         4       0       0       0       0
  3150 ;;      Locals:         2       0       0       0       0
  3151 ;;      Temps:          1       0       0       0       0
  3152 ;;      Totals:         7       0       0       0       0
  3153 ;;Total ram usage:        7 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_Division
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function ___awmod
  3164  03F4                     ___awmod:
  3165  03F4                     l1357:	
  3166                           ;incstack = 0
  3167                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3168                           
  3169  03F4  01F6               	clrf	___awmod@sign
  3170  03F5                     l1359:
  3171  03F5  1FF3               	btfss	___awmod@dividend+1,7
  3172  03F6  2BF8               	goto	u811
  3173  03F7  2BF9               	goto	u810
  3174  03F8                     u811:
  3175  03F8  2C00               	goto	l1365
  3176  03F9                     u810:
  3177  03F9                     l1361:
  3178  03F9  09F2               	comf	___awmod@dividend,f
  3179  03FA  09F3               	comf	___awmod@dividend+1,f
  3180  03FB  0AF2               	incf	___awmod@dividend,f
  3181  03FC  1903               	skipnz
  3182  03FD  0AF3               	incf	___awmod@dividend+1,f
  3183  03FE                     l1363:
  3184  03FE  01F6               	clrf	___awmod@sign
  3185  03FF  0AF6               	incf	___awmod@sign,f
  3186  0400                     l1365:
  3187  0400  1FF1               	btfss	___awmod@divisor+1,7
  3188  0401  2C03               	goto	u821
  3189  0402  2C04               	goto	u820
  3190  0403                     u821:
  3191  0403  2C09               	goto	l1369
  3192  0404                     u820:
  3193  0404                     l1367:
  3194  0404  09F0               	comf	___awmod@divisor,f
  3195  0405  09F1               	comf	___awmod@divisor+1,f
  3196  0406  0AF0               	incf	___awmod@divisor,f
  3197  0407  1903               	skipnz
  3198  0408  0AF1               	incf	___awmod@divisor+1,f
  3199  0409                     l1369:
  3200  0409  0870               	movf	___awmod@divisor,w
  3201  040A  0471               	iorwf	___awmod@divisor+1,w
  3202  040B  1903               	btfsc	3,2
  3203  040C  2C0E               	goto	u831
  3204  040D  2C0F               	goto	u830
  3205  040E                     u831:
  3206  040E  2C3E               	goto	l1387
  3207  040F                     u830:
  3208  040F                     l1371:
  3209  040F  01F5               	clrf	___awmod@counter
  3210  0410  0AF5               	incf	___awmod@counter,f
  3211  0411  2C1D               	goto	l1377
  3212  0412                     l1373:
  3213  0412  3001               	movlw	1
  3214  0413                     u845:
  3215  0413  1003               	clrc
  3216  0414  0DF0               	rlf	___awmod@divisor,f
  3217  0415  0DF1               	rlf	___awmod@divisor+1,f
  3218  0416  3EFF               	addlw	-1
  3219  0417  1D03               	skipz
  3220  0418  2C13               	goto	u845
  3221  0419                     l1375:
  3222  0419  3001               	movlw	1
  3223  041A  00F4               	movwf	??___awmod
  3224  041B  0874               	movf	??___awmod,w
  3225  041C  07F5               	addwf	___awmod@counter,f
  3226  041D                     l1377:
  3227  041D  1FF1               	btfss	___awmod@divisor+1,7
  3228  041E  2C20               	goto	u851
  3229  041F  2C21               	goto	u850
  3230  0420                     u851:
  3231  0420  2C12               	goto	l1373
  3232  0421                     u850:
  3233  0421                     l1379:
  3234  0421  0871               	movf	___awmod@divisor+1,w
  3235  0422  0273               	subwf	___awmod@dividend+1,w
  3236  0423  1D03               	skipz
  3237  0424  2C27               	goto	u865
  3238  0425  0870               	movf	___awmod@divisor,w
  3239  0426  0272               	subwf	___awmod@dividend,w
  3240  0427                     u865:
  3241  0427  1C03               	skipc
  3242  0428  2C2A               	goto	u861
  3243  0429  2C2B               	goto	u860
  3244  042A                     u861:
  3245  042A  2C31               	goto	l1383
  3246  042B                     u860:
  3247  042B                     l1381:
  3248  042B  0870               	movf	___awmod@divisor,w
  3249  042C  02F2               	subwf	___awmod@dividend,f
  3250  042D  0871               	movf	___awmod@divisor+1,w
  3251  042E  1C03               	skipc
  3252  042F  03F3               	decf	___awmod@dividend+1,f
  3253  0430  02F3               	subwf	___awmod@dividend+1,f
  3254  0431                     l1383:
  3255  0431  3001               	movlw	1
  3256  0432                     u875:
  3257  0432  1003               	clrc
  3258  0433  0CF1               	rrf	___awmod@divisor+1,f
  3259  0434  0CF0               	rrf	___awmod@divisor,f
  3260  0435  3EFF               	addlw	-1
  3261  0436  1D03               	skipz
  3262  0437  2C32               	goto	u875
  3263  0438                     l1385:
  3264  0438  3001               	movlw	1
  3265  0439  02F5               	subwf	___awmod@counter,f
  3266  043A  1D03               	btfss	3,2
  3267  043B  2C3D               	goto	u881
  3268  043C  2C3E               	goto	u880
  3269  043D                     u881:
  3270  043D  2C21               	goto	l1379
  3271  043E                     u880:
  3272  043E                     l1387:
  3273  043E  0876               	movf	___awmod@sign,w
  3274  043F  1903               	btfsc	3,2
  3275  0440  2C42               	goto	u891
  3276  0441  2C43               	goto	u890
  3277  0442                     u891:
  3278  0442  2C48               	goto	l1391
  3279  0443                     u890:
  3280  0443                     l1389:
  3281  0443  09F2               	comf	___awmod@dividend,f
  3282  0444  09F3               	comf	___awmod@dividend+1,f
  3283  0445  0AF2               	incf	___awmod@dividend,f
  3284  0446  1903               	skipnz
  3285  0447  0AF3               	incf	___awmod@dividend+1,f
  3286  0448                     l1391:
  3287  0448  0873               	movf	___awmod@dividend+1,w
  3288  0449  00F1               	movwf	?___awmod+1
  3289  044A  0872               	movf	___awmod@dividend,w
  3290  044B  00F0               	movwf	?___awmod
  3291  044C                     l435:
  3292  044C  0008               	return
  3293  044D                     __end_of___awmod:
  3294                           
  3295                           	psect	text20
  3296  057A                     __ptext20:	
  3297 ;; *************** function ___awdiv *****************
  3298 ;; Defined at:
  3299 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  divisor         2    7[COMMON] int 
  3302 ;;  dividend        2    9[COMMON] int 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  quotient        2    2[BANK0 ] int 
  3305 ;;  sign            1    1[BANK0 ] unsigned char 
  3306 ;;  counter         1    0[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2    7[COMMON] int 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         4       0       0       0       0
  3317 ;;      Locals:         0       4       0       0       0
  3318 ;;      Temps:          1       0       0       0       0
  3319 ;;      Totals:         5       4       0       0       0
  3320 ;;Total ram usage:        9 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_Division
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function ___awdiv
  3331  057A                     ___awdiv:
  3332  057A                     l1313:	
  3333                           ;incstack = 0
  3334                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3335                           
  3336  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3337  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3338  057C  01A1               	clrf	___awdiv@sign
  3339  057D                     l1315:
  3340  057D  1FF8               	btfss	___awdiv@divisor+1,7
  3341  057E  2D80               	goto	u711
  3342  057F  2D81               	goto	u710
  3343  0580                     u711:
  3344  0580  2D88               	goto	l1321
  3345  0581                     u710:
  3346  0581                     l1317:
  3347  0581  09F7               	comf	___awdiv@divisor,f
  3348  0582  09F8               	comf	___awdiv@divisor+1,f
  3349  0583  0AF7               	incf	___awdiv@divisor,f
  3350  0584  1903               	skipnz
  3351  0585  0AF8               	incf	___awdiv@divisor+1,f
  3352  0586                     l1319:
  3353  0586  01A1               	clrf	___awdiv@sign
  3354  0587  0AA1               	incf	___awdiv@sign,f
  3355  0588                     l1321:
  3356  0588  1FFA               	btfss	___awdiv@dividend+1,7
  3357  0589  2D8B               	goto	u721
  3358  058A  2D8C               	goto	u720
  3359  058B                     u721:
  3360  058B  2D95               	goto	l1327
  3361  058C                     u720:
  3362  058C                     l1323:
  3363  058C  09F9               	comf	___awdiv@dividend,f
  3364  058D  09FA               	comf	___awdiv@dividend+1,f
  3365  058E  0AF9               	incf	___awdiv@dividend,f
  3366  058F  1903               	skipnz
  3367  0590  0AFA               	incf	___awdiv@dividend+1,f
  3368  0591                     l1325:
  3369  0591  3001               	movlw	1
  3370  0592  00FB               	movwf	??___awdiv
  3371  0593  087B               	movf	??___awdiv,w
  3372  0594  06A1               	xorwf	___awdiv@sign,f
  3373  0595                     l1327:
  3374  0595  01A2               	clrf	___awdiv@quotient
  3375  0596  01A3               	clrf	___awdiv@quotient+1
  3376  0597                     l1329:
  3377  0597  0877               	movf	___awdiv@divisor,w
  3378  0598  0478               	iorwf	___awdiv@divisor+1,w
  3379  0599  1903               	btfsc	3,2
  3380  059A  2D9C               	goto	u731
  3381  059B  2D9D               	goto	u730
  3382  059C                     u731:
  3383  059C  2DD4               	goto	l1349
  3384  059D                     u730:
  3385  059D                     l1331:
  3386  059D  01A0               	clrf	___awdiv@counter
  3387  059E  0AA0               	incf	___awdiv@counter,f
  3388  059F  2DAB               	goto	l1337
  3389  05A0                     l1333:
  3390  05A0  3001               	movlw	1
  3391  05A1                     u745:
  3392  05A1  1003               	clrc
  3393  05A2  0DF7               	rlf	___awdiv@divisor,f
  3394  05A3  0DF8               	rlf	___awdiv@divisor+1,f
  3395  05A4  3EFF               	addlw	-1
  3396  05A5  1D03               	skipz
  3397  05A6  2DA1               	goto	u745
  3398  05A7                     l1335:
  3399  05A7  3001               	movlw	1
  3400  05A8  00FB               	movwf	??___awdiv
  3401  05A9  087B               	movf	??___awdiv,w
  3402  05AA  07A0               	addwf	___awdiv@counter,f
  3403  05AB                     l1337:
  3404  05AB  1FF8               	btfss	___awdiv@divisor+1,7
  3405  05AC  2DAE               	goto	u751
  3406  05AD  2DAF               	goto	u750
  3407  05AE                     u751:
  3408  05AE  2DA0               	goto	l1333
  3409  05AF                     u750:
  3410  05AF                     l1339:
  3411  05AF  3001               	movlw	1
  3412  05B0                     u765:
  3413  05B0  1003               	clrc
  3414  05B1  0DA2               	rlf	___awdiv@quotient,f
  3415  05B2  0DA3               	rlf	___awdiv@quotient+1,f
  3416  05B3  3EFF               	addlw	-1
  3417  05B4  1D03               	skipz
  3418  05B5  2DB0               	goto	u765
  3419  05B6  0878               	movf	___awdiv@divisor+1,w
  3420  05B7  027A               	subwf	___awdiv@dividend+1,w
  3421  05B8  1D03               	skipz
  3422  05B9  2DBC               	goto	u775
  3423  05BA  0877               	movf	___awdiv@divisor,w
  3424  05BB  0279               	subwf	___awdiv@dividend,w
  3425  05BC                     u775:
  3426  05BC  1C03               	skipc
  3427  05BD  2DBF               	goto	u771
  3428  05BE  2DC0               	goto	u770
  3429  05BF                     u771:
  3430  05BF  2DC7               	goto	l1345
  3431  05C0                     u770:
  3432  05C0                     l1341:
  3433  05C0  0877               	movf	___awdiv@divisor,w
  3434  05C1  02F9               	subwf	___awdiv@dividend,f
  3435  05C2  0878               	movf	___awdiv@divisor+1,w
  3436  05C3  1C03               	skipc
  3437  05C4  03FA               	decf	___awdiv@dividend+1,f
  3438  05C5  02FA               	subwf	___awdiv@dividend+1,f
  3439  05C6                     l1343:
  3440  05C6  1422               	bsf	___awdiv@quotient,0
  3441  05C7                     l1345:
  3442  05C7  3001               	movlw	1
  3443  05C8                     u785:
  3444  05C8  1003               	clrc
  3445  05C9  0CF8               	rrf	___awdiv@divisor+1,f
  3446  05CA  0CF7               	rrf	___awdiv@divisor,f
  3447  05CB  3EFF               	addlw	-1
  3448  05CC  1D03               	skipz
  3449  05CD  2DC8               	goto	u785
  3450  05CE                     l1347:
  3451  05CE  3001               	movlw	1
  3452  05CF  02A0               	subwf	___awdiv@counter,f
  3453  05D0  1D03               	btfss	3,2
  3454  05D1  2DD3               	goto	u791
  3455  05D2  2DD4               	goto	u790
  3456  05D3                     u791:
  3457  05D3  2DAF               	goto	l1339
  3458  05D4                     u790:
  3459  05D4                     l1349:
  3460  05D4  0821               	movf	___awdiv@sign,w
  3461  05D5  1903               	btfsc	3,2
  3462  05D6  2DD8               	goto	u801
  3463  05D7  2DD9               	goto	u800
  3464  05D8                     u801:
  3465  05D8  2DDE               	goto	l1353
  3466  05D9                     u800:
  3467  05D9                     l1351:
  3468  05D9  09A2               	comf	___awdiv@quotient,f
  3469  05DA  09A3               	comf	___awdiv@quotient+1,f
  3470  05DB  0AA2               	incf	___awdiv@quotient,f
  3471  05DC  1903               	skipnz
  3472  05DD  0AA3               	incf	___awdiv@quotient+1,f
  3473  05DE                     l1353:
  3474  05DE  0823               	movf	___awdiv@quotient+1,w
  3475  05DF  00F8               	movwf	?___awdiv+1
  3476  05E0  0822               	movf	___awdiv@quotient,w
  3477  05E1  00F7               	movwf	?___awdiv
  3478  05E2                     l422:
  3479  05E2  0008               	return
  3480  05E3                     __end_of___awdiv:
  3481  007E                     btemp	set	126	;btemp
  3482  007E                     wtemp0	set	126
  3483                           
  3484                           	psect	config
  3485                           
  3486                           ;Config register CONFIG1 @ 0x2007
  3487                           ;	Oscillator Selection bits
  3488                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3489                           ;	Watchdog Timer Enable bit
  3490                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3491                           ;	Power-up Timer Enable bit
  3492                           ;	PWRTE = ON, PWRT enabled
  3493                           ;	RE3/MCLR pin function select bit
  3494                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3495                           ;	Code Protection bit
  3496                           ;	CP = OFF, Program memory code protection is disabled
  3497                           ;	Data Code Protection bit
  3498                           ;	CPD = OFF, Data memory code protection is disabled
  3499                           ;	Brown Out Reset Selection bits
  3500                           ;	BOREN = OFF, BOR disabled
  3501                           ;	Internal External Switchover bit
  3502                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3503                           ;	Fail-Safe Clock Monitor Enabled bit
  3504                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3505                           ;	Low Voltage Programming Enable bit
  3506                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3507                           ;	In-Circuit Debugger Mode bit
  3508                           ;	DEBUG = 0x1, unprogrammed default
  3509  2007                     	org	8199
  3510  2007  20C4               	dw	8388
  3511                           
  3512                           ;Config register CONFIG2 @ 0x2008
  3513                           ;	Brown-out Reset Selection bit
  3514                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3515                           ;	Flash Program Memory Self Write Enable bits
  3516                           ;	WRT = OFF, Write protection off
  3517  2008                     	org	8200
  3518  2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK0[1]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init
    _Division->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5840
                                             13 BANK0      3     3      0
                           _Division
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1756
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1362
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     644
                                              2 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     262
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0      22
                                              3 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    1445
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Division
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 23 15:16:13 2021

                        pc 0002                         l32 0239                         l50 02BA  
                       l35 0245                         l51 02BD                         l52 02C2  
                       l44 022E                         l29 02FA                         l38 0225  
                       l47 0238               ___awdiv@sign 0021                         fsr 0004  
                      l106 0513                        l131 0252                        l140 04AD  
                      l109 0333                        l143 0262                        l128 0276  
                      l305 0579                        l137 0294                        l149 03AF  
                      l422 05E2                        l265 06CA                        l435 044C  
                      l541 03F3                        l551 036D                        _GIE 005F  
                      _RC6 003E                        _RC7 003F                        u600 0553  
                      u601 0552                        u620 0571                        u700 03AF  
                      u621 0570                        u605 054F                        u701 03AE  
                      u710 0581                        u630 02DA                        u711 0580  
                      u615 0563                        u800 05D9                        u720 058C  
                      u640 023F                        u560 0524                        u801 05D8  
                      u721 058B                        u641 023E                        u561 0523  
                      u730 059D                        u810 03F9                        u650 0245  
                      u731 059C                        u811 03F8                        u651 0244  
                      u635 02D5                        u820 0404                        u580 0538  
                      u660 027D                        u900 03B8                        u821 0403  
                      u581 0537                        u661 027C                        u901 03B7  
                      u750 05AF                        u830 040F                        u670 028C  
                      u751 05AE                        u831 040E                        u575 0529  
                      u671 028B                        u680 037B                        u920 03CA  
                      u745 05A1                        u921 03C9                        u770 05C0  
                      u850 0421                        u690 039D                        u771 05BF  
                      u851 0420                        u595 053A                        u915 03BC  
                      u860 042B                        u940 03DB                        u765 05B0  
                      u861 042A                        u845 0413                        u941 03DA  
                      u790 05D4                        u791 05D3                        u775 05BC  
                      u935 03CB                        u880 043E                        u960 03EF  
                      u785 05C8                        u881 043D                        u865 0427  
                      u961 03EE                        u945 03D7                        u890 0443  
                      u970 033A                        u891 0442                        u875 0432  
                      u955 03E3                        u971 0339                        u990 034C  
                      u991 034B                        u985 033E                        _dec 0031  
                      _cen 0032                        _con 0033                        _pot 0034  
                      fsr0 0004                        _uni 0030                        indf 0000  
             ___awmod@sign 0076                       l1211 0264                       l1213 0267  
                     l1301 0286                       l1221 0257                       l1231 0527  
                     l1215 0269                       l1303 028C                       l1223 0259  
                     l1311 0393                       l1321 0588                       l1313 057A  
                     l1241 0561                       l1233 0534                       l1217 0273  
                     l1225 025F                       l1305 036E                       l1401 03BB  
                     l1331 059D                       l1323 058C                       l1315 057D  
                     l1243 0562                       l1235 0538                       l1227 0514  
                     l1251 02C3                       l1219 0254                       l1307 0371  
                     l1411 03E1                       l1403 03C2                       l1341 05C0  
                     l1333 05A0                       l1325 0591                       l1317 0581  
                     l1245 056B                       l1237 0541                       l1229 0524  
                     l1261 02F9                       l1253 02C7                       l1309 038D  
                     l1413 03E2                       l1405 03C6                       l1421 0334  
                     l1351 05D9                       l1343 05C6                       l1335 05A7  
                     l1327 0595                       l1319 0586                       l1263 0239  
                     l1239 0553                       l1247 0571                       l1255 02CA  
                     l1271 0459                       l1415 03E9                       l1407 03CA  
                     l1431 034C                       l1423 033A                       l1511 062B  
                     l1503 05FE                       l1353 05DE                       l1345 05C7  
                     l1337 05AB                       l1329 0597                       l1361 03F9  
                     l1265 023F                       l1257 02F7                       l1281 047C  
                     l1273 045F                       l1409 03DB                       l1417 03EF  
                     l1433 0356                       l1425 033D                       l1521 0636  
                     l1513 062F                       l1505 061B                       l1601 07B8  
                     l1347 05CE                       l1339 05AF                       l1371 040F  
                     l1363 03FE                       l1443 021D                       l1451 022F  
                     l1259 02F8                       l1291 049A                       l1283 0482  
                     l1275 0468                       l1267 044D                       l1435 035C  
                     l1427 0344                       l1531 0669                       l1515 0634  
                     l1507 0623                       l1603 07CB                       l1349 05D4  
                     l1381 042B                       l1373 0412                       l1365 0400  
                     l1357 03F4                       l1461 02AB                       l1445 0222  
                     l1453 0234                       l1293 04A0                       l1285 0488  
                     l1277 046E                       l1269 0450                       l1437 0363  
                     l1429 0348                       l1541 06AB                       l1533 066D  
                     l1525 0652                       l1509 0627                       l1605 07D4  
                     l1391 0448                       l1383 0431                       l1375 0419  
                     l1367 0404                       l1359 03F5                       l1471 04B1  
                     l1463 02B0                       l1455 0295                       l1447 0226  
                     l1295 0246                       l1287 048E                       l1279 0476  
                     l1439 0369                       l1535 0672                       l1527 065C  
                     l1543 06B4                       l1607 07E7                       l1385 0438  
                     l1377 041D                       l1369 0409                       l1465 02B6  
                     l1457 029A                       l1449 022B                       l1289 0494  
                     l1297 0278                       l1481 0309                       l1473 02FB  
                     l1537 06A0                       l1529 0662                       l1545 06C6  
                     l1633 0610                       l1561 06D5                       l1379 0421  
                     l1387 043E                       l1467 02BE                       l1459 02A2  
                     l1299 027D                       l1483 0318                       l1475 0305  
                     l1395 03B0                       l1539 06A7                       l1491 05E6  
                     l1571 0708                       l1563 06DE                       l1389 0443  
                     l1485 031D                       l1477 0307                       l1397 03B2  
                     l1493 05EB                       l1581 0748                       l1573 0710  
                     l1565 06EC                       l1557 06CB                       l1487 0322  
                     l1479 0308                       l1399 03B8                       l1495 05F1  
                     l1591 0780                       l1583 075B                       l1575 0723  
                     l1567 06F1                       l1559 06D0                       l1489 032A  
                     l1497 05F8                       l1593 0785                       l1585 0764  
                     l1577 072C                       l1569 0700                       l1499 05FD  
                     l1595 0794                       l1587 0769                       l1579 073F  
                     l1597 079C                       l1589 0772                       l1599 07AF  
                     STR_1 001D                       STR_2 0030                       STR_3 0030  
                     STR_4 0029                       STR_5 002E                       STR_6 0030  
                     STR_7 0030                       u1000 0356                       u1001 0355  
                     u1020 0369                       u1100 06C6                       u1021 0368  
                     u1005 0352                       u1101 06C5                       u1030 02B6  
                     u1031 02B5                       u1015 035D                       u1040 05F1  
                     u1041 05F0                       u1050 062B                       u1051 062A  
                     u1060 0651                       u1061 0650                       u1117 06F9  
                     u1070 065C                       u1071 065B                       u1127 078D  
                     u1080 0662                       u1137 025C                       u1081 0661  
                     u1065 064D                       u1090 06B4                       u1147 0454  
                     u1091 06B3                       u1157 0463                       u1167 0472  
                     u1177 04A6                       u1187 026E                       _PEIE 005E  
        ?_Lcd_Write_String 0072                       _main 06CB                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0074            __end_of_Lcd_Cmd 0277  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 05E3  
          __end_of___awmod 044D                      _ANSEL 0188            __end_of___lldiv 057A  
          ___awdiv@divisor 0077            __end_of___lwdiv 03F4            __end_of___lwmod 036E  
          ___awdiv@counter 0020                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
          __end_of_dpowers 001D                      _setup 02FB                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 06CB  
         __end_of_Lcd_Init 04AE            __initialization 07F4           __end_of_Division 0514  
             __end_of_main 07F4                     ??_main 002D         __size_of_Lcd_Clear 000D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0079                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0010  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___awdiv 007B  
                ??___awmod 0074                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 007C                     _buffer 0035           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_sprintf 0023  
          Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0073    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0253             __pcstackCOMMON 0070              __end_of_setup 0334  
           _Lcd_Set_Cursor 0277                  ?_Lcd_Init 0070                    ??_setup 007E  
                ?_Division 0070                 __pbssBANK0 0030                 __pmaintext 06CB  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0295                 ??_Lcd_Init 0073  
                  _SSPCON2 0091                    _SSPSTAT 0094                 ??_Division 0024  
               __stringtab 0003             _Lcd_Write_Char 0253                    _Lcd_Cmd 0263  
                  ___awdiv 057A                    ___awmod 03F4                    ___lldiv 0514  
                  ___lwdiv 03B0               _Division$885 0027                    ___lwmod 0334  
          ?_Lcd_Set_Cursor 0073                    __ptext1 05E3                    __ptext2 0334  
                  __ptext3 03B0                    __ptext4 02FB                    __ptext5 036E  
                  __ptext6 0253                    __ptext7 0277                    __ptext8 044D  
                  __ptext9 0246                    _dpowers 0013           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 05E3     __end_of_Lcd_Write_Char 0263  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  Division@y 0029                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0072          Lcd_Write_String@i 0077  
                _Lcd_Clear 0246           _Lcd_Write_String 036E        start_initialization 07F4  
        __size_of_Lcd_Init 0061          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070          __size_of_Division 0066  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0071                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 0027  
              sprintf@prec 0028           _I2C_Master_Start 021D           _I2C_Master_Write 022F  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074                   ?___awdiv 0077  
                 ?___awmod 0070                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0003           ___lwdiv@quotient 0075  
                 ?_sprintf 0020             __size_of_setup 0039                   Lcd_Cmd@a 0072  
              ??_Lcd_Clear 0073                __stringbase 0012           ??_Lcd_Write_Char 0070  
                 _Lcd_Init 044D        I2C_Master_Read@temp 0074                   _Division 04AE  
 __end_of_Lcd_Write_String 03B0           __size_of_Lcd_Cmd 0014           __size_of___awdiv 0069  
         __size_of___awmod 0059           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                 sprintf@val 0029  
          _I2C_Master_Init 02C3            _I2C_Master_Read 0295            _I2C_Master_Wait 0239  
          _I2C_Master_Stop 0226            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0263                   __ptext11 02C3                   __ptext20 057A  
                 __ptext12 0514                   __ptext13 022F                   __ptext14 0226  
                 __ptext15 021D                   __ptext16 0295                   __ptext17 0239  
                 __ptext18 04AE                   __ptext19 03F4           __size_of_sprintf 00E8  
            __size_of_main 0129   __end_of_I2C_Master_Start 0226   __end_of_I2C_Master_Write 0239  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 02FB    __end_of_I2C_Master_Read 02C3    __end_of_I2C_Master_Wait 0246  
  __end_of_I2C_Master_Stop 022F                   sprintf@c 002C                   sprintf@f 0020  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
