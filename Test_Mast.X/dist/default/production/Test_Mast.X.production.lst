

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 29 19:38:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	strings
   383  0003                     __pstrings:
   384  0003                     stringtab:
   385  0003                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  0003  1BFF               	btfsc	btemp+1,7
   389  0004  280D               	ljmp	stringcode
   390  0005  1383               	bcf	3,7
   391  0006  187F               	btfsc	btemp+1,0
   392  0007  1783               	bsf	3,7
   393  0008  0800               	movf	0,w
   394  0009  0A84               	incf	4,f
   395  000A  1903               	skipnz
   396  000B  0AFF               	incf	btemp+1,f
   397  000C  0008               	return
   398  000D                     stringcode:
   399  000D                     stringdir:
   400  000D  3000               	movlw	high stringdir
   401  000E  008A               	movwf	10
   402  000F  0804               	movf	4,w
   403  0010  0A84               	incf	4,f
   404  0011  0782               	addwf	2,f
   405  0012                     __stringbase:
   406  0012  3400               	retlw	0
   407  0013                     __end_of__stringtab:
   408  0013                     _dpowers:
   409  0013  3401               	retlw	1
   410  0014  3400               	retlw	0
   411  0015  340A               	retlw	10
   412  0016  3400               	retlw	0
   413  0017  3464               	retlw	100
   414  0018  3400               	retlw	0
   415  0019  34E8               	retlw	232
   416  001A  3403               	retlw	3
   417  001B  3410               	retlw	16
   418  001C  3427               	retlw	39
   419  001D                     __end_of_dpowers:
   420  0008                     _PORTD	set	8
   421  0013                     _SSPBUF	set	19
   422  0014                     _SSPCON	set	20
   423  003F                     _RC7	set	63
   424  003E                     _RC6	set	62
   425  0063                     _SSPIF	set	99
   426  005E                     _PEIE	set	94
   427  005F                     _GIE	set	95
   428  008F                     _OSCCONbits	set	143
   429  0088                     _TRISD	set	136
   430  0087                     _TRISC	set	135
   431  0086                     _TRISB	set	134
   432  0085                     _TRISA	set	133
   433  0091                     _SSPCON2bits	set	145
   434  0087                     _TRISCbits	set	135
   435  0094                     _SSPSTAT	set	148
   436  0093                     _SSPADD	set	147
   437  0091                     _SSPCON2	set	145
   438  0463                     _SSPIE	set	1123
   439  043C                     _TRISC4	set	1084
   440  043B                     _TRISC3	set	1083
   441  0189                     _ANSELH	set	393
   442  0188                     _ANSEL	set	392
   443  001D                     STR_1:
   444  001D  3454               	retlw	84	;'T'
   445  001E  3465               	retlw	101	;'e'
   446  001F  346D               	retlw	109	;'m'
   447  0020  3420               	retlw	32	;' '
   448  0021  344C               	retlw	76	;'L'
   449  0022  3475               	retlw	117	;'u'
   450  0023  347A               	retlw	122	;'z'
   451  0024  3420               	retlw	32	;' '
   452  0025  3474               	retlw	116	;'t'
   453  0026  3428               	retlw	40	;'('
   454  0027  3473               	retlw	115	;'s'
   455  0028  3429               	retlw	41	;')'
   456  0029  3420               	retlw	32	;' '
   457  002A  3454               	retlw	84	;'T'
   458  002B  344F               	retlw	79	;'O'
   459  002C  3400               	retlw	0
   460  002D                     STR_2:
   461  002D  3425               	retlw	37	;'%'
   462  002E  3464               	retlw	100	;'d'
   463  002F  3400               	retlw	0
   464  002D                     
   465                           	psect	cinit
   466  07F2                     start_initialization:	
   467                           ; #config settings
   468                           
   469  07F2                     __initialization:
   470                           
   471                           ; Clear objects allocated to BANK0
   472  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   473  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   474  07F4  01B0               	clrf	__pbssBANK0& (0+127)
   475  07F5  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   476  07F6  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   477  07F7  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   478  07F8  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   479  07F9  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   480  07FA  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   481  07FB  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   482  07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  07FC                     __end_of__initialization:
   486  07FC  0183               	clrf	3
   487  07FD  120A  118A  2D6B   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssBANK0
   490  0030                     __pbssBANK0:
   491  0030                     _luz:
   492  0030                     	ds	1
   493  0031                     _temp:
   494  0031                     	ds	1
   495  0032                     _uni:
   496  0032                     	ds	1
   497  0033                     _dec:
   498  0033                     	ds	1
   499  0034                     _cen:
   500  0034                     	ds	1
   501  0035                     _con:
   502  0035                     	ds	1
   503  0036                     _pot:
   504  0036                     	ds	1
   505  0037                     _buffer:
   506  0037                     	ds	1
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:
   510  0070                     ?_Lcd_Init:
   511  0070                     ?_Lcd_Clear:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_Master_Wait:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_I2C_Master_Wait:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_I2C_Master_Start:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ??_I2C_Master_Start:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Master_Stop:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_I2C_Master_Stop:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_Master_Write:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_my_delay_s:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_my_delay_s:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Division:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_setup:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_main:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Cmd:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_Lcd_Cmd:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_Char:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_Lcd_Write_Char:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_I2C_Master_Read:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?___wmul:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     ?___awmod:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ?___lwdiv:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ?___lldiv:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     I2C_Master_Write@d:	
   578                           ; 4 bytes @ 0x0
   579                           
   580  0070                     I2C_Master_Read@a:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ___wmul@multiplier:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ___awmod@divisor:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ___lwdiv@divisor:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ___lldiv@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595                           
   596                           ; 4 bytes @ 0x0
   597  0070                     	ds	1
   598  0071                     Lcd_Write_Char@a:
   599                           
   600                           ; 1 bytes @ 0x1
   601  0071                     	ds	1
   602  0072                     ?_Lcd_Write_String:
   603  0072                     ??_I2C_Master_Write:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  0072                     ??_I2C_Master_Read:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0072                     Lcd_Cmd@a:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     Lcd_Write_String@a:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     ___wmul@multiplicand:	
   616                           ; 2 bytes @ 0x2
   617                           
   618  0072                     ___awmod@dividend:	
   619                           ; 2 bytes @ 0x2
   620                           
   621  0072                     ___lwdiv@dividend:	
   622                           ; 2 bytes @ 0x2
   623                           
   624                           
   625                           ; 2 bytes @ 0x2
   626  0072                     	ds	1
   627  0073                     ??_Lcd_Init:
   628  0073                     ??_Lcd_Clear:	
   629                           ; 1 bytes @ 0x3
   630                           
   631  0073                     ?_Lcd_Set_Cursor:	
   632                           ; 1 bytes @ 0x3
   633                           
   634  0073                     my_delay_s@tiempo:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     Lcd_Set_Cursor@b:	
   638                           ; 1 bytes @ 0x3
   639                           
   640                           
   641                           ; 1 bytes @ 0x3
   642  0073                     	ds	1
   643  0074                     ??_Lcd_Set_Cursor:
   644  0074                     ??_Lcd_Write_String:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??___wmul:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___awmod:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ??___lwdiv:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     Lcd_Set_Cursor@a:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     I2C_Master_Read@temp:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___wmul@product:	
   663                           ; 2 bytes @ 0x4
   664                           
   665  0074                     ___lldiv@dividend:	
   666                           ; 2 bytes @ 0x4
   667                           
   668                           
   669                           ; 4 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ___awmod@counter:
   672  0075                     ___lwdiv@quotient:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 2 bytes @ 0x5
   677  0075                     	ds	1
   678  0076                     ___awmod@sign:
   679                           
   680                           ; 1 bytes @ 0x6
   681  0076                     	ds	1
   682  0077                     ?___awdiv:
   683  0077                     ___lwdiv@counter:	
   684                           ; 2 bytes @ 0x7
   685                           
   686  0077                     Lcd_Write_String@i:	
   687                           ; 1 bytes @ 0x7
   688                           
   689  0077                     ___awdiv@divisor:	
   690                           ; 2 bytes @ 0x7
   691                           
   692                           
   693                           ; 2 bytes @ 0x7
   694  0077                     	ds	1
   695  0078                     ??___lldiv:
   696  0078                     ?___lwmod:	
   697                           ; 1 bytes @ 0x8
   698                           
   699  0078                     ___lwmod@divisor:	
   700                           ; 2 bytes @ 0x8
   701                           
   702                           
   703                           ; 2 bytes @ 0x8
   704  0078                     	ds	1
   705  0079                     ___awdiv@dividend:
   706  0079                     ___lldiv@quotient:	
   707                           ; 2 bytes @ 0x9
   708                           
   709                           
   710                           ; 4 bytes @ 0x9
   711  0079                     	ds	1
   712  007A                     ___lwmod@dividend:
   713                           
   714                           ; 2 bytes @ 0xA
   715  007A                     	ds	1
   716  007B                     ??___awdiv:
   717                           
   718                           ; 1 bytes @ 0xB
   719  007B                     	ds	1
   720  007C                     ??___lwmod:
   721                           
   722                           ; 1 bytes @ 0xC
   723  007C                     	ds	1
   724  007D                     ___lldiv@counter:
   725  007D                     ___lwmod@counter:	
   726                           ; 1 bytes @ 0xD
   727                           
   728                           
   729                           ; 1 bytes @ 0xD
   730  007D                     	ds	1
   731  007E                     ??_setup:
   732                           
   733                           	psect	cstackBANK0
   734  0020                     __pcstackBANK0:	
   735                           ; 1 bytes @ 0xE
   736                           
   737  0020                     ?_I2C_Master_Init:
   738  0020                     ?_sprintf:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     sprintf@f:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0020                     ___awdiv@counter:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0020                     I2C_Master_Init@c:	
   748                           ; 1 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  0020                     	ds	1
   753  0021                     ___awdiv@sign:
   754                           
   755                           ; 1 bytes @ 0x1
   756  0021                     	ds	1
   757  0022                     ___awdiv@quotient:
   758                           
   759                           ; 2 bytes @ 0x2
   760  0022                     	ds	1
   761  0023                     ??_sprintf:
   762                           
   763                           ; 1 bytes @ 0x3
   764  0023                     	ds	1
   765  0024                     ??_I2C_Master_Init:
   766  0024                     ??_Division:	
   767                           ; 1 bytes @ 0x4
   768                           
   769                           
   770                           ; 1 bytes @ 0x4
   771  0024                     	ds	2
   772  0026                     sprintf@ap:
   773                           
   774                           ; 1 bytes @ 0x6
   775  0026                     	ds	1
   776  0027                     sprintf@flag:
   777  0027                     _Division$893:	
   778                           ; 1 bytes @ 0x7
   779                           
   780                           
   781                           ; 2 bytes @ 0x7
   782  0027                     	ds	1
   783  0028                     sprintf@prec:
   784                           
   785                           ; 1 bytes @ 0x8
   786  0028                     	ds	1
   787  0029                     Division@y:
   788  0029                     sprintf@val:	
   789                           ; 1 bytes @ 0x9
   790                           
   791                           
   792                           ; 2 bytes @ 0x9
   793  0029                     	ds	2
   794  002B                     sprintf@sp:
   795                           
   796                           ; 1 bytes @ 0xB
   797  002B                     	ds	1
   798  002C                     sprintf@c:
   799                           
   800                           ; 1 bytes @ 0xC
   801  002C                     	ds	1
   802  002D                     ??_main:
   803                           
   804                           ; 1 bytes @ 0xD
   805  002D                     	ds	3
   806                           
   807                           	psect	maintext
   808  056B                     __pmaintext:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 66 in file "Master_Test.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B00/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       3       0       0       0
   831 ;;      Totals:         0       3       0       0       0
   832 ;;Total ram usage:        3 bytes
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		_Division
   836 ;;		_I2C_Master_Read
   837 ;;		_I2C_Master_Start
   838 ;;		_I2C_Master_Stop
   839 ;;		_I2C_Master_Write
   840 ;;		_Lcd_Set_Cursor
   841 ;;		_Lcd_Write_String
   842 ;;		___awdiv
   843 ;;		___wmul
   844 ;;		_my_delay_s
   845 ;;		_setup
   846 ;;		_sprintf
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  056B                     _main:
   855  056B                     l1653:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;Master_Test.c: 67:     setup();
   861  056B  120A  118A  219C  120A  118A  	fcall	_setup
   862  0570                     l1655:
   863                           
   864                           ;Master_Test.c: 70:         I2C_Master_Start();
   865  0570  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
   866  0575                     l1657:
   867                           
   868                           ;Master_Test.c: 71:         I2C_Master_Write(0x51);
   869  0575  3051               	movlw	81
   870  0576  00F0               	movwf	I2C_Master_Write@d
   871  0577  3000               	movlw	0
   872  0578  00F1               	movwf	I2C_Master_Write@d+1
   873  0579  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
   874  057E                     l1659:
   875                           
   876                           ;Master_Test.c: 72:         pot = I2C_Master_Read(0);
   877  057E  3000               	movlw	0
   878  057F  00F0               	movwf	I2C_Master_Read@a
   879  0580  00F1               	movwf	I2C_Master_Read@a+1
   880  0581  120A  118A  2136  120A  118A  	fcall	_I2C_Master_Read
   881  0586  0870               	movf	?_I2C_Master_Read,w
   882  0587  1283               	bcf	3,5	;RP0=0, select bank0
   883  0588  1303               	bcf	3,6	;RP1=0, select bank0
   884  0589  00AD               	movwf	??_main
   885  058A  082D               	movf	??_main,w
   886  058B  00B6               	movwf	_pot
   887  058C                     l1661:
   888                           
   889                           ;Master_Test.c: 73:         I2C_Master_Stop();
   890  058C  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
   891  0591                     l1663:
   892                           
   893                           ;Master_Test.c: 74:         _delay((unsigned long)((50)*(8000000/4000.0)));
   894  0591  3082               	movlw	130
   895  0592  1283               	bcf	3,5	;RP0=0, select bank0
   896  0593  1303               	bcf	3,6	;RP1=0, select bank0
   897  0594  00AE               	movwf	??_main+1
   898  0595  30DD               	movlw	221
   899  0596  00AD               	movwf	??_main
   900  0597                     u1257:
   901  0597  0BAD               	decfsz	??_main,f
   902  0598  2D97               	goto	u1257
   903  0599  0BAE               	decfsz	??_main+1,f
   904  059A  2D97               	goto	u1257
   905  059B                     l1665:
   906                           
   907                           ;Master_Test.c: 76:         Division((pot*50/255));
   908  059B  30FF               	movlw	255
   909  059C  00F7               	movwf	___awdiv@divisor
   910  059D  3000               	movlw	0
   911  059E  00F8               	movwf	___awdiv@divisor+1
   912  059F  1283               	bcf	3,5	;RP0=0, select bank0
   913  05A0  1303               	bcf	3,6	;RP1=0, select bank0
   914  05A1  0836               	movf	_pot,w
   915  05A2  00AD               	movwf	??_main
   916  05A3  01AE               	clrf	??_main+1
   917  05A4  082D               	movf	??_main,w
   918  05A5  00F0               	movwf	___wmul@multiplier
   919  05A6  082E               	movf	??_main+1,w
   920  05A7  00F1               	movwf	___wmul@multiplier+1
   921  05A8  3032               	movlw	50
   922  05A9  00F2               	movwf	___wmul@multiplicand
   923  05AA  3000               	movlw	0
   924  05AB  00F3               	movwf	___wmul@multiplicand+1
   925  05AC  120A  118A  2111  120A  118A  	fcall	___wmul
   926  05B1  0871               	movf	?___wmul+1,w
   927  05B2  00FA               	movwf	___awdiv@dividend+1
   928  05B3  0870               	movf	?___wmul,w
   929  05B4  00F9               	movwf	___awdiv@dividend
   930  05B5  120A  118A  241A  120A  118A  	fcall	___awdiv
   931  05BA  0877               	movf	?___awdiv,w
   932  05BB  120A  118A  234E  120A  118A  	fcall	_Division
   933  05C0                     l1667:
   934                           
   935                           ;Master_Test.c: 77:         Lcd_Set_Cursor(2,13);
   936  05C0  300D               	movlw	13
   937  05C1  1283               	bcf	3,5	;RP0=0, select bank0
   938  05C2  1303               	bcf	3,6	;RP1=0, select bank0
   939  05C3  00AD               	movwf	??_main
   940  05C4  082D               	movf	??_main,w
   941  05C5  00F3               	movwf	Lcd_Set_Cursor@b
   942  05C6  3002               	movlw	2
   943  05C7  120A  118A  20F3  120A  118A  	fcall	_Lcd_Set_Cursor
   944  05CC                     l1669:
   945                           
   946                           ;Master_Test.c: 80:         sprintf(buffer, "%d", dec);
   947  05CC  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   948  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   949  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   950  05CF  00AD               	movwf	??_main
   951  05D0  082D               	movf	??_main,w
   952  05D1  00A0               	movwf	sprintf@f
   953  05D2  0833               	movf	_dec,w
   954  05D3  00AE               	movwf	??_main+1
   955  05D4  01AF               	clrf	??_main+2
   956  05D5  082E               	movf	??_main+1,w
   957  05D6  00A1               	movwf	?_sprintf+1
   958  05D7  082F               	movf	??_main+2,w
   959  05D8  00A2               	movwf	?_sprintf+2
   960  05D9  3037               	movlw	(low (_buffer| 0))& (0+255)
   961  05DA  120A  118A  2483  120A  118A  	fcall	_sprintf
   962  05DF                     l1671:
   963                           
   964                           ;Master_Test.c: 81:         Lcd_Write_String(buffer);
   965  05DF  3037               	movlw	(low (_buffer| 0))& (0+255)
   966  05E0  00F2               	movwf	Lcd_Write_String@a
   967  05E1  3000               	movlw	0
   968  05E2  00F3               	movwf	Lcd_Write_String@a+1
   969  05E3  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
   970  05E8                     l1673:
   971                           
   972                           ;Master_Test.c: 82:         sprintf(buffer, "%d", uni);
   973  05E8  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   974  05E9  1283               	bcf	3,5	;RP0=0, select bank0
   975  05EA  1303               	bcf	3,6	;RP1=0, select bank0
   976  05EB  00AD               	movwf	??_main
   977  05EC  082D               	movf	??_main,w
   978  05ED  00A0               	movwf	sprintf@f
   979  05EE  0832               	movf	_uni,w
   980  05EF  00AE               	movwf	??_main+1
   981  05F0  01AF               	clrf	??_main+2
   982  05F1  082E               	movf	??_main+1,w
   983  05F2  00A1               	movwf	?_sprintf+1
   984  05F3  082F               	movf	??_main+2,w
   985  05F4  00A2               	movwf	?_sprintf+2
   986  05F5  3037               	movlw	(low (_buffer| 0))& (0+255)
   987  05F6  120A  118A  2483  120A  118A  	fcall	_sprintf
   988  05FB                     l1675:
   989                           
   990                           ;Master_Test.c: 83:         Lcd_Write_String(buffer);
   991  05FB  3037               	movlw	(low (_buffer| 0))& (0+255)
   992  05FC  00F2               	movwf	Lcd_Write_String@a
   993  05FD  3000               	movlw	0
   994  05FE  00F3               	movwf	Lcd_Write_String@a+1
   995  05FF  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
   996  0604                     l1677:
   997                           
   998                           ;Master_Test.c: 85:         I2C_Master_Start();
   999  0604  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1000  0609                     l1679:
  1001                           
  1002                           ;Master_Test.c: 86:         I2C_Master_Write(0x51);
  1003  0609  3051               	movlw	81
  1004  060A  00F0               	movwf	I2C_Master_Write@d
  1005  060B  3000               	movlw	0
  1006  060C  00F1               	movwf	I2C_Master_Write@d+1
  1007  060D  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1008  0612                     l1681:
  1009                           
  1010                           ;Master_Test.c: 87:         temp = I2C_Master_Read(0);
  1011  0612  3000               	movlw	0
  1012  0613  00F0               	movwf	I2C_Master_Read@a
  1013  0614  00F1               	movwf	I2C_Master_Read@a+1
  1014  0615  120A  118A  2136  120A  118A  	fcall	_I2C_Master_Read
  1015  061A  0870               	movf	?_I2C_Master_Read,w
  1016  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1017  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1018  061D  00AD               	movwf	??_main
  1019  061E  082D               	movf	??_main,w
  1020  061F  00B1               	movwf	_temp
  1021  0620                     l1683:
  1022                           
  1023                           ;Master_Test.c: 88:         I2C_Master_Stop();
  1024  0620  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1025  0625                     l1685:
  1026                           
  1027                           ;Master_Test.c: 89:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1028  0625  3082               	movlw	130
  1029  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0628  00AE               	movwf	??_main+1
  1032  0629  30DD               	movlw	221
  1033  062A  00AD               	movwf	??_main
  1034  062B                     u1267:
  1035  062B  0BAD               	decfsz	??_main,f
  1036  062C  2E2B               	goto	u1267
  1037  062D  0BAE               	decfsz	??_main+1,f
  1038  062E  2E2B               	goto	u1267
  1039  062F                     l1687:
  1040                           
  1041                           ;Master_Test.c: 91:         Division(temp);
  1042  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0631  0831               	movf	_temp,w
  1045  0632  120A  118A  234E  120A  118A  	fcall	_Division
  1046  0637                     l1689:
  1047                           
  1048                           ;Master_Test.c: 92:         Lcd_Set_Cursor(2,1);
  1049  0637  01F3               	clrf	Lcd_Set_Cursor@b
  1050  0638  0AF3               	incf	Lcd_Set_Cursor@b,f
  1051  0639  3002               	movlw	2
  1052  063A  120A  118A  20F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1053                           
  1054                           ;Master_Test.c: 95:         sprintf(buffer, "%d", dec);
  1055  063F  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1056  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0642  00AD               	movwf	??_main
  1059  0643  082D               	movf	??_main,w
  1060  0644  00A0               	movwf	sprintf@f
  1061  0645  0833               	movf	_dec,w
  1062  0646  00AE               	movwf	??_main+1
  1063  0647  01AF               	clrf	??_main+2
  1064  0648  082E               	movf	??_main+1,w
  1065  0649  00A1               	movwf	?_sprintf+1
  1066  064A  082F               	movf	??_main+2,w
  1067  064B  00A2               	movwf	?_sprintf+2
  1068  064C  3037               	movlw	(low (_buffer| 0))& (0+255)
  1069  064D  120A  118A  2483  120A  118A  	fcall	_sprintf
  1070                           
  1071                           ;Master_Test.c: 96:         Lcd_Write_String(buffer);
  1072  0652  3037               	movlw	(low (_buffer| 0))& (0+255)
  1073  0653  00F2               	movwf	Lcd_Write_String@a
  1074  0654  3000               	movlw	0
  1075  0655  00F3               	movwf	Lcd_Write_String@a+1
  1076  0656  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  1077                           
  1078                           ;Master_Test.c: 97:         sprintf(buffer, "%d", uni);
  1079  065B  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1080  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1081  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1082  065E  00AD               	movwf	??_main
  1083  065F  082D               	movf	??_main,w
  1084  0660  00A0               	movwf	sprintf@f
  1085  0661  0832               	movf	_uni,w
  1086  0662  00AE               	movwf	??_main+1
  1087  0663  01AF               	clrf	??_main+2
  1088  0664  082E               	movf	??_main+1,w
  1089  0665  00A1               	movwf	?_sprintf+1
  1090  0666  082F               	movf	??_main+2,w
  1091  0667  00A2               	movwf	?_sprintf+2
  1092  0668  3037               	movlw	(low (_buffer| 0))& (0+255)
  1093  0669  120A  118A  2483  120A  118A  	fcall	_sprintf
  1094                           
  1095                           ;Master_Test.c: 98:         Lcd_Write_String(buffer);
  1096  066E  3037               	movlw	(low (_buffer| 0))& (0+255)
  1097  066F  00F2               	movwf	Lcd_Write_String@a
  1098  0670  3000               	movlw	0
  1099  0671  00F3               	movwf	Lcd_Write_String@a+1
  1100  0672  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  1101  0677                     l1691:
  1102                           
  1103                           ;Master_Test.c: 100:         I2C_Master_Start();
  1104  0677  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1105  067C                     l1693:
  1106                           
  1107                           ;Master_Test.c: 101:         I2C_Master_Write(0x31);
  1108  067C  3031               	movlw	49
  1109  067D  00F0               	movwf	I2C_Master_Write@d
  1110  067E  3000               	movlw	0
  1111  067F  00F1               	movwf	I2C_Master_Write@d+1
  1112  0680  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1113  0685                     l1695:
  1114                           
  1115                           ;Master_Test.c: 102:         con = I2C_Master_Read(0);
  1116  0685  3000               	movlw	0
  1117  0686  00F0               	movwf	I2C_Master_Read@a
  1118  0687  00F1               	movwf	I2C_Master_Read@a+1
  1119  0688  120A  118A  2136  120A  118A  	fcall	_I2C_Master_Read
  1120  068D  0870               	movf	?_I2C_Master_Read,w
  1121  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1122  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0690  00AD               	movwf	??_main
  1124  0691  082D               	movf	??_main,w
  1125  0692  00B5               	movwf	_con
  1126  0693                     l1697:
  1127                           
  1128                           ;Master_Test.c: 103:         I2C_Master_Stop();
  1129  0693  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1130  0698                     l1699:
  1131                           
  1132                           ;Master_Test.c: 104:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1133  0698  3082               	movlw	130
  1134  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1135  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1136  069B  00AE               	movwf	??_main+1
  1137  069C  30DD               	movlw	221
  1138  069D  00AD               	movwf	??_main
  1139  069E                     u1277:
  1140  069E  0BAD               	decfsz	??_main,f
  1141  069F  2E9E               	goto	u1277
  1142  06A0  0BAE               	decfsz	??_main+1,f
  1143  06A1  2E9E               	goto	u1277
  1144  06A2                     l1701:
  1145                           
  1146                           ;Master_Test.c: 106:         Division(con);
  1147  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1148  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1149  06A4  0835               	movf	_con,w
  1150  06A5  120A  118A  234E  120A  118A  	fcall	_Division
  1151  06AA                     l1703:
  1152                           
  1153                           ;Master_Test.c: 107:         Lcd_Set_Cursor(2,8);
  1154  06AA  3008               	movlw	8
  1155  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1156  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1157  06AD  00AD               	movwf	??_main
  1158  06AE  082D               	movf	??_main,w
  1159  06AF  00F3               	movwf	Lcd_Set_Cursor@b
  1160  06B0  3002               	movlw	2
  1161  06B1  120A  118A  20F3  120A  118A  	fcall	_Lcd_Set_Cursor
  1162  06B6                     l1705:
  1163                           
  1164                           ;Master_Test.c: 108:         sprintf(buffer, "%d", cen);
  1165  06B6  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1166  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1167  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1168  06B9  00AD               	movwf	??_main
  1169  06BA  082D               	movf	??_main,w
  1170  06BB  00A0               	movwf	sprintf@f
  1171  06BC  0834               	movf	_cen,w
  1172  06BD  00AE               	movwf	??_main+1
  1173  06BE  01AF               	clrf	??_main+2
  1174  06BF  082E               	movf	??_main+1,w
  1175  06C0  00A1               	movwf	?_sprintf+1
  1176  06C1  082F               	movf	??_main+2,w
  1177  06C2  00A2               	movwf	?_sprintf+2
  1178  06C3  3037               	movlw	(low (_buffer| 0))& (0+255)
  1179  06C4  120A  118A  2483  120A  118A  	fcall	_sprintf
  1180  06C9                     l1707:
  1181                           
  1182                           ;Master_Test.c: 109:         Lcd_Write_String(buffer);
  1183  06C9  3037               	movlw	(low (_buffer| 0))& (0+255)
  1184  06CA  00F2               	movwf	Lcd_Write_String@a
  1185  06CB  3000               	movlw	0
  1186  06CC  00F3               	movwf	Lcd_Write_String@a+1
  1187  06CD  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  1188  06D2                     l1709:
  1189                           
  1190                           ;Master_Test.c: 110:         sprintf(buffer, "%d", dec);
  1191  06D2  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1192  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1193  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1194  06D5  00AD               	movwf	??_main
  1195  06D6  082D               	movf	??_main,w
  1196  06D7  00A0               	movwf	sprintf@f
  1197  06D8  0833               	movf	_dec,w
  1198  06D9  00AE               	movwf	??_main+1
  1199  06DA  01AF               	clrf	??_main+2
  1200  06DB  082E               	movf	??_main+1,w
  1201  06DC  00A1               	movwf	?_sprintf+1
  1202  06DD  082F               	movf	??_main+2,w
  1203  06DE  00A2               	movwf	?_sprintf+2
  1204  06DF  3037               	movlw	(low (_buffer| 0))& (0+255)
  1205  06E0  120A  118A  2483  120A  118A  	fcall	_sprintf
  1206  06E5                     l1711:
  1207                           
  1208                           ;Master_Test.c: 111:         Lcd_Write_String(buffer);
  1209  06E5  3037               	movlw	(low (_buffer| 0))& (0+255)
  1210  06E6  00F2               	movwf	Lcd_Write_String@a
  1211  06E7  3000               	movlw	0
  1212  06E8  00F3               	movwf	Lcd_Write_String@a+1
  1213  06E9  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  1214  06EE                     l1713:
  1215                           
  1216                           ;Master_Test.c: 112:         sprintf(buffer, "%d", uni);
  1217  06EE  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1218  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1219  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1220  06F1  00AD               	movwf	??_main
  1221  06F2  082D               	movf	??_main,w
  1222  06F3  00A0               	movwf	sprintf@f
  1223  06F4  0832               	movf	_uni,w
  1224  06F5  00AE               	movwf	??_main+1
  1225  06F6  01AF               	clrf	??_main+2
  1226  06F7  082E               	movf	??_main+1,w
  1227  06F8  00A1               	movwf	?_sprintf+1
  1228  06F9  082F               	movf	??_main+2,w
  1229  06FA  00A2               	movwf	?_sprintf+2
  1230  06FB  3037               	movlw	(low (_buffer| 0))& (0+255)
  1231  06FC  120A  118A  2483  120A  118A  	fcall	_sprintf
  1232  0701                     l1715:
  1233                           
  1234                           ;Master_Test.c: 113:         Lcd_Write_String(buffer);
  1235  0701  3037               	movlw	(low (_buffer| 0))& (0+255)
  1236  0702  00F2               	movwf	Lcd_Write_String@a
  1237  0703  3000               	movlw	0
  1238  0704  00F3               	movwf	Lcd_Write_String@a+1
  1239  0705  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  1240  070A                     l1717:
  1241                           
  1242                           ;Master_Test.c: 115:         if(temp>=(pot*50/255)){
  1243  070A  30FF               	movlw	255
  1244  070B  00F7               	movwf	___awdiv@divisor
  1245  070C  3000               	movlw	0
  1246  070D  00F8               	movwf	___awdiv@divisor+1
  1247  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1248  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0710  0836               	movf	_pot,w
  1250  0711  00AD               	movwf	??_main
  1251  0712  01AE               	clrf	??_main+1
  1252  0713  082D               	movf	??_main,w
  1253  0714  00F0               	movwf	___wmul@multiplier
  1254  0715  082E               	movf	??_main+1,w
  1255  0716  00F1               	movwf	___wmul@multiplier+1
  1256  0717  3032               	movlw	50
  1257  0718  00F2               	movwf	___wmul@multiplicand
  1258  0719  3000               	movlw	0
  1259  071A  00F3               	movwf	___wmul@multiplicand+1
  1260  071B  120A  118A  2111  120A  118A  	fcall	___wmul
  1261  0720  0871               	movf	?___wmul+1,w
  1262  0721  00FA               	movwf	___awdiv@dividend+1
  1263  0722  0870               	movf	?___wmul,w
  1264  0723  00F9               	movwf	___awdiv@dividend
  1265  0724  120A  118A  241A  120A  118A  	fcall	___awdiv
  1266  0729  0878               	movf	?___awdiv+1,w
  1267  072A  3A80               	xorlw	128
  1268  072B  3C80               	sublw	128
  1269  072C  1D03               	skipz
  1270  072D  2F32               	goto	u1235
  1271  072E  0877               	movf	?___awdiv,w
  1272  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0731  0231               	subwf	_temp,w
  1275  0732                     u1235:
  1276  0732  1C03               	skipc
  1277  0733  2F35               	goto	u1231
  1278  0734  2F36               	goto	u1230
  1279  0735                     u1231:
  1280  0735  2F5D               	goto	l1723
  1281  0736                     u1230:
  1282  0736                     l1719:
  1283                           
  1284                           ;Master_Test.c: 116:             I2C_Master_Start();
  1285  0736  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1286                           
  1287                           ;Master_Test.c: 117:             I2C_Master_Write(0x30);
  1288  073B  3030               	movlw	48
  1289  073C  00F0               	movwf	I2C_Master_Write@d
  1290  073D  3000               	movlw	0
  1291  073E  00F1               	movwf	I2C_Master_Write@d+1
  1292  073F  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1293                           
  1294                           ;Master_Test.c: 118:             I2C_Master_Write(0x0f);
  1295  0744  300F               	movlw	15
  1296  0745  00F0               	movwf	I2C_Master_Write@d
  1297  0746  3000               	movlw	0
  1298  0747  00F1               	movwf	I2C_Master_Write@d+1
  1299  0748  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1300                           
  1301                           ;Master_Test.c: 119:             I2C_Master_Stop();
  1302  074D  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1303  0752                     l1721:
  1304                           
  1305                           ;Master_Test.c: 120:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1306  0752  3082               	movlw	130
  1307  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0755  00AE               	movwf	??_main+1
  1310  0756  30DD               	movlw	221
  1311  0757  00AD               	movwf	??_main
  1312  0758                     u1287:
  1313  0758  0BAD               	decfsz	??_main,f
  1314  0759  2F58               	goto	u1287
  1315  075A  0BAE               	decfsz	??_main+1,f
  1316  075B  2F58               	goto	u1287
  1317                           
  1318                           ;Master_Test.c: 121:         }
  1319  075C  2FA5               	goto	l1729
  1320  075D                     l1723:
  1321  075D  30FF               	movlw	255
  1322  075E  00F7               	movwf	___awdiv@divisor
  1323  075F  3000               	movlw	0
  1324  0760  00F8               	movwf	___awdiv@divisor+1
  1325  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0763  0836               	movf	_pot,w
  1328  0764  00AD               	movwf	??_main
  1329  0765  01AE               	clrf	??_main+1
  1330  0766  082D               	movf	??_main,w
  1331  0767  00F0               	movwf	___wmul@multiplier
  1332  0768  082E               	movf	??_main+1,w
  1333  0769  00F1               	movwf	___wmul@multiplier+1
  1334  076A  3032               	movlw	50
  1335  076B  00F2               	movwf	___wmul@multiplicand
  1336  076C  3000               	movlw	0
  1337  076D  00F3               	movwf	___wmul@multiplicand+1
  1338  076E  120A  118A  2111  120A  118A  	fcall	___wmul
  1339  0773  0871               	movf	?___wmul+1,w
  1340  0774  00FA               	movwf	___awdiv@dividend+1
  1341  0775  0870               	movf	?___wmul,w
  1342  0776  00F9               	movwf	___awdiv@dividend
  1343  0777  120A  118A  241A  120A  118A  	fcall	___awdiv
  1344  077C  0878               	movf	?___awdiv+1,w
  1345  077D  3A80               	xorlw	128
  1346  077E  3C80               	sublw	128
  1347  077F  1D03               	skipz
  1348  0780  2F85               	goto	u1245
  1349  0781  0877               	movf	?___awdiv,w
  1350  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0784  0231               	subwf	_temp,w
  1353  0785                     u1245:
  1354  0785  1803               	skipnc
  1355  0786  2F88               	goto	u1241
  1356  0787  2F89               	goto	u1240
  1357  0788                     u1241:
  1358  0788  2FA5               	goto	l1729
  1359  0789                     u1240:
  1360  0789                     l1725:
  1361                           
  1362                           ;Master_Test.c: 123:             I2C_Master_Start();
  1363  0789  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1364                           
  1365                           ;Master_Test.c: 124:             I2C_Master_Write(0x30);
  1366  078E  3030               	movlw	48
  1367  078F  00F0               	movwf	I2C_Master_Write@d
  1368  0790  3000               	movlw	0
  1369  0791  00F1               	movwf	I2C_Master_Write@d+1
  1370  0792  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1371                           
  1372                           ;Master_Test.c: 125:             I2C_Master_Write(0x00);
  1373  0797  3000               	movlw	0
  1374  0798  00F0               	movwf	I2C_Master_Write@d
  1375  0799  00F1               	movwf	I2C_Master_Write@d+1
  1376  079A  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1377                           
  1378                           ;Master_Test.c: 126:             I2C_Master_Stop();
  1379  079F  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1380  07A4  2F52               	goto	l1721
  1381  07A5                     l1729:
  1382                           
  1383                           ;Master_Test.c: 130:             I2C_Master_Start();
  1384  07A5  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1385  07AA                     l1731:
  1386                           
  1387                           ;Master_Test.c: 131:             I2C_Master_Write(0x50);
  1388  07AA  3050               	movlw	80
  1389  07AB  00F0               	movwf	I2C_Master_Write@d
  1390  07AC  3000               	movlw	0
  1391  07AD  00F1               	movwf	I2C_Master_Write@d+1
  1392  07AE  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1393  07B3                     l1733:
  1394                           
  1395                           ;Master_Test.c: 132:             I2C_Master_Write(0x01);
  1396  07B3  3001               	movlw	1
  1397  07B4  00F0               	movwf	I2C_Master_Write@d
  1398  07B5  3000               	movlw	0
  1399  07B6  00F1               	movwf	I2C_Master_Write@d+1
  1400  07B7  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1401  07BC                     l1735:
  1402                           
  1403                           ;Master_Test.c: 133:             I2C_Master_Stop();
  1404  07BC  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1405  07C1                     l1737:
  1406                           
  1407                           ;Master_Test.c: 134:             my_delay_s(con);
  1408  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1409  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1410  07C3  0835               	movf	_con,w
  1411  07C4  120A  118A  20DC  120A  118A  	fcall	_my_delay_s
  1412  07C9                     l1739:
  1413                           
  1414                           ;Master_Test.c: 136:             I2C_Master_Start();
  1415  07C9  120A  118A  2082  120A  118A  	fcall	_I2C_Master_Start
  1416  07CE                     l1741:
  1417                           
  1418                           ;Master_Test.c: 137:             I2C_Master_Write(0x50);
  1419  07CE  3050               	movlw	80
  1420  07CF  00F0               	movwf	I2C_Master_Write@d
  1421  07D0  3000               	movlw	0
  1422  07D1  00F1               	movwf	I2C_Master_Write@d+1
  1423  07D2  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1424  07D7                     l1743:
  1425                           
  1426                           ;Master_Test.c: 138:             I2C_Master_Write(0x00);
  1427  07D7  3000               	movlw	0
  1428  07D8  00F0               	movwf	I2C_Master_Write@d
  1429  07D9  00F1               	movwf	I2C_Master_Write@d+1
  1430  07DA  120A  118A  2094  120A  118A  	fcall	_I2C_Master_Write
  1431  07DF                     l1745:
  1432                           
  1433                           ;Master_Test.c: 139:             I2C_Master_Stop();
  1434  07DF  120A  118A  208B  120A  118A  	fcall	_I2C_Master_Stop
  1435                           
  1436                           ;Master_Test.c: 140:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1437  07E4  3082               	movlw	130
  1438  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1439  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1440  07E7  00AE               	movwf	??_main+1
  1441  07E8  30DD               	movlw	221
  1442  07E9  00AD               	movwf	??_main
  1443  07EA                     u1297:
  1444  07EA  0BAD               	decfsz	??_main,f
  1445  07EB  2FEA               	goto	u1297
  1446  07EC  0BAE               	decfsz	??_main+1,f
  1447  07ED  2FEA               	goto	u1297
  1448  07EE  2D70               	goto	l1655
  1449  07EF  120A  118A  2800   	ljmp	start
  1450  07F2                     __end_of_main:
  1451                           
  1452                           	psect	text1
  1453  0483                     __ptext1:	
  1454 ;; *************** function _sprintf *****************
  1455 ;; Defined at:
  1456 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  sp              1    wreg     PTR unsigned char 
  1459 ;;		 -> buffer(1), 
  1460 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1461 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  1462 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1465 ;;		 -> buffer(1), 
  1466 ;;  tmpval          4    0        struct .
  1467 ;;  val             2    9[BANK0 ] unsigned int 
  1468 ;;  cp              2    0        PTR const unsigned char 
  1469 ;;  len             2    0        unsigned int 
  1470 ;;  c               1   12[BANK0 ] unsigned char 
  1471 ;;  prec            1    8[BANK0 ] char 
  1472 ;;  flag            1    7[BANK0 ] unsigned char 
  1473 ;;  ap              1    6[BANK0 ] PTR void [1]
  1474 ;;		 -> ?_sprintf(2), 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    0[BANK0 ] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       3       0       0       0
  1485 ;;      Locals:         0       7       0       0       0
  1486 ;;      Temps:          0       3       0       0       0
  1487 ;;      Totals:         0      13       0       0       0
  1488 ;;Total ram usage:       13 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		___lwdiv
  1493 ;;		___lwmod
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _sprintf
  1501  0483                     _sprintf:
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505                           ;sprintf@sp stored from wreg
  1506  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0485  00AB               	movwf	sprintf@sp
  1509  0486                     l1573:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1512  0486  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1513  0487  00A3               	movwf	??_sprintf
  1514  0488  0823               	movf	??_sprintf,w
  1515  0489  00A6               	movwf	sprintf@ap
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1518  048A  2D54               	goto	l1625
  1519  048B                     l1575:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1522  048B  3025               	movlw	37
  1523  048C  062C               	xorwf	sprintf@c,w
  1524  048D  1903               	btfsc	3,2
  1525  048E  2C90               	goto	u1121
  1526  048F  2C91               	goto	u1120
  1527  0490                     u1121:
  1528  0490  2C9D               	goto	l1581
  1529  0491                     u1120:
  1530  0491                     l1577:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1533  0491  082C               	movf	sprintf@c,w
  1534  0492  00A3               	movwf	??_sprintf
  1535  0493  082B               	movf	sprintf@sp,w
  1536  0494  0084               	movwf	4
  1537  0495  0823               	movf	??_sprintf,w
  1538  0496  1383               	bcf	3,7	;select IRP bank0
  1539  0497  0080               	movwf	0
  1540  0498                     l1579:
  1541  0498  3001               	movlw	1
  1542  0499  00A3               	movwf	??_sprintf
  1543  049A  0823               	movf	??_sprintf,w
  1544  049B  07AB               	addwf	sprintf@sp,f
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1547  049C  2D54               	goto	l1625
  1548  049D                     l1581:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1551  049D  01A7               	clrf	sprintf@flag
  1552  049E                     l1585:	
  1553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1554                           
  1555  049E  3001               	movlw	1
  1556  049F  07A0               	addwf	sprintf@f,f
  1557  04A0  30FF               	movlw	-1
  1558  04A1  0720               	addwf	sprintf@f,w
  1559  04A2  0084               	movwf	4
  1560  04A3  120A  118A  200D  120A  118A  	fcall	stringdir
  1561  04A8  00AC               	movwf	sprintf@c
  1562  04A9  00A3               	movwf	??_sprintf
  1563  04AA  01A4               	clrf	??_sprintf+1
  1564                           
  1565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 1, Range of values is 0 to 0
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            4     3 (average)
  1571                           ; direct_byte           11     8 (fixed)
  1572                           ; jumptable            260     6 (fixed)
  1573                           ;	Chosen strategy is simple_byte
  1574  04AB  0824               	movf	??_sprintf+1,w
  1575  04AC  3A00               	xorlw	0	; case 0
  1576  04AD  1903               	skipnz
  1577  04AE  2CB0               	goto	l1771
  1578  04AF  2D54               	goto	l1625
  1579  04B0                     l1771:
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 3, Range of values is 0 to 105
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte           10     6 (average)
  1586                           ; jumptable            260     6 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588  04B0  0823               	movf	??_sprintf,w
  1589  04B1  3A00               	xorlw	0	; case 0
  1590  04B2  1903               	skipnz
  1591  04B3  2D66               	goto	l1627
  1592  04B4  3A64               	xorlw	100	; case 100
  1593  04B5  1903               	skipnz
  1594  04B6  2CBB               	goto	l1587
  1595  04B7  3A0D               	xorlw	13	; case 105
  1596  04B8  1903               	skipnz
  1597  04B9  2CBB               	goto	l1587
  1598  04BA  2D54               	goto	l1625
  1599  04BB                     l1587:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1602  04BB  0826               	movf	sprintf@ap,w
  1603  04BC  0084               	movwf	4
  1604  04BD  1383               	bcf	3,7	;select IRP bank0
  1605  04BE  0800               	movf	0,w
  1606  04BF  00A9               	movwf	sprintf@val
  1607  04C0  0A84               	incf	4,f
  1608  04C1  0800               	movf	0,w
  1609  04C2  00AA               	movwf	sprintf@val+1
  1610  04C3                     l1589:
  1611  04C3  3002               	movlw	2
  1612  04C4  00A3               	movwf	??_sprintf
  1613  04C5  0823               	movf	??_sprintf,w
  1614  04C6  07A6               	addwf	sprintf@ap,f
  1615  04C7                     l1591:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1618  04C7  1FAA               	btfss	sprintf@val+1,7
  1619  04C8  2CCA               	goto	u1131
  1620  04C9  2CCB               	goto	u1130
  1621  04CA                     u1131:
  1622  04CA  2CD4               	goto	l1597
  1623  04CB                     u1130:
  1624  04CB                     l1593:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1627  04CB  3003               	movlw	3
  1628  04CC  00A3               	movwf	??_sprintf
  1629  04CD  0823               	movf	??_sprintf,w
  1630  04CE  04A7               	iorwf	sprintf@flag,f
  1631  04CF                     l1595:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1634  04CF  09A9               	comf	sprintf@val,f
  1635  04D0  09AA               	comf	sprintf@val+1,f
  1636  04D1  0AA9               	incf	sprintf@val,f
  1637  04D2  1903               	skipnz
  1638  04D3  0AAA               	incf	sprintf@val+1,f
  1639  04D4                     l1597:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1642  04D4  01AC               	clrf	sprintf@c
  1643  04D5  0AAC               	incf	sprintf@c,f
  1644  04D6                     l1603:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1647  04D6  082C               	movf	sprintf@c,w
  1648  04D7  00A3               	movwf	??_sprintf
  1649  04D8  0723               	addwf	??_sprintf,w
  1650  04D9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1651  04DA  0084               	movwf	4
  1652  04DB  120A  118A  200D  120A  118A  	fcall	stringdir
  1653  04E0  00A4               	movwf	??_sprintf+1
  1654  04E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1655  04E6  00A5               	movwf	??_sprintf+2
  1656  04E7  0825               	movf	??_sprintf+2,w
  1657  04E8  022A               	subwf	sprintf@val+1,w
  1658  04E9  1D03               	skipz
  1659  04EA  2CED               	goto	u1145
  1660  04EB  0824               	movf	??_sprintf+1,w
  1661  04EC  0229               	subwf	sprintf@val,w
  1662  04ED                     u1145:
  1663  04ED  1803               	skipnc
  1664  04EE  2CF0               	goto	u1141
  1665  04EF  2CF1               	goto	u1140
  1666  04F0                     u1141:
  1667  04F0  2CF2               	goto	l1607
  1668  04F1                     u1140:
  1669  04F1  2CFC               	goto	l1609
  1670  04F2                     l1607:
  1671  04F2  3001               	movlw	1
  1672  04F3  00A3               	movwf	??_sprintf
  1673  04F4  0823               	movf	??_sprintf,w
  1674  04F5  07AC               	addwf	sprintf@c,f
  1675  04F6  3005               	movlw	5
  1676  04F7  062C               	xorwf	sprintf@c,w
  1677  04F8  1D03               	btfss	3,2
  1678  04F9  2CFB               	goto	u1151
  1679  04FA  2CFC               	goto	u1150
  1680  04FB                     u1151:
  1681  04FB  2CD6               	goto	l1603
  1682  04FC                     u1150:
  1683  04FC                     l1609:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1686  04FC  0827               	movf	sprintf@flag,w
  1687  04FD  3903               	andlw	3
  1688  04FE  1903               	btfsc	3,2
  1689  04FF  2D01               	goto	u1161
  1690  0500  2D02               	goto	u1160
  1691  0501                     u1161:
  1692  0501  2D0D               	goto	l1615
  1693  0502                     u1160:
  1694  0502                     l1611:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1697  0502  302D               	movlw	45
  1698  0503  00A3               	movwf	??_sprintf
  1699  0504  082B               	movf	sprintf@sp,w
  1700  0505  0084               	movwf	4
  1701  0506  0823               	movf	??_sprintf,w
  1702  0507  1383               	bcf	3,7	;select IRP bank0
  1703  0508  0080               	movwf	0
  1704  0509                     l1613:
  1705  0509  3001               	movlw	1
  1706  050A  00A3               	movwf	??_sprintf
  1707  050B  0823               	movf	??_sprintf,w
  1708  050C  07AB               	addwf	sprintf@sp,f
  1709  050D                     l1615:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1712  050D  082C               	movf	sprintf@c,w
  1713  050E  00A3               	movwf	??_sprintf
  1714  050F  0823               	movf	??_sprintf,w
  1715  0510  00A8               	movwf	sprintf@prec
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1718  0511  2D4B               	goto	l1623
  1719  0512                     l1617:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1722  0512  300A               	movlw	10
  1723  0513  00F8               	movwf	___lwmod@divisor
  1724  0514  3000               	movlw	0
  1725  0515  00F9               	movwf	___lwmod@divisor+1
  1726  0516  0828               	movf	sprintf@prec,w
  1727  0517  00A3               	movwf	??_sprintf
  1728  0518  0723               	addwf	??_sprintf,w
  1729  0519  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1730  051A  0084               	movwf	4
  1731  051B  120A  118A  200D  120A  118A  	fcall	stringdir
  1732  0520  00F0               	movwf	___lwdiv@divisor
  1733  0521  120A  118A  200D  120A  118A  	fcall	stringdir
  1734  0526  00F1               	movwf	___lwdiv@divisor+1
  1735  0527  082A               	movf	sprintf@val+1,w
  1736  0528  00F3               	movwf	___lwdiv@dividend+1
  1737  0529  0829               	movf	sprintf@val,w
  1738  052A  00F2               	movwf	___lwdiv@dividend
  1739  052B  120A  118A  2250  120A  118A  	fcall	___lwdiv
  1740  0530  0871               	movf	?___lwdiv+1,w
  1741  0531  00FB               	movwf	___lwmod@dividend+1
  1742  0532  0870               	movf	?___lwdiv,w
  1743  0533  00FA               	movwf	___lwmod@dividend
  1744  0534  120A  118A  21D4  120A  118A  	fcall	___lwmod
  1745  0539  0878               	movf	?___lwmod,w
  1746  053A  3E30               	addlw	48
  1747  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1748  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1749  053D  00A4               	movwf	??_sprintf+1
  1750  053E  0824               	movf	??_sprintf+1,w
  1751  053F  00AC               	movwf	sprintf@c
  1752  0540                     l1619:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1755  0540  082C               	movf	sprintf@c,w
  1756  0541  00A3               	movwf	??_sprintf
  1757  0542  082B               	movf	sprintf@sp,w
  1758  0543  0084               	movwf	4
  1759  0544  0823               	movf	??_sprintf,w
  1760  0545  1383               	bcf	3,7	;select IRP bank0
  1761  0546  0080               	movwf	0
  1762  0547                     l1621:
  1763  0547  3001               	movlw	1
  1764  0548  00A3               	movwf	??_sprintf
  1765  0549  0823               	movf	??_sprintf,w
  1766  054A  07AB               	addwf	sprintf@sp,f
  1767  054B                     l1623:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1770  054B  30FF               	movlw	255
  1771  054C  00A3               	movwf	??_sprintf
  1772  054D  0823               	movf	??_sprintf,w
  1773  054E  07A8               	addwf	sprintf@prec,f
  1774  054F  0A28               	incf	sprintf@prec,w
  1775  0550  1D03               	btfss	3,2
  1776  0551  2D53               	goto	u1171
  1777  0552  2D54               	goto	u1170
  1778  0553                     u1171:
  1779  0553  2D12               	goto	l1617
  1780  0554                     u1170:
  1781  0554                     l1625:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1784  0554  3001               	movlw	1
  1785  0555  07A0               	addwf	sprintf@f,f
  1786  0556  30FF               	movlw	-1
  1787  0557  0720               	addwf	sprintf@f,w
  1788  0558  0084               	movwf	4
  1789  0559  120A  118A  200D  120A  118A  	fcall	stringdir
  1790  055E  00A3               	movwf	??_sprintf
  1791  055F  0823               	movf	??_sprintf,w
  1792  0560  00AC               	movwf	sprintf@c
  1793  0561  082C               	movf	sprintf@c,w
  1794  0562  1D03               	btfss	3,2
  1795  0563  2D65               	goto	u1181
  1796  0564  2D66               	goto	u1180
  1797  0565                     u1181:
  1798  0565  2C8B               	goto	l1575
  1799  0566                     u1180:
  1800  0566                     l1627:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1803  0566  082B               	movf	sprintf@sp,w
  1804  0567  0084               	movwf	4
  1805  0568  1383               	bcf	3,7	;select IRP bank0
  1806  0569  0180               	clrf	0
  1807  056A                     l279:
  1808  056A  0008               	return
  1809  056B                     __end_of_sprintf:
  1810                           
  1811                           	psect	text2
  1812  01D4                     __ptext2:	
  1813 ;; *************** function ___lwmod *****************
  1814 ;; Defined at:
  1815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  divisor         2    8[COMMON] unsigned int 
  1818 ;;  dividend        2   10[COMMON] unsigned int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  counter         1   13[COMMON] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2    8[COMMON] unsigned int 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         4       0       0       0       0
  1831 ;;      Locals:         1       0       0       0       0
  1832 ;;      Temps:          1       0       0       0       0
  1833 ;;      Totals:         6       0       0       0       0
  1834 ;;Total ram usage:        6 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_sprintf
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function ___lwmod
  1845  01D4                     ___lwmod:
  1846  01D4                     l1497:	
  1847                           ;incstack = 0
  1848                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1849                           
  1850  01D4  0878               	movf	___lwmod@divisor,w
  1851  01D5  0479               	iorwf	___lwmod@divisor+1,w
  1852  01D6  1903               	btfsc	3,2
  1853  01D7  29D9               	goto	u1041
  1854  01D8  29DA               	goto	u1040
  1855  01D9                     u1041:
  1856  01D9  2A09               	goto	l1515
  1857  01DA                     u1040:
  1858  01DA                     l1499:
  1859  01DA  01FD               	clrf	___lwmod@counter
  1860  01DB  0AFD               	incf	___lwmod@counter,f
  1861  01DC  29E8               	goto	l1505
  1862  01DD                     l1501:
  1863  01DD  3001               	movlw	1
  1864  01DE                     u1055:
  1865  01DE  1003               	clrc
  1866  01DF  0DF8               	rlf	___lwmod@divisor,f
  1867  01E0  0DF9               	rlf	___lwmod@divisor+1,f
  1868  01E1  3EFF               	addlw	-1
  1869  01E2  1D03               	skipz
  1870  01E3  29DE               	goto	u1055
  1871  01E4                     l1503:
  1872  01E4  3001               	movlw	1
  1873  01E5  00FC               	movwf	??___lwmod
  1874  01E6  087C               	movf	??___lwmod,w
  1875  01E7  07FD               	addwf	___lwmod@counter,f
  1876  01E8                     l1505:
  1877  01E8  1FF9               	btfss	___lwmod@divisor+1,7
  1878  01E9  29EB               	goto	u1061
  1879  01EA  29EC               	goto	u1060
  1880  01EB                     u1061:
  1881  01EB  29DD               	goto	l1501
  1882  01EC                     u1060:
  1883  01EC                     l1507:
  1884  01EC  0879               	movf	___lwmod@divisor+1,w
  1885  01ED  027B               	subwf	___lwmod@dividend+1,w
  1886  01EE  1D03               	skipz
  1887  01EF  29F2               	goto	u1075
  1888  01F0  0878               	movf	___lwmod@divisor,w
  1889  01F1  027A               	subwf	___lwmod@dividend,w
  1890  01F2                     u1075:
  1891  01F2  1C03               	skipc
  1892  01F3  29F5               	goto	u1071
  1893  01F4  29F6               	goto	u1070
  1894  01F5                     u1071:
  1895  01F5  29FC               	goto	l1511
  1896  01F6                     u1070:
  1897  01F6                     l1509:
  1898  01F6  0878               	movf	___lwmod@divisor,w
  1899  01F7  02FA               	subwf	___lwmod@dividend,f
  1900  01F8  0879               	movf	___lwmod@divisor+1,w
  1901  01F9  1C03               	skipc
  1902  01FA  03FB               	decf	___lwmod@dividend+1,f
  1903  01FB  02FB               	subwf	___lwmod@dividend+1,f
  1904  01FC                     l1511:
  1905  01FC  3001               	movlw	1
  1906  01FD                     u1085:
  1907  01FD  1003               	clrc
  1908  01FE  0CF9               	rrf	___lwmod@divisor+1,f
  1909  01FF  0CF8               	rrf	___lwmod@divisor,f
  1910  0200  3EFF               	addlw	-1
  1911  0201  1D03               	skipz
  1912  0202  29FD               	goto	u1085
  1913  0203                     l1513:
  1914  0203  3001               	movlw	1
  1915  0204  02FD               	subwf	___lwmod@counter,f
  1916  0205  1D03               	btfss	3,2
  1917  0206  2A08               	goto	u1091
  1918  0207  2A09               	goto	u1090
  1919  0208                     u1091:
  1920  0208  29EC               	goto	l1507
  1921  0209                     u1090:
  1922  0209                     l1515:
  1923  0209  087B               	movf	___lwmod@dividend+1,w
  1924  020A  00F9               	movwf	?___lwmod+1
  1925  020B  087A               	movf	___lwmod@dividend,w
  1926  020C  00F8               	movwf	?___lwmod
  1927  020D                     l565:
  1928  020D  0008               	return
  1929  020E                     __end_of___lwmod:
  1930                           
  1931                           	psect	text3
  1932  0250                     __ptext3:	
  1933 ;; *************** function ___lwdiv *****************
  1934 ;; Defined at:
  1935 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  divisor         2    0[COMMON] unsigned int 
  1938 ;;  dividend        2    2[COMMON] unsigned int 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  quotient        2    5[COMMON] unsigned int 
  1941 ;;  counter         1    7[COMMON] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  2    0[COMMON] unsigned int 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         4       0       0       0       0
  1952 ;;      Locals:         3       0       0       0       0
  1953 ;;      Temps:          1       0       0       0       0
  1954 ;;      Totals:         8       0       0       0       0
  1955 ;;Total ram usage:        8 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_sprintf
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function ___lwdiv
  1966  0250                     ___lwdiv:
  1967  0250                     l1471:	
  1968                           ;incstack = 0
  1969                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1970                           
  1971  0250  01F5               	clrf	___lwdiv@quotient
  1972  0251  01F6               	clrf	___lwdiv@quotient+1
  1973  0252                     l1473:
  1974  0252  0870               	movf	___lwdiv@divisor,w
  1975  0253  0471               	iorwf	___lwdiv@divisor+1,w
  1976  0254  1903               	btfsc	3,2
  1977  0255  2A57               	goto	u971
  1978  0256  2A58               	goto	u970
  1979  0257                     u971:
  1980  0257  2A8F               	goto	l1493
  1981  0258                     u970:
  1982  0258                     l1475:
  1983  0258  01F7               	clrf	___lwdiv@counter
  1984  0259  0AF7               	incf	___lwdiv@counter,f
  1985  025A  2A66               	goto	l1481
  1986  025B                     l1477:
  1987  025B  3001               	movlw	1
  1988  025C                     u985:
  1989  025C  1003               	clrc
  1990  025D  0DF0               	rlf	___lwdiv@divisor,f
  1991  025E  0DF1               	rlf	___lwdiv@divisor+1,f
  1992  025F  3EFF               	addlw	-1
  1993  0260  1D03               	skipz
  1994  0261  2A5C               	goto	u985
  1995  0262                     l1479:
  1996  0262  3001               	movlw	1
  1997  0263  00F4               	movwf	??___lwdiv
  1998  0264  0874               	movf	??___lwdiv,w
  1999  0265  07F7               	addwf	___lwdiv@counter,f
  2000  0266                     l1481:
  2001  0266  1FF1               	btfss	___lwdiv@divisor+1,7
  2002  0267  2A69               	goto	u991
  2003  0268  2A6A               	goto	u990
  2004  0269                     u991:
  2005  0269  2A5B               	goto	l1477
  2006  026A                     u990:
  2007  026A                     l1483:
  2008  026A  3001               	movlw	1
  2009  026B                     u1005:
  2010  026B  1003               	clrc
  2011  026C  0DF5               	rlf	___lwdiv@quotient,f
  2012  026D  0DF6               	rlf	___lwdiv@quotient+1,f
  2013  026E  3EFF               	addlw	-1
  2014  026F  1D03               	skipz
  2015  0270  2A6B               	goto	u1005
  2016  0271  0871               	movf	___lwdiv@divisor+1,w
  2017  0272  0273               	subwf	___lwdiv@dividend+1,w
  2018  0273  1D03               	skipz
  2019  0274  2A77               	goto	u1015
  2020  0275  0870               	movf	___lwdiv@divisor,w
  2021  0276  0272               	subwf	___lwdiv@dividend,w
  2022  0277                     u1015:
  2023  0277  1C03               	skipc
  2024  0278  2A7A               	goto	u1011
  2025  0279  2A7B               	goto	u1010
  2026  027A                     u1011:
  2027  027A  2A82               	goto	l1489
  2028  027B                     u1010:
  2029  027B                     l1485:
  2030  027B  0870               	movf	___lwdiv@divisor,w
  2031  027C  02F2               	subwf	___lwdiv@dividend,f
  2032  027D  0871               	movf	___lwdiv@divisor+1,w
  2033  027E  1C03               	skipc
  2034  027F  03F3               	decf	___lwdiv@dividend+1,f
  2035  0280  02F3               	subwf	___lwdiv@dividend+1,f
  2036  0281                     l1487:
  2037  0281  1475               	bsf	___lwdiv@quotient,0
  2038  0282                     l1489:
  2039  0282  3001               	movlw	1
  2040  0283                     u1025:
  2041  0283  1003               	clrc
  2042  0284  0CF1               	rrf	___lwdiv@divisor+1,f
  2043  0285  0CF0               	rrf	___lwdiv@divisor,f
  2044  0286  3EFF               	addlw	-1
  2045  0287  1D03               	skipz
  2046  0288  2A83               	goto	u1025
  2047  0289                     l1491:
  2048  0289  3001               	movlw	1
  2049  028A  02F7               	subwf	___lwdiv@counter,f
  2050  028B  1D03               	btfss	3,2
  2051  028C  2A8E               	goto	u1031
  2052  028D  2A8F               	goto	u1030
  2053  028E                     u1031:
  2054  028E  2A6A               	goto	l1483
  2055  028F                     u1030:
  2056  028F                     l1493:
  2057  028F  0876               	movf	___lwdiv@quotient+1,w
  2058  0290  00F1               	movwf	?___lwdiv+1
  2059  0291  0875               	movf	___lwdiv@quotient,w
  2060  0292  00F0               	movwf	?___lwdiv
  2061  0293                     l555:
  2062  0293  0008               	return
  2063  0294                     __end_of___lwdiv:
  2064                           
  2065                           	psect	text4
  2066  019C                     __ptext4:	
  2067 ;; *************** function _setup *****************
  2068 ;; Defined at:
  2069 ;;		line 46 in file "Master_Test.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    2
  2090 ;; This function calls:
  2091 ;;		_I2C_Master_Init
  2092 ;;		_Lcd_Clear
  2093 ;;		_Lcd_Init
  2094 ;;		_Lcd_Set_Cursor
  2095 ;;		_Lcd_Write_String
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _setup
  2103  019C                     _setup:
  2104  019C                     l1555:	
  2105                           ;incstack = 0
  2106                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2107                           
  2108                           
  2109                           ;Master_Test.c: 47:     ANSEL = 0x00;
  2110  019C  1683               	bsf	3,5	;RP0=1, select bank3
  2111  019D  1703               	bsf	3,6	;RP1=1, select bank3
  2112  019E  0188               	clrf	8	;volatile
  2113                           
  2114                           ;Master_Test.c: 48:     ANSELH = 0x00;
  2115  019F  0189               	clrf	9	;volatile
  2116                           
  2117                           ;Master_Test.c: 50:     TRISA = 0x00;
  2118  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2119  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2120  01A2  0185               	clrf	5	;volatile
  2121                           
  2122                           ;Master_Test.c: 51:     TRISB = 0x00;
  2123  01A3  0186               	clrf	6	;volatile
  2124                           
  2125                           ;Master_Test.c: 52:     TRISC = 0x00;
  2126  01A4  0187               	clrf	7	;volatile
  2127                           
  2128                           ;Master_Test.c: 53:     TRISD = 0x00;
  2129  01A5  0188               	clrf	8	;volatile
  2130  01A6                     l1557:
  2131                           
  2132                           ;Master_Test.c: 55:     OSCCONbits.IRCF = 0B111;
  2133  01A6  3070               	movlw	112
  2134  01A7  048F               	iorwf	15,f	;volatile
  2135  01A8                     l1559:
  2136                           
  2137                           ;Master_Test.c: 56:     OSCCONbits.OSTS = 0;
  2138  01A8  118F               	bcf	15,3	;volatile
  2139  01A9                     l1561:
  2140                           
  2141                           ;Master_Test.c: 57:     OSCCONbits.SCS = 1;
  2142  01A9  140F               	bsf	15,0	;volatile
  2143  01AA                     l1563:
  2144                           
  2145                           ;Master_Test.c: 59:     I2C_Master_Init(100000);
  2146  01AA  3000               	movlw	0
  2147  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2148  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2149  01AD  00A3               	movwf	I2C_Master_Init@c+3
  2150  01AE  3001               	movlw	1
  2151  01AF  00A2               	movwf	I2C_Master_Init@c+2
  2152  01B0  3086               	movlw	134
  2153  01B1  00A1               	movwf	I2C_Master_Init@c+1
  2154  01B2  30A0               	movlw	160
  2155  01B3  00A0               	movwf	I2C_Master_Init@c
  2156  01B4  120A  118A  2164  120A  118A  	fcall	_I2C_Master_Init
  2157  01B9                     l1565:
  2158                           
  2159                           ;Master_Test.c: 60:     Lcd_Init();
  2160  01B9  120A  118A  22ED  120A  118A  	fcall	_Lcd_Init
  2161  01BE                     l1567:
  2162                           
  2163                           ;Master_Test.c: 61:     Lcd_Clear();
  2164  01BE  120A  118A  20AB  120A  118A  	fcall	_Lcd_Clear
  2165  01C3                     l1569:
  2166                           
  2167                           ;Master_Test.c: 62:     Lcd_Set_Cursor(1,0);
  2168  01C3  01F3               	clrf	Lcd_Set_Cursor@b
  2169  01C4  3001               	movlw	1
  2170  01C5  120A  118A  20F3  120A  118A  	fcall	_Lcd_Set_Cursor
  2171  01CA                     l1571:
  2172                           
  2173                           ;Master_Test.c: 63:     Lcd_Write_String("Tem Luz t(s) TO");
  2174  01CA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2175  01CB  00F2               	movwf	Lcd_Write_String@a
  2176  01CC  3080               	movlw	128
  2177  01CD  00F3               	movwf	Lcd_Write_String@a+1
  2178  01CE  120A  118A  220E  120A  118A  	fcall	_Lcd_Write_String
  2179  01D3                     l119:
  2180  01D3  0008               	return
  2181  01D4                     __end_of_setup:
  2182                           
  2183                           	psect	text5
  2184  020E                     __ptext5:	
  2185 ;; *************** function _Lcd_Write_String *****************
  2186 ;; Defined at:
  2187 ;;		line 73 in file "LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  a               2    2[COMMON] PTR unsigned char 
  2190 ;;		 -> buffer(1), STR_1(16), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  i               2    7[COMMON] int 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         2       0       0       0       0
  2203 ;;      Locals:         2       0       0       0       0
  2204 ;;      Temps:          3       0       0       0       0
  2205 ;;      Totals:         7       0       0       0       0
  2206 ;;Total ram usage:        7 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    1
  2209 ;; This function calls:
  2210 ;;		_Lcd_Write_Char
  2211 ;; This function is called by:
  2212 ;;		_setup
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _Lcd_Write_String
  2219  020E                     _Lcd_Write_String:
  2220  020E                     l1381:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2223                           
  2224                           
  2225                           ;LCD.c: 74:     int i;;LCD.c: 75:     for (i = 0; a[i] != '\0'; i++)
  2226  020E  01F7               	clrf	Lcd_Write_String@i
  2227  020F  01F8               	clrf	Lcd_Write_String@i+1
  2228  0210  2A33               	goto	l1387
  2229  0211                     l1383:
  2230                           
  2231                           ;LCD.c: 76:         Lcd_Write_Char(a[i]);
  2232  0211  0877               	movf	Lcd_Write_String@i,w
  2233  0212  0772               	addwf	Lcd_Write_String@a,w
  2234  0213  00F5               	movwf	??_Lcd_Write_String+1
  2235  0214  0873               	movf	Lcd_Write_String@a+1,w
  2236  0215  00F4               	movwf	??_Lcd_Write_String
  2237  0216  1803               	skipnc
  2238  0217  0AF4               	incf	??_Lcd_Write_String,f
  2239  0218  1FF7               	btfss	Lcd_Write_String@i,7
  2240  0219  2A1B               	goto	u750
  2241  021A  03F4               	decf	??_Lcd_Write_String,f
  2242  021B                     u750:
  2243  021B  0874               	movf	??_Lcd_Write_String,w
  2244  021C  00F6               	movwf	??_Lcd_Write_String+2
  2245  021D  0876               	movf	??_Lcd_Write_String+2,w
  2246  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2247  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0220  00FF               	movwf	btemp+1
  2249  0221  0875               	movf	??_Lcd_Write_String+1,w
  2250  0222  0084               	movwf	4
  2251  0223  120A  118A  2003  120A  118A  	fcall	stringtab
  2252  0228  120A  118A  20B8  120A  118A  	fcall	_Lcd_Write_Char
  2253  022D                     l1385:
  2254  022D  3001               	movlw	1
  2255  022E  07F7               	addwf	Lcd_Write_String@i,f
  2256  022F  1803               	skipnc
  2257  0230  0AF8               	incf	Lcd_Write_String@i+1,f
  2258  0231  3000               	movlw	0
  2259  0232  07F8               	addwf	Lcd_Write_String@i+1,f
  2260  0233                     l1387:
  2261  0233  0877               	movf	Lcd_Write_String@i,w
  2262  0234  0772               	addwf	Lcd_Write_String@a,w
  2263  0235  00F5               	movwf	??_Lcd_Write_String+1
  2264  0236  0873               	movf	Lcd_Write_String@a+1,w
  2265  0237  00F4               	movwf	??_Lcd_Write_String
  2266  0238  1803               	skipnc
  2267  0239  0AF4               	incf	??_Lcd_Write_String,f
  2268  023A  1FF7               	btfss	Lcd_Write_String@i,7
  2269  023B  2A3D               	goto	u760
  2270  023C  03F4               	decf	??_Lcd_Write_String,f
  2271  023D                     u760:
  2272  023D  0874               	movf	??_Lcd_Write_String,w
  2273  023E  00F6               	movwf	??_Lcd_Write_String+2
  2274  023F  0876               	movf	??_Lcd_Write_String+2,w
  2275  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0242  00FF               	movwf	btemp+1
  2278  0243  0875               	movf	??_Lcd_Write_String+1,w
  2279  0244  0084               	movwf	4
  2280  0245  120A  118A  2003  120A  118A  	fcall	stringtab
  2281  024A  3A00               	xorlw	0
  2282  024B  1D03               	skipz
  2283  024C  2A4E               	goto	u771
  2284  024D  2A4F               	goto	u770
  2285  024E                     u771:
  2286  024E  2A11               	goto	l1383
  2287  024F                     u770:
  2288  024F                     l163:
  2289  024F  0008               	return
  2290  0250                     __end_of_Lcd_Write_String:
  2291                           
  2292                           	psect	text6
  2293  00B8                     __ptext6:	
  2294 ;; *************** function _Lcd_Write_Char *****************
  2295 ;; Defined at:
  2296 ;;		line 59 in file "LCD.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  a               1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  a               1    1[COMMON] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         1       0       0       0       0
  2312 ;;      Temps:          1       0       0       0       0
  2313 ;;      Totals:         2       0       0       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_Lcd_Write_String
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _Lcd_Write_Char
  2325  00B8                     _Lcd_Write_Char:
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _Lcd_Write_Char: [wreg]
  2329                           ;Lcd_Write_Char@a stored from wreg
  2330  00B8  00F1               	movwf	Lcd_Write_Char@a
  2331  00B9                     l1295:
  2332                           
  2333                           ;LCD.c: 62:     RC6 = 1;
  2334  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2335  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2336  00BB  1707               	bsf	7,6	;volatile
  2337  00BC                     l1297:
  2338                           
  2339                           ;LCD.c: 63:     PORTD = a;
  2340  00BC  0871               	movf	Lcd_Write_Char@a,w
  2341  00BD  0088               	movwf	8	;volatile
  2342  00BE                     l1299:
  2343                           
  2344                           ;LCD.c: 64:     RC7 = 1;
  2345  00BE  1787               	bsf	7,7	;volatile
  2346                           
  2347                           ;LCD.c: 65:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2348  00BF  301A               	movlw	26
  2349  00C0  00F0               	movwf	??_Lcd_Write_Char
  2350  00C1                     u1307:
  2351  00C1  0BF0               	decfsz	??_Lcd_Write_Char,f
  2352  00C2  28C1               	goto	u1307
  2353  00C3  0000               	nop
  2354  00C4                     l1301:
  2355                           
  2356                           ;LCD.c: 70:     RC7 = 0;
  2357  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2358  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2359  00C6  1387               	bcf	7,7	;volatile
  2360  00C7                     l157:
  2361  00C7  0008               	return
  2362  00C8                     __end_of_Lcd_Write_Char:
  2363                           
  2364                           	psect	text7
  2365  00F3                     __ptext7:	
  2366 ;; *************** function _Lcd_Set_Cursor *****************
  2367 ;; Defined at:
  2368 ;;		line 30 in file "LCD.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  a               1    wreg     unsigned char 
  2371 ;;  b               1    3[COMMON] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  a               1    4[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         1       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         2       0       0       0       0
  2387 ;;Total ram usage:        2 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    1
  2390 ;; This function calls:
  2391 ;;		_Lcd_Cmd
  2392 ;; This function is called by:
  2393 ;;		_setup
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _Lcd_Set_Cursor
  2400  00F3                     _Lcd_Set_Cursor:
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2404                           ;Lcd_Set_Cursor@a stored from wreg
  2405  00F3  00F4               	movwf	Lcd_Set_Cursor@a
  2406  00F4                     l1373:
  2407                           
  2408                           ;LCD.c: 31:     if (a == 1){
  2409  00F4  0374               	decf	Lcd_Set_Cursor@a,w
  2410  00F5  1D03               	btfss	3,2
  2411  00F6  28F8               	goto	u731
  2412  00F7  28F9               	goto	u730
  2413  00F8                     u731:
  2414  00F8  2902               	goto	l1377
  2415  00F9                     u730:
  2416  00F9                     l1375:
  2417                           
  2418                           ;LCD.c: 32:         Lcd_Cmd((b & 0x0F)|0x80);
  2419  00F9  0873               	movf	Lcd_Set_Cursor@b,w
  2420  00FA  390F               	andlw	15
  2421  00FB  3880               	iorlw	128
  2422  00FC  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2423                           
  2424                           ;LCD.c: 33:     }
  2425  0101  2910               	goto	l151
  2426  0102                     l1377:
  2427  0102  3002               	movlw	2
  2428  0103  0674               	xorwf	Lcd_Set_Cursor@a,w
  2429  0104  1D03               	btfss	3,2
  2430  0105  2907               	goto	u741
  2431  0106  2908               	goto	u740
  2432  0107                     u741:
  2433  0107  2910               	goto	l151
  2434  0108                     u740:
  2435  0108                     l1379:
  2436                           
  2437                           ;LCD.c: 35:         Lcd_Cmd((b & 0x0F)|0xC0);
  2438  0108  0873               	movf	Lcd_Set_Cursor@b,w
  2439  0109  390F               	andlw	15
  2440  010A  38C0               	iorlw	192
  2441  010B  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2442  0110                     l151:
  2443  0110  0008               	return
  2444  0111                     __end_of_Lcd_Set_Cursor:
  2445                           
  2446                           	psect	text8
  2447  02ED                     __ptext8:	
  2448 ;; *************** function _Lcd_Init *****************
  2449 ;; Defined at:
  2450 ;;		line 40 in file "LCD.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0
  2466 ;;      Temps:          3       0       0       0       0
  2467 ;;      Totals:         3       0       0       0       0
  2468 ;;Total ram usage:        3 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    1
  2471 ;; This function calls:
  2472 ;;		_Lcd_Cmd
  2473 ;; This function is called by:
  2474 ;;		_setup
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _Lcd_Init
  2480  02ED                     _Lcd_Init:
  2481  02ED                     l1343:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2484                           
  2485                           
  2486                           ;LCD.c: 41:     PORTD = (0x00);
  2487  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2488  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2489  02EF  0188               	clrf	8	;volatile
  2490  02F0                     l1345:
  2491                           
  2492                           ;LCD.c: 42:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2493  02F0  3034               	movlw	52
  2494  02F1  00F4               	movwf	??_Lcd_Init+1
  2495  02F2  30F1               	movlw	241
  2496  02F3  00F3               	movwf	??_Lcd_Init
  2497  02F4                     u1317:
  2498  02F4  0BF3               	decfsz	??_Lcd_Init,f
  2499  02F5  2AF4               	goto	u1317
  2500  02F6  0BF4               	decfsz	??_Lcd_Init+1,f
  2501  02F7  2AF4               	goto	u1317
  2502  02F8  2AF9               	nop2
  2503  02F9                     l1347:
  2504                           
  2505                           ;LCD.c: 43:     Lcd_Cmd(0x30);
  2506  02F9  3030               	movlw	48
  2507  02FA  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2508  02FF                     l1349:
  2509                           
  2510                           ;LCD.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2511  02FF  300D               	movlw	13
  2512  0300  00F4               	movwf	??_Lcd_Init+1
  2513  0301  30FB               	movlw	251
  2514  0302  00F3               	movwf	??_Lcd_Init
  2515  0303                     u1327:
  2516  0303  0BF3               	decfsz	??_Lcd_Init,f
  2517  0304  2B03               	goto	u1327
  2518  0305  0BF4               	decfsz	??_Lcd_Init+1,f
  2519  0306  2B03               	goto	u1327
  2520  0307  2B08               	nop2
  2521  0308                     l1351:
  2522                           
  2523                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  2524  0308  3030               	movlw	48
  2525  0309  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2526  030E                     l1353:
  2527                           
  2528                           ;LCD.c: 46:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2529  030E  301D               	movlw	29
  2530  030F  00F4               	movwf	??_Lcd_Init+1
  2531  0310  3091               	movlw	145
  2532  0311  00F3               	movwf	??_Lcd_Init
  2533  0312                     u1337:
  2534  0312  0BF3               	decfsz	??_Lcd_Init,f
  2535  0313  2B12               	goto	u1337
  2536  0314  0BF4               	decfsz	??_Lcd_Init+1,f
  2537  0315  2B12               	goto	u1337
  2538  0316                     l1355:
  2539                           
  2540                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  2541  0316  3030               	movlw	48
  2542  0317  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2543  031C                     l1357:
  2544                           
  2545                           ;LCD.c: 49:     Lcd_Cmd(0x38);
  2546  031C  3038               	movlw	56
  2547  031D  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2548  0322                     l1359:
  2549                           
  2550                           ;LCD.c: 50:     Lcd_Cmd(0x10);
  2551  0322  3010               	movlw	16
  2552  0323  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2553  0328                     l1361:
  2554                           
  2555                           ;LCD.c: 51:     Lcd_Cmd(0x01);
  2556  0328  3001               	movlw	1
  2557  0329  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2558  032E                     l1363:
  2559                           
  2560                           ;LCD.c: 52:     Lcd_Cmd(0x06);
  2561  032E  3006               	movlw	6
  2562  032F  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2563  0334                     l1365:
  2564                           
  2565                           ;LCD.c: 53:     Lcd_Cmd(0x10);
  2566  0334  3010               	movlw	16
  2567  0335  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2568  033A                     l1367:
  2569                           
  2570                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  2571  033A  300C               	movlw	12
  2572  033B  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2573  0340                     l1369:
  2574                           
  2575                           ;LCD.c: 55:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2576  0340  3002               	movlw	2
  2577  0341  00F5               	movwf	??_Lcd_Init+2
  2578  0342  3004               	movlw	4
  2579  0343  00F4               	movwf	??_Lcd_Init+1
  2580  0344  30BA               	movlw	186
  2581  0345  00F3               	movwf	??_Lcd_Init
  2582  0346                     u1347:
  2583  0346  0BF3               	decfsz	??_Lcd_Init,f
  2584  0347  2B46               	goto	u1347
  2585  0348  0BF4               	decfsz	??_Lcd_Init+1,f
  2586  0349  2B46               	goto	u1347
  2587  034A  0BF5               	decfsz	??_Lcd_Init+2,f
  2588  034B  2B46               	goto	u1347
  2589  034C  0000               	nop
  2590  034D                     l154:
  2591  034D  0008               	return
  2592  034E                     __end_of_Lcd_Init:
  2593                           
  2594                           	psect	text9
  2595  00AB                     __ptext9:	
  2596 ;; *************** function _Lcd_Clear *****************
  2597 ;; Defined at:
  2598 ;;		line 25 in file "LCD.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    1
  2619 ;; This function calls:
  2620 ;;		_Lcd_Cmd
  2621 ;; This function is called by:
  2622 ;;		_setup
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _Lcd_Clear
  2628  00AB                     _Lcd_Clear:
  2629  00AB                     l1371:	
  2630                           ;incstack = 0
  2631                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2632                           
  2633                           
  2634                           ;LCD.c: 26:     Lcd_Cmd(0);
  2635  00AB  3000               	movlw	0
  2636  00AC  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2637                           
  2638                           ;LCD.c: 27:     Lcd_Cmd(1);
  2639  00B1  3001               	movlw	1
  2640  00B2  120A  118A  20C8  120A  118A  	fcall	_Lcd_Cmd
  2641  00B7                     l145:
  2642  00B7  0008               	return
  2643  00B8                     __end_of_Lcd_Clear:
  2644                           
  2645                           	psect	text10
  2646  00C8                     __ptext10:	
  2647 ;; *************** function _Lcd_Cmd *****************
  2648 ;; Defined at:
  2649 ;;		line 17 in file "LCD.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  a               1    wreg     unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  a               1    2[COMMON] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         1       0       0       0       0
  2665 ;;      Temps:          2       0       0       0       0
  2666 ;;      Totals:         3       0       0       0       0
  2667 ;;Total ram usage:        3 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_Lcd_Clear
  2673 ;;		_Lcd_Set_Cursor
  2674 ;;		_Lcd_Init
  2675 ;;		_Lcd_Shift_Right
  2676 ;;		_Lcd_Shift_Left
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _Lcd_Cmd
  2682  00C8                     _Lcd_Cmd:
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _Lcd_Cmd: [wreg]
  2686                           ;Lcd_Cmd@a stored from wreg
  2687  00C8  00F2               	movwf	Lcd_Cmd@a
  2688  00C9                     l1287:
  2689                           
  2690                           ;LCD.c: 18:     RC6 = 0;
  2691  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2692  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2693  00CB  1307               	bcf	7,6	;volatile
  2694  00CC                     l1289:
  2695                           
  2696                           ;LCD.c: 19:     PORTD = a;
  2697  00CC  0872               	movf	Lcd_Cmd@a,w
  2698  00CD  0088               	movwf	8	;volatile
  2699  00CE                     l1291:
  2700                           
  2701                           ;LCD.c: 20:     RC7 = 1;
  2702  00CE  1787               	bsf	7,7	;volatile
  2703                           
  2704                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2705  00CF  300D               	movlw	13
  2706  00D0  00F1               	movwf	??_Lcd_Cmd+1
  2707  00D1  30FB               	movlw	251
  2708  00D2  00F0               	movwf	??_Lcd_Cmd
  2709  00D3                     u1357:
  2710  00D3  0BF0               	decfsz	??_Lcd_Cmd,f
  2711  00D4  28D3               	goto	u1357
  2712  00D5  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2713  00D6  28D3               	goto	u1357
  2714  00D7  28D8               	nop2
  2715  00D8                     l1293:
  2716                           
  2717                           ;LCD.c: 22:     RC7 = 0;
  2718  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2719  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2720  00DA  1387               	bcf	7,7	;volatile
  2721  00DB                     l142:
  2722  00DB  0008               	return
  2723  00DC                     __end_of_Lcd_Cmd:
  2724                           
  2725                           	psect	text11
  2726  0164                     __ptext11:	
  2727 ;; *************** function _I2C_Master_Init *****************
  2728 ;; Defined at:
  2729 ;;		line 16 in file "I2C.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  c               4    0[BANK0 ] const unsigned long 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       4       0       0       0
  2744 ;;      Locals:         0       0       0       0       0
  2745 ;;      Temps:          0       4       0       0       0
  2746 ;;      Totals:         0       8       0       0       0
  2747 ;;Total ram usage:        8 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    1
  2750 ;; This function calls:
  2751 ;;		___lldiv
  2752 ;; This function is called by:
  2753 ;;		_setup
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _I2C_Master_Init
  2759  0164                     _I2C_Master_Init:
  2760  0164                     l1327:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2763                           
  2764                           
  2765                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2766  0164  3028               	movlw	40
  2767  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0167  0094               	movwf	20	;volatile
  2770  0168                     l1329:
  2771                           
  2772                           ;I2C.c: 19:     SSPCON2 = 0;
  2773  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0169  1303               	bcf	3,6	;RP1=0, select bank1
  2775  016A  0191               	clrf	17	;volatile
  2776  016B                     l1331:
  2777                           
  2778                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2779  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2780  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2781  016D  0820               	movf	I2C_Master_Init@c,w
  2782  016E  00A4               	movwf	??_I2C_Master_Init
  2783  016F  0821               	movf	I2C_Master_Init@c+1,w
  2784  0170  00A5               	movwf	??_I2C_Master_Init+1
  2785  0171  0822               	movf	I2C_Master_Init@c+2,w
  2786  0172  00A6               	movwf	??_I2C_Master_Init+2
  2787  0173  0823               	movf	I2C_Master_Init@c+3,w
  2788  0174  00A7               	movwf	??_I2C_Master_Init+3
  2789  0175  3002               	movlw	2
  2790  0176                     u705:
  2791  0176  1003               	clrc
  2792  0177  0DA4               	rlf	??_I2C_Master_Init,f
  2793  0178  0DA5               	rlf	??_I2C_Master_Init+1,f
  2794  0179  0DA6               	rlf	??_I2C_Master_Init+2,f
  2795  017A  0DA7               	rlf	??_I2C_Master_Init+3,f
  2796  017B                     u700:
  2797  017B  3EFF               	addlw	-1
  2798  017C  1D03               	skipz
  2799  017D  2976               	goto	u705
  2800  017E  0827               	movf	??_I2C_Master_Init+3,w
  2801  017F  00F3               	movwf	___lldiv@divisor+3
  2802  0180  0826               	movf	??_I2C_Master_Init+2,w
  2803  0181  00F2               	movwf	___lldiv@divisor+2
  2804  0182  0825               	movf	??_I2C_Master_Init+1,w
  2805  0183  00F1               	movwf	___lldiv@divisor+1
  2806  0184  0824               	movf	??_I2C_Master_Init,w
  2807  0185  00F0               	movwf	___lldiv@divisor
  2808  0186  3000               	movlw	0
  2809  0187  00F7               	movwf	___lldiv@dividend+3
  2810  0188  307A               	movlw	122
  2811  0189  00F6               	movwf	___lldiv@dividend+2
  2812  018A  3012               	movlw	18
  2813  018B  00F5               	movwf	___lldiv@dividend+1
  2814  018C  3000               	movlw	0
  2815  018D  00F4               	movwf	___lldiv@dividend
  2816  018E  120A  118A  23B4  120A  118A  	fcall	___lldiv
  2817  0193  0870               	movf	?___lldiv,w
  2818  0194  3EFF               	addlw	255
  2819  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2821  0197  0093               	movwf	19	;volatile
  2822  0198                     l1333:
  2823                           
  2824                           ;I2C.c: 21:     SSPSTAT = 0;
  2825  0198  0194               	clrf	20	;volatile
  2826  0199                     l1335:
  2827                           
  2828                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2829  0199  1587               	bsf	7,3	;volatile
  2830  019A                     l1337:
  2831                           
  2832                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2833  019A  1607               	bsf	7,4	;volatile
  2834  019B                     l29:
  2835  019B  0008               	return
  2836  019C                     __end_of_I2C_Master_Init:
  2837                           
  2838                           	psect	text12
  2839  03B4                     __ptext12:	
  2840 ;; *************** function ___lldiv *****************
  2841 ;; Defined at:
  2842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  divisor         4    0[COMMON] unsigned long 
  2845 ;;  dividend        4    4[COMMON] unsigned long 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  quotient        4    9[COMMON] unsigned long 
  2848 ;;  counter         1   13[COMMON] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  4    0[COMMON] unsigned long 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         8       0       0       0       0
  2859 ;;      Locals:         5       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0
  2861 ;;      Totals:        14       0       0       0       0
  2862 ;;Total ram usage:       14 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_I2C_Master_Init
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function ___lldiv
  2873  03B4                     ___lldiv:
  2874  03B4                     l1303:	
  2875                           ;incstack = 0
  2876                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2877                           
  2878  03B4  3000               	movlw	0
  2879  03B5  00FC               	movwf	___lldiv@quotient+3
  2880  03B6  3000               	movlw	0
  2881  03B7  00FB               	movwf	___lldiv@quotient+2
  2882  03B8  3000               	movlw	0
  2883  03B9  00FA               	movwf	___lldiv@quotient+1
  2884  03BA  3000               	movlw	0
  2885  03BB  00F9               	movwf	___lldiv@quotient
  2886  03BC  0873               	movf	___lldiv@divisor+3,w
  2887  03BD  0472               	iorwf	___lldiv@divisor+2,w
  2888  03BE  0471               	iorwf	___lldiv@divisor+1,w
  2889  03BF  0470               	iorwf	___lldiv@divisor,w
  2890  03C0  1903               	skipnz
  2891  03C1  2BC3               	goto	u631
  2892  03C2  2BC4               	goto	u630
  2893  03C3                     u631:
  2894  03C3  2C11               	goto	l1323
  2895  03C4                     u630:
  2896  03C4                     l1305:
  2897  03C4  01FD               	clrf	___lldiv@counter
  2898  03C5  0AFD               	incf	___lldiv@counter,f
  2899  03C6  2BD4               	goto	l1309
  2900  03C7                     l1307:
  2901  03C7  3001               	movlw	1
  2902  03C8  00F8               	movwf	??___lldiv
  2903  03C9                     u645:
  2904  03C9  1003               	clrc
  2905  03CA  0DF0               	rlf	___lldiv@divisor,f
  2906  03CB  0DF1               	rlf	___lldiv@divisor+1,f
  2907  03CC  0DF2               	rlf	___lldiv@divisor+2,f
  2908  03CD  0DF3               	rlf	___lldiv@divisor+3,f
  2909  03CE  0BF8               	decfsz	??___lldiv,f
  2910  03CF  2BC9               	goto	u645
  2911  03D0  3001               	movlw	1
  2912  03D1  00F8               	movwf	??___lldiv
  2913  03D2  0878               	movf	??___lldiv,w
  2914  03D3  07FD               	addwf	___lldiv@counter,f
  2915  03D4                     l1309:
  2916  03D4  1FF3               	btfss	___lldiv@divisor+3,7
  2917  03D5  2BD7               	goto	u651
  2918  03D6  2BD8               	goto	u650
  2919  03D7                     u651:
  2920  03D7  2BC7               	goto	l1307
  2921  03D8                     u650:
  2922  03D8                     l1311:
  2923  03D8  3001               	movlw	1
  2924  03D9  00F8               	movwf	??___lldiv
  2925  03DA                     u665:
  2926  03DA  1003               	clrc
  2927  03DB  0DF9               	rlf	___lldiv@quotient,f
  2928  03DC  0DFA               	rlf	___lldiv@quotient+1,f
  2929  03DD  0DFB               	rlf	___lldiv@quotient+2,f
  2930  03DE  0DFC               	rlf	___lldiv@quotient+3,f
  2931  03DF  0BF8               	decfsz	??___lldiv,f
  2932  03E0  2BDA               	goto	u665
  2933  03E1                     l1313:
  2934  03E1  0873               	movf	___lldiv@divisor+3,w
  2935  03E2  0277               	subwf	___lldiv@dividend+3,w
  2936  03E3  1D03               	skipz
  2937  03E4  2BEF               	goto	u675
  2938  03E5  0872               	movf	___lldiv@divisor+2,w
  2939  03E6  0276               	subwf	___lldiv@dividend+2,w
  2940  03E7  1D03               	skipz
  2941  03E8  2BEF               	goto	u675
  2942  03E9  0871               	movf	___lldiv@divisor+1,w
  2943  03EA  0275               	subwf	___lldiv@dividend+1,w
  2944  03EB  1D03               	skipz
  2945  03EC  2BEF               	goto	u675
  2946  03ED  0870               	movf	___lldiv@divisor,w
  2947  03EE  0274               	subwf	___lldiv@dividend,w
  2948  03EF                     u675:
  2949  03EF  1C03               	skipc
  2950  03F0  2BF2               	goto	u671
  2951  03F1  2BF3               	goto	u670
  2952  03F2                     u671:
  2953  03F2  2C02               	goto	l1319
  2954  03F3                     u670:
  2955  03F3                     l1315:
  2956  03F3  0870               	movf	___lldiv@divisor,w
  2957  03F4  02F4               	subwf	___lldiv@dividend,f
  2958  03F5  0871               	movf	___lldiv@divisor+1,w
  2959  03F6  1C03               	skipc
  2960  03F7  0F71               	incfsz	___lldiv@divisor+1,w
  2961  03F8  02F5               	subwf	___lldiv@dividend+1,f
  2962  03F9  0872               	movf	___lldiv@divisor+2,w
  2963  03FA  1C03               	skipc
  2964  03FB  0F72               	incfsz	___lldiv@divisor+2,w
  2965  03FC  02F6               	subwf	___lldiv@dividend+2,f
  2966  03FD  0873               	movf	___lldiv@divisor+3,w
  2967  03FE  1C03               	skipc
  2968  03FF  0F73               	incfsz	___lldiv@divisor+3,w
  2969  0400  02F7               	subwf	___lldiv@dividend+3,f
  2970  0401                     l1317:
  2971  0401  1479               	bsf	___lldiv@quotient,0
  2972  0402                     l1319:
  2973  0402  3001               	movlw	1
  2974  0403                     u685:
  2975  0403  1003               	clrc
  2976  0404  0CF3               	rrf	___lldiv@divisor+3,f
  2977  0405  0CF2               	rrf	___lldiv@divisor+2,f
  2978  0406  0CF1               	rrf	___lldiv@divisor+1,f
  2979  0407  0CF0               	rrf	___lldiv@divisor,f
  2980  0408  3EFF               	addlw	-1
  2981  0409  1D03               	skipz
  2982  040A  2C03               	goto	u685
  2983  040B                     l1321:
  2984  040B  3001               	movlw	1
  2985  040C  02FD               	subwf	___lldiv@counter,f
  2986  040D  1D03               	btfss	3,2
  2987  040E  2C10               	goto	u691
  2988  040F  2C11               	goto	u690
  2989  0410                     u691:
  2990  0410  2BD8               	goto	l1311
  2991  0411                     u690:
  2992  0411                     l1323:
  2993  0411  087C               	movf	___lldiv@quotient+3,w
  2994  0412  00F3               	movwf	?___lldiv+3
  2995  0413  087B               	movf	___lldiv@quotient+2,w
  2996  0414  00F2               	movwf	?___lldiv+2
  2997  0415  087A               	movf	___lldiv@quotient+1,w
  2998  0416  00F1               	movwf	?___lldiv+1
  2999  0417  0879               	movf	___lldiv@quotient,w
  3000  0418  00F0               	movwf	?___lldiv
  3001  0419                     l319:
  3002  0419  0008               	return
  3003  041A                     __end_of___lldiv:
  3004                           
  3005                           	psect	text13
  3006  00DC                     __ptext13:	
  3007 ;; *************** function _my_delay_s *****************
  3008 ;; Defined at:
  3009 ;;		line 33 in file "Master_Test.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  tiempo          1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  tiempo          1    3[COMMON] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         1       0       0       0       0
  3025 ;;      Temps:          3       0       0       0       0
  3026 ;;      Totals:         4       0       0       0       0
  3027 ;;Total ram usage:        4 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _my_delay_s
  3038  00DC                     _my_delay_s:
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _my_delay_s: [wreg+status,2+status,0]
  3042                           ;my_delay_s@tiempo stored from wreg
  3043  00DC  00F3               	movwf	my_delay_s@tiempo
  3044  00DD                     l1547:
  3045                           
  3046                           ;Master_Test.c: 34:     while(tiempo != 0){
  3047  00DD  28ED               	goto	l1551
  3048  00DE                     l1549:
  3049                           
  3050                           ;Master_Test.c: 35:         tiempo--;
  3051  00DE  3001               	movlw	1
  3052  00DF  02F3               	subwf	my_delay_s@tiempo,f
  3053                           
  3054                           ;Master_Test.c: 36:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3055  00E0  300B               	movlw	11
  3056  00E1  00F2               	movwf	??_my_delay_s+2
  3057  00E2  3026               	movlw	38
  3058  00E3  00F1               	movwf	??_my_delay_s+1
  3059  00E4  305D               	movlw	93
  3060  00E5  00F0               	movwf	??_my_delay_s
  3061  00E6                     u1367:
  3062  00E6  0BF0               	decfsz	??_my_delay_s,f
  3063  00E7  28E6               	goto	u1367
  3064  00E8  0BF1               	decfsz	??_my_delay_s+1,f
  3065  00E9  28E6               	goto	u1367
  3066  00EA  0BF2               	decfsz	??_my_delay_s+2,f
  3067  00EB  28E6               	goto	u1367
  3068  00EC  28ED               	nop2
  3069  00ED                     l1551:
  3070                           
  3071                           ;Master_Test.c: 34:     while(tiempo != 0){
  3072  00ED  0873               	movf	my_delay_s@tiempo,w
  3073  00EE  1D03               	btfss	3,2
  3074  00EF  28F1               	goto	u1111
  3075  00F0  28F2               	goto	u1110
  3076  00F1                     u1111:
  3077  00F1  28DE               	goto	l1549
  3078  00F2                     u1110:
  3079  00F2                     l113:
  3080  00F2  0008               	return
  3081  00F3                     __end_of_my_delay_s:
  3082                           
  3083                           	psect	text14
  3084  0111                     __ptext14:	
  3085 ;; *************** function ___wmul *****************
  3086 ;; Defined at:
  3087 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  multiplier      2    0[COMMON] unsigned int 
  3090 ;;  multiplicand    2    2[COMMON] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  product         2    4[COMMON] unsigned int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2    0[COMMON] unsigned int 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         4       0       0       0       0
  3103 ;;      Locals:         2       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         6       0       0       0       0
  3106 ;;Total ram usage:        6 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function ___wmul
  3117  0111                     ___wmul:
  3118  0111                     l1635:	
  3119                           ;incstack = 0
  3120                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3121                           
  3122  0111  01F4               	clrf	___wmul@product
  3123  0112  01F5               	clrf	___wmul@product+1
  3124  0113                     l1637:
  3125  0113  1C70               	btfss	___wmul@multiplier,0
  3126  0114  2916               	goto	u1191
  3127  0115  2917               	goto	u1190
  3128  0116                     u1191:
  3129  0116  291D               	goto	l283
  3130  0117                     u1190:
  3131  0117                     l1639:
  3132  0117  0872               	movf	___wmul@multiplicand,w
  3133  0118  07F4               	addwf	___wmul@product,f
  3134  0119  1803               	skipnc
  3135  011A  0AF5               	incf	___wmul@product+1,f
  3136  011B  0873               	movf	___wmul@multiplicand+1,w
  3137  011C  07F5               	addwf	___wmul@product+1,f
  3138  011D                     l283:
  3139  011D  3001               	movlw	1
  3140  011E                     u1205:
  3141  011E  1003               	clrc
  3142  011F  0DF2               	rlf	___wmul@multiplicand,f
  3143  0120  0DF3               	rlf	___wmul@multiplicand+1,f
  3144  0121  3EFF               	addlw	-1
  3145  0122  1D03               	skipz
  3146  0123  291E               	goto	u1205
  3147  0124                     l1641:
  3148  0124  3001               	movlw	1
  3149  0125                     u1215:
  3150  0125  1003               	clrc
  3151  0126  0CF1               	rrf	___wmul@multiplier+1,f
  3152  0127  0CF0               	rrf	___wmul@multiplier,f
  3153  0128  3EFF               	addlw	-1
  3154  0129  1D03               	skipz
  3155  012A  2925               	goto	u1215
  3156  012B                     l1643:
  3157  012B  0870               	movf	___wmul@multiplier,w
  3158  012C  0471               	iorwf	___wmul@multiplier+1,w
  3159  012D  1D03               	btfss	3,2
  3160  012E  2930               	goto	u1221
  3161  012F  2931               	goto	u1220
  3162  0130                     u1221:
  3163  0130  2913               	goto	l1637
  3164  0131                     u1220:
  3165  0131                     l1645:
  3166  0131  0875               	movf	___wmul@product+1,w
  3167  0132  00F1               	movwf	?___wmul+1
  3168  0133  0874               	movf	___wmul@product,w
  3169  0134  00F0               	movwf	?___wmul
  3170  0135                     l285:
  3171  0135  0008               	return
  3172  0136                     __end_of___wmul:
  3173                           
  3174                           	psect	text15
  3175  0094                     __ptext15:	
  3176 ;; *************** function _I2C_Master_Write *****************
  3177 ;; Defined at:
  3178 ;;		line 65 in file "I2C.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  d               2    0[COMMON] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         2       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0
  3195 ;;      Totals:         2       0       0       0       0
  3196 ;;Total ram usage:        2 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    1
  3199 ;; This function calls:
  3200 ;;		_I2C_Master_Wait
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _I2C_Master_Write
  3208  0094                     _I2C_Master_Write:
  3209  0094                     l1527:	
  3210                           ;incstack = 0
  3211                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3212                           
  3213                           
  3214                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3215  0094  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3216  0099                     l1529:
  3217                           
  3218                           ;I2C.c: 68:     SSPBUF = d;
  3219  0099  0870               	movf	I2C_Master_Write@d,w
  3220  009A  1283               	bcf	3,5	;RP0=0, select bank0
  3221  009B  1303               	bcf	3,6	;RP1=0, select bank0
  3222  009C  0093               	movwf	19	;volatile
  3223  009D                     l47:
  3224  009D  0008               	return
  3225  009E                     __end_of_I2C_Master_Write:
  3226                           
  3227                           	psect	text16
  3228  008B                     __ptext16:	
  3229 ;; *************** function _I2C_Master_Stop *****************
  3230 ;; Defined at:
  3231 ;;		line 55 in file "I2C.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3245 ;;      Params:         0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    1
  3252 ;; This function calls:
  3253 ;;		_I2C_Master_Wait
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _I2C_Master_Stop
  3261  008B                     _I2C_Master_Stop:
  3262  008B                     l1523:	
  3263                           ;incstack = 0
  3264                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3265                           
  3266                           
  3267                           ;I2C.c: 57:     I2C_Master_Wait();
  3268  008B  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3269  0090                     l1525:
  3270                           
  3271                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3272  0090  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0091  1303               	bcf	3,6	;RP1=0, select bank1
  3274  0092  1511               	bsf	17,2	;volatile
  3275  0093                     l44:
  3276  0093  0008               	return
  3277  0094                     __end_of_I2C_Master_Stop:
  3278                           
  3279                           	psect	text17
  3280  0082                     __ptext17:	
  3281 ;; *************** function _I2C_Master_Start *****************
  3282 ;; Defined at:
  3283 ;;		line 39 in file "I2C.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		_I2C_Master_Wait
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _I2C_Master_Start
  3313  0082                     _I2C_Master_Start:
  3314  0082                     l1519:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3317                           
  3318                           
  3319                           ;I2C.c: 41:     I2C_Master_Wait();
  3320  0082  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3321  0087                     l1521:
  3322                           
  3323                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3324  0087  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0088  1303               	bcf	3,6	;RP1=0, select bank1
  3326  0089  1411               	bsf	17,0	;volatile
  3327  008A                     l38:
  3328  008A  0008               	return
  3329  008B                     __end_of_I2C_Master_Start:
  3330                           
  3331                           	psect	text18
  3332  0136                     __ptext18:	
  3333 ;; *************** function _I2C_Master_Read *****************
  3334 ;; Defined at:
  3335 ;;		line 74 in file "I2C.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  a               2    0[COMMON] unsigned short 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  temp            2    4[COMMON] unsigned short 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2    0[COMMON] unsigned short 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         2       0       0       0       0
  3350 ;;      Locals:         2       0       0       0       0
  3351 ;;      Temps:          2       0       0       0       0
  3352 ;;      Totals:         6       0       0       0       0
  3353 ;;Total ram usage:        6 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    1
  3356 ;; This function calls:
  3357 ;;		_I2C_Master_Wait
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _I2C_Master_Read
  3365  0136                     _I2C_Master_Read:
  3366  0136                     l1531:	
  3367                           ;incstack = 0
  3368                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3369                           
  3370                           
  3371                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3372  0136  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3373  013B                     l1533:
  3374                           
  3375                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3376  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3377  013C  1303               	bcf	3,6	;RP1=0, select bank1
  3378  013D  1591               	bsf	17,3	;volatile
  3379                           
  3380                           ;I2C.c: 79:     I2C_Master_Wait();
  3381  013E  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3382  0143                     l1535:
  3383                           
  3384                           ;I2C.c: 80:     temp = SSPBUF;
  3385  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0145  0813               	movf	19,w	;volatile
  3388  0146  00F2               	movwf	??_I2C_Master_Read
  3389  0147  01F3               	clrf	??_I2C_Master_Read+1
  3390  0148  0872               	movf	??_I2C_Master_Read,w
  3391  0149  00F4               	movwf	I2C_Master_Read@temp
  3392  014A  0873               	movf	??_I2C_Master_Read+1,w
  3393  014B  00F5               	movwf	I2C_Master_Read@temp+1
  3394  014C                     l1537:
  3395                           
  3396                           ;I2C.c: 81:     I2C_Master_Wait();
  3397  014C  120A  118A  209E  120A  118A  	fcall	_I2C_Master_Wait
  3398  0151                     l1539:
  3399                           
  3400                           ;I2C.c: 82:     if(a == 1){
  3401  0151  0370               	decf	I2C_Master_Read@a,w
  3402  0152  0471               	iorwf	I2C_Master_Read@a+1,w
  3403  0153  1D03               	btfss	3,2
  3404  0154  2956               	goto	u1101
  3405  0155  2957               	goto	u1100
  3406  0156                     u1101:
  3407  0156  295B               	goto	l50
  3408  0157                     u1100:
  3409  0157                     l1541:
  3410                           
  3411                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3412  0157  1683               	bsf	3,5	;RP0=1, select bank1
  3413  0158  1303               	bcf	3,6	;RP1=0, select bank1
  3414  0159  1291               	bcf	17,5	;volatile
  3415                           
  3416                           ;I2C.c: 84:     }else{
  3417  015A  295E               	goto	l51
  3418  015B                     l50:
  3419                           
  3420                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3421  015B  1683               	bsf	3,5	;RP0=1, select bank1
  3422  015C  1303               	bcf	3,6	;RP1=0, select bank1
  3423  015D  1691               	bsf	17,5	;volatile
  3424  015E                     l51:	
  3425                           ;I2C.c: 86:     }
  3426                           
  3427                           
  3428                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3429  015E  1611               	bsf	17,4	;volatile
  3430  015F                     l1543:
  3431                           
  3432                           ;I2C.c: 88:     return temp;
  3433  015F  0875               	movf	I2C_Master_Read@temp+1,w
  3434  0160  00F1               	movwf	?_I2C_Master_Read+1
  3435  0161  0874               	movf	I2C_Master_Read@temp,w
  3436  0162  00F0               	movwf	?_I2C_Master_Read
  3437  0163                     l52:
  3438  0163  0008               	return
  3439  0164                     __end_of_I2C_Master_Read:
  3440                           
  3441                           	psect	text19
  3442  009E                     __ptext19:	
  3443 ;; *************** function _I2C_Master_Wait *****************
  3444 ;; Defined at:
  3445 ;;		line 32 in file "I2C.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_I2C_Master_Start
  3469 ;;		_I2C_Master_Stop
  3470 ;;		_I2C_Master_Write
  3471 ;;		_I2C_Master_Read
  3472 ;;		_I2C_Master_RepeatedStart
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _I2C_Master_Wait
  3478  009E                     _I2C_Master_Wait:
  3479  009E                     l1339:	
  3480                           ;incstack = 0
  3481                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3482                           
  3483  009E                     l32:	
  3484                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3485                           
  3486  009E  1683               	bsf	3,5	;RP0=1, select bank1
  3487  009F  1303               	bcf	3,6	;RP1=0, select bank1
  3488  00A0  1914               	btfsc	20,2	;volatile
  3489  00A1  28A3               	goto	u711
  3490  00A2  28A4               	goto	u710
  3491  00A3                     u711:
  3492  00A3  289E               	goto	l32
  3493  00A4                     u710:
  3494  00A4                     l1341:
  3495  00A4  0811               	movf	17,w	;volatile
  3496  00A5  391F               	andlw	31
  3497  00A6  1D03               	btfss	3,2
  3498  00A7  28A9               	goto	u721
  3499  00A8  28AA               	goto	u720
  3500  00A9                     u721:
  3501  00A9  289E               	goto	l32
  3502  00AA                     u720:
  3503  00AA                     l35:
  3504  00AA  0008               	return
  3505  00AB                     __end_of_I2C_Master_Wait:
  3506                           
  3507                           	psect	text20
  3508  034E                     __ptext20:	
  3509 ;; *************** function _Division *****************
  3510 ;; Defined at:
  3511 ;;		line 40 in file "Master_Test.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  y               1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  y               1    9[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       3       0       0       0
  3527 ;;      Temps:          0       3       0       0       0
  3528 ;;      Totals:         0       6       0       0       0
  3529 ;;Total ram usage:        6 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		___awdiv
  3534 ;;		___awmod
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _Division
  3542  034E                     _Division:
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  3546                           ;Division@y stored from wreg
  3547  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3548  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0350  00A9               	movwf	Division@y
  3550  0351                     l1553:
  3551                           
  3552                           ;Master_Test.c: 41:         cen = (y/100);
  3553  0351  3064               	movlw	100
  3554  0352  00F7               	movwf	___awdiv@divisor
  3555  0353  3000               	movlw	0
  3556  0354  00F8               	movwf	___awdiv@divisor+1
  3557  0355  0829               	movf	Division@y,w
  3558  0356  00A4               	movwf	??_Division
  3559  0357  01A5               	clrf	??_Division+1
  3560  0358  0824               	movf	??_Division,w
  3561  0359  00F9               	movwf	___awdiv@dividend
  3562  035A  0825               	movf	??_Division+1,w
  3563  035B  00FA               	movwf	___awdiv@dividend+1
  3564  035C  120A  118A  241A  120A  118A  	fcall	___awdiv
  3565  0361  0877               	movf	?___awdiv,w
  3566  0362  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0363  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0364  00A6               	movwf	??_Division+2
  3569  0365  0826               	movf	??_Division+2,w
  3570  0366  00B4               	movwf	_cen
  3571                           
  3572                           ;Master_Test.c: 42:         dec = ((y%100)/10);
  3573  0367  300A               	movlw	10
  3574  0368  00F7               	movwf	___awdiv@divisor
  3575  0369  3000               	movlw	0
  3576  036A  00F8               	movwf	___awdiv@divisor+1
  3577  036B  0829               	movf	Division@y,w
  3578  036C  00A4               	movwf	??_Division
  3579  036D  01A5               	clrf	??_Division+1
  3580  036E  0824               	movf	??_Division,w
  3581  036F  00F2               	movwf	___awmod@dividend
  3582  0370  0825               	movf	??_Division+1,w
  3583  0371  00F3               	movwf	___awmod@dividend+1
  3584  0372  3064               	movlw	100
  3585  0373  00F0               	movwf	___awmod@divisor
  3586  0374  3000               	movlw	0
  3587  0375  00F1               	movwf	___awmod@divisor+1
  3588  0376  120A  118A  2294  120A  118A  	fcall	___awmod
  3589  037B  0871               	movf	?___awmod+1,w
  3590  037C  00FA               	movwf	___awdiv@dividend+1
  3591  037D  0870               	movf	?___awmod,w
  3592  037E  00F9               	movwf	___awdiv@dividend
  3593  037F  120A  118A  241A  120A  118A  	fcall	___awdiv
  3594  0384  0877               	movf	?___awdiv,w
  3595  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0387  00A6               	movwf	??_Division+2
  3598  0388  0826               	movf	??_Division+2,w
  3599  0389  00B3               	movwf	_dec
  3600                           
  3601                           ;Master_Test.c: 43:         uni = ((y%100)%10);
  3602  038A  0829               	movf	Division@y,w
  3603  038B  00A4               	movwf	??_Division
  3604  038C  01A5               	clrf	??_Division+1
  3605  038D  0824               	movf	??_Division,w
  3606  038E  00F2               	movwf	___awmod@dividend
  3607  038F  0825               	movf	??_Division+1,w
  3608  0390  00F3               	movwf	___awmod@dividend+1
  3609  0391  3064               	movlw	100
  3610  0392  00F0               	movwf	___awmod@divisor
  3611  0393  3000               	movlw	0
  3612  0394  00F1               	movwf	___awmod@divisor+1
  3613  0395  120A  118A  2294  120A  118A  	fcall	___awmod
  3614  039A  0871               	movf	?___awmod+1,w
  3615  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3616  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3617  039D  00A8               	movwf	_Division$893+1
  3618  039E  0870               	movf	?___awmod,w
  3619  039F  00A7               	movwf	_Division$893
  3620                           
  3621                           ;Master_Test.c: 43:         uni = ((y%100)%10);
  3622  03A0  300A               	movlw	10
  3623  03A1  00F0               	movwf	___awmod@divisor
  3624  03A2  3000               	movlw	0
  3625  03A3  00F1               	movwf	___awmod@divisor+1
  3626  03A4  0828               	movf	_Division$893+1,w
  3627  03A5  00F3               	movwf	___awmod@dividend+1
  3628  03A6  0827               	movf	_Division$893,w
  3629  03A7  00F2               	movwf	___awmod@dividend
  3630  03A8  120A  118A  2294  120A  118A  	fcall	___awmod
  3631  03AD  0870               	movf	?___awmod,w
  3632  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3633  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3634  03B0  00A4               	movwf	??_Division
  3635  03B1  0824               	movf	??_Division,w
  3636  03B2  00B2               	movwf	_uni
  3637  03B3                     l116:
  3638  03B3  0008               	return
  3639  03B4                     __end_of_Division:
  3640                           
  3641                           	psect	text21
  3642  0294                     __ptext21:	
  3643 ;; *************** function ___awmod *****************
  3644 ;; Defined at:
  3645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  divisor         2    0[COMMON] int 
  3648 ;;  dividend        2    2[COMMON] int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  sign            1    6[COMMON] unsigned char 
  3651 ;;  counter         1    5[COMMON] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2    0[COMMON] int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         4       0       0       0       0
  3662 ;;      Locals:         2       0       0       0       0
  3663 ;;      Temps:          1       0       0       0       0
  3664 ;;      Totals:         7       0       0       0       0
  3665 ;;Total ram usage:        7 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_Division
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function ___awmod
  3676  0294                     ___awmod:
  3677  0294                     l1433:	
  3678                           ;incstack = 0
  3679                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3680                           
  3681  0294  01F6               	clrf	___awmod@sign
  3682  0295                     l1435:
  3683  0295  1FF3               	btfss	___awmod@dividend+1,7
  3684  0296  2A98               	goto	u881
  3685  0297  2A99               	goto	u880
  3686  0298                     u881:
  3687  0298  2AA0               	goto	l1441
  3688  0299                     u880:
  3689  0299                     l1437:
  3690  0299  09F2               	comf	___awmod@dividend,f
  3691  029A  09F3               	comf	___awmod@dividend+1,f
  3692  029B  0AF2               	incf	___awmod@dividend,f
  3693  029C  1903               	skipnz
  3694  029D  0AF3               	incf	___awmod@dividend+1,f
  3695  029E                     l1439:
  3696  029E  01F6               	clrf	___awmod@sign
  3697  029F  0AF6               	incf	___awmod@sign,f
  3698  02A0                     l1441:
  3699  02A0  1FF1               	btfss	___awmod@divisor+1,7
  3700  02A1  2AA3               	goto	u891
  3701  02A2  2AA4               	goto	u890
  3702  02A3                     u891:
  3703  02A3  2AA9               	goto	l1445
  3704  02A4                     u890:
  3705  02A4                     l1443:
  3706  02A4  09F0               	comf	___awmod@divisor,f
  3707  02A5  09F1               	comf	___awmod@divisor+1,f
  3708  02A6  0AF0               	incf	___awmod@divisor,f
  3709  02A7  1903               	skipnz
  3710  02A8  0AF1               	incf	___awmod@divisor+1,f
  3711  02A9                     l1445:
  3712  02A9  0870               	movf	___awmod@divisor,w
  3713  02AA  0471               	iorwf	___awmod@divisor+1,w
  3714  02AB  1903               	btfsc	3,2
  3715  02AC  2AAE               	goto	u901
  3716  02AD  2AAF               	goto	u900
  3717  02AE                     u901:
  3718  02AE  2ADE               	goto	l1463
  3719  02AF                     u900:
  3720  02AF                     l1447:
  3721  02AF  01F5               	clrf	___awmod@counter
  3722  02B0  0AF5               	incf	___awmod@counter,f
  3723  02B1  2ABD               	goto	l1453
  3724  02B2                     l1449:
  3725  02B2  3001               	movlw	1
  3726  02B3                     u915:
  3727  02B3  1003               	clrc
  3728  02B4  0DF0               	rlf	___awmod@divisor,f
  3729  02B5  0DF1               	rlf	___awmod@divisor+1,f
  3730  02B6  3EFF               	addlw	-1
  3731  02B7  1D03               	skipz
  3732  02B8  2AB3               	goto	u915
  3733  02B9                     l1451:
  3734  02B9  3001               	movlw	1
  3735  02BA  00F4               	movwf	??___awmod
  3736  02BB  0874               	movf	??___awmod,w
  3737  02BC  07F5               	addwf	___awmod@counter,f
  3738  02BD                     l1453:
  3739  02BD  1FF1               	btfss	___awmod@divisor+1,7
  3740  02BE  2AC0               	goto	u921
  3741  02BF  2AC1               	goto	u920
  3742  02C0                     u921:
  3743  02C0  2AB2               	goto	l1449
  3744  02C1                     u920:
  3745  02C1                     l1455:
  3746  02C1  0871               	movf	___awmod@divisor+1,w
  3747  02C2  0273               	subwf	___awmod@dividend+1,w
  3748  02C3  1D03               	skipz
  3749  02C4  2AC7               	goto	u935
  3750  02C5  0870               	movf	___awmod@divisor,w
  3751  02C6  0272               	subwf	___awmod@dividend,w
  3752  02C7                     u935:
  3753  02C7  1C03               	skipc
  3754  02C8  2ACA               	goto	u931
  3755  02C9  2ACB               	goto	u930
  3756  02CA                     u931:
  3757  02CA  2AD1               	goto	l1459
  3758  02CB                     u930:
  3759  02CB                     l1457:
  3760  02CB  0870               	movf	___awmod@divisor,w
  3761  02CC  02F2               	subwf	___awmod@dividend,f
  3762  02CD  0871               	movf	___awmod@divisor+1,w
  3763  02CE  1C03               	skipc
  3764  02CF  03F3               	decf	___awmod@dividend+1,f
  3765  02D0  02F3               	subwf	___awmod@dividend+1,f
  3766  02D1                     l1459:
  3767  02D1  3001               	movlw	1
  3768  02D2                     u945:
  3769  02D2  1003               	clrc
  3770  02D3  0CF1               	rrf	___awmod@divisor+1,f
  3771  02D4  0CF0               	rrf	___awmod@divisor,f
  3772  02D5  3EFF               	addlw	-1
  3773  02D6  1D03               	skipz
  3774  02D7  2AD2               	goto	u945
  3775  02D8                     l1461:
  3776  02D8  3001               	movlw	1
  3777  02D9  02F5               	subwf	___awmod@counter,f
  3778  02DA  1D03               	btfss	3,2
  3779  02DB  2ADD               	goto	u951
  3780  02DC  2ADE               	goto	u950
  3781  02DD                     u951:
  3782  02DD  2AC1               	goto	l1455
  3783  02DE                     u950:
  3784  02DE                     l1463:
  3785  02DE  0876               	movf	___awmod@sign,w
  3786  02DF  1903               	btfsc	3,2
  3787  02E0  2AE2               	goto	u961
  3788  02E1  2AE3               	goto	u960
  3789  02E2                     u961:
  3790  02E2  2AE8               	goto	l1467
  3791  02E3                     u960:
  3792  02E3                     l1465:
  3793  02E3  09F2               	comf	___awmod@dividend,f
  3794  02E4  09F3               	comf	___awmod@dividend+1,f
  3795  02E5  0AF2               	incf	___awmod@dividend,f
  3796  02E6  1903               	skipnz
  3797  02E7  0AF3               	incf	___awmod@dividend+1,f
  3798  02E8                     l1467:
  3799  02E8  0873               	movf	___awmod@dividend+1,w
  3800  02E9  00F1               	movwf	?___awmod+1
  3801  02EA  0872               	movf	___awmod@dividend,w
  3802  02EB  00F0               	movwf	?___awmod
  3803  02EC                     l449:
  3804  02EC  0008               	return
  3805  02ED                     __end_of___awmod:
  3806                           
  3807                           	psect	text22
  3808  041A                     __ptext22:	
  3809 ;; *************** function ___awdiv *****************
  3810 ;; Defined at:
  3811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  divisor         2    7[COMMON] int 
  3814 ;;  dividend        2    9[COMMON] int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  quotient        2    2[BANK0 ] int 
  3817 ;;  sign            1    1[BANK0 ] unsigned char 
  3818 ;;  counter         1    0[BANK0 ] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  2    7[COMMON] int 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         4       0       0       0       0
  3829 ;;      Locals:         0       4       0       0       0
  3830 ;;      Temps:          1       0       0       0       0
  3831 ;;      Totals:         5       4       0       0       0
  3832 ;;Total ram usage:        9 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_Division
  3838 ;;		_main
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function ___awdiv
  3844  041A                     ___awdiv:
  3845  041A                     l1389:	
  3846                           ;incstack = 0
  3847                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3848                           
  3849  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3850  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3851  041C  01A1               	clrf	___awdiv@sign
  3852  041D                     l1391:
  3853  041D  1FF8               	btfss	___awdiv@divisor+1,7
  3854  041E  2C20               	goto	u781
  3855  041F  2C21               	goto	u780
  3856  0420                     u781:
  3857  0420  2C28               	goto	l1397
  3858  0421                     u780:
  3859  0421                     l1393:
  3860  0421  09F7               	comf	___awdiv@divisor,f
  3861  0422  09F8               	comf	___awdiv@divisor+1,f
  3862  0423  0AF7               	incf	___awdiv@divisor,f
  3863  0424  1903               	skipnz
  3864  0425  0AF8               	incf	___awdiv@divisor+1,f
  3865  0426                     l1395:
  3866  0426  01A1               	clrf	___awdiv@sign
  3867  0427  0AA1               	incf	___awdiv@sign,f
  3868  0428                     l1397:
  3869  0428  1FFA               	btfss	___awdiv@dividend+1,7
  3870  0429  2C2B               	goto	u791
  3871  042A  2C2C               	goto	u790
  3872  042B                     u791:
  3873  042B  2C35               	goto	l1403
  3874  042C                     u790:
  3875  042C                     l1399:
  3876  042C  09F9               	comf	___awdiv@dividend,f
  3877  042D  09FA               	comf	___awdiv@dividend+1,f
  3878  042E  0AF9               	incf	___awdiv@dividend,f
  3879  042F  1903               	skipnz
  3880  0430  0AFA               	incf	___awdiv@dividend+1,f
  3881  0431                     l1401:
  3882  0431  3001               	movlw	1
  3883  0432  00FB               	movwf	??___awdiv
  3884  0433  087B               	movf	??___awdiv,w
  3885  0434  06A1               	xorwf	___awdiv@sign,f
  3886  0435                     l1403:
  3887  0435  01A2               	clrf	___awdiv@quotient
  3888  0436  01A3               	clrf	___awdiv@quotient+1
  3889  0437                     l1405:
  3890  0437  0877               	movf	___awdiv@divisor,w
  3891  0438  0478               	iorwf	___awdiv@divisor+1,w
  3892  0439  1903               	btfsc	3,2
  3893  043A  2C3C               	goto	u801
  3894  043B  2C3D               	goto	u800
  3895  043C                     u801:
  3896  043C  2C74               	goto	l1425
  3897  043D                     u800:
  3898  043D                     l1407:
  3899  043D  01A0               	clrf	___awdiv@counter
  3900  043E  0AA0               	incf	___awdiv@counter,f
  3901  043F  2C4B               	goto	l1413
  3902  0440                     l1409:
  3903  0440  3001               	movlw	1
  3904  0441                     u815:
  3905  0441  1003               	clrc
  3906  0442  0DF7               	rlf	___awdiv@divisor,f
  3907  0443  0DF8               	rlf	___awdiv@divisor+1,f
  3908  0444  3EFF               	addlw	-1
  3909  0445  1D03               	skipz
  3910  0446  2C41               	goto	u815
  3911  0447                     l1411:
  3912  0447  3001               	movlw	1
  3913  0448  00FB               	movwf	??___awdiv
  3914  0449  087B               	movf	??___awdiv,w
  3915  044A  07A0               	addwf	___awdiv@counter,f
  3916  044B                     l1413:
  3917  044B  1FF8               	btfss	___awdiv@divisor+1,7
  3918  044C  2C4E               	goto	u821
  3919  044D  2C4F               	goto	u820
  3920  044E                     u821:
  3921  044E  2C40               	goto	l1409
  3922  044F                     u820:
  3923  044F                     l1415:
  3924  044F  3001               	movlw	1
  3925  0450                     u835:
  3926  0450  1003               	clrc
  3927  0451  0DA2               	rlf	___awdiv@quotient,f
  3928  0452  0DA3               	rlf	___awdiv@quotient+1,f
  3929  0453  3EFF               	addlw	-1
  3930  0454  1D03               	skipz
  3931  0455  2C50               	goto	u835
  3932  0456  0878               	movf	___awdiv@divisor+1,w
  3933  0457  027A               	subwf	___awdiv@dividend+1,w
  3934  0458  1D03               	skipz
  3935  0459  2C5C               	goto	u845
  3936  045A  0877               	movf	___awdiv@divisor,w
  3937  045B  0279               	subwf	___awdiv@dividend,w
  3938  045C                     u845:
  3939  045C  1C03               	skipc
  3940  045D  2C5F               	goto	u841
  3941  045E  2C60               	goto	u840
  3942  045F                     u841:
  3943  045F  2C67               	goto	l1421
  3944  0460                     u840:
  3945  0460                     l1417:
  3946  0460  0877               	movf	___awdiv@divisor,w
  3947  0461  02F9               	subwf	___awdiv@dividend,f
  3948  0462  0878               	movf	___awdiv@divisor+1,w
  3949  0463  1C03               	skipc
  3950  0464  03FA               	decf	___awdiv@dividend+1,f
  3951  0465  02FA               	subwf	___awdiv@dividend+1,f
  3952  0466                     l1419:
  3953  0466  1422               	bsf	___awdiv@quotient,0
  3954  0467                     l1421:
  3955  0467  3001               	movlw	1
  3956  0468                     u855:
  3957  0468  1003               	clrc
  3958  0469  0CF8               	rrf	___awdiv@divisor+1,f
  3959  046A  0CF7               	rrf	___awdiv@divisor,f
  3960  046B  3EFF               	addlw	-1
  3961  046C  1D03               	skipz
  3962  046D  2C68               	goto	u855
  3963  046E                     l1423:
  3964  046E  3001               	movlw	1
  3965  046F  02A0               	subwf	___awdiv@counter,f
  3966  0470  1D03               	btfss	3,2
  3967  0471  2C73               	goto	u861
  3968  0472  2C74               	goto	u860
  3969  0473                     u861:
  3970  0473  2C4F               	goto	l1415
  3971  0474                     u860:
  3972  0474                     l1425:
  3973  0474  0821               	movf	___awdiv@sign,w
  3974  0475  1903               	btfsc	3,2
  3975  0476  2C78               	goto	u871
  3976  0477  2C79               	goto	u870
  3977  0478                     u871:
  3978  0478  2C7E               	goto	l1429
  3979  0479                     u870:
  3980  0479                     l1427:
  3981  0479  09A2               	comf	___awdiv@quotient,f
  3982  047A  09A3               	comf	___awdiv@quotient+1,f
  3983  047B  0AA2               	incf	___awdiv@quotient,f
  3984  047C  1903               	skipnz
  3985  047D  0AA3               	incf	___awdiv@quotient+1,f
  3986  047E                     l1429:
  3987  047E  0823               	movf	___awdiv@quotient+1,w
  3988  047F  00F8               	movwf	?___awdiv+1
  3989  0480  0822               	movf	___awdiv@quotient,w
  3990  0481  00F7               	movwf	?___awdiv
  3991  0482                     l436:
  3992  0482  0008               	return
  3993  0483                     __end_of___awdiv:
  3994  007E                     btemp	set	126	;btemp
  3995  007E                     wtemp0	set	126
  3996                           
  3997                           	psect	config
  3998                           
  3999                           ;Config register CONFIG1 @ 0x2007
  4000                           ;	Oscillator Selection bits
  4001                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4002                           ;	Watchdog Timer Enable bit
  4003                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4004                           ;	Power-up Timer Enable bit
  4005                           ;	PWRTE = ON, PWRT enabled
  4006                           ;	RE3/MCLR pin function select bit
  4007                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4008                           ;	Code Protection bit
  4009                           ;	CP = OFF, Program memory code protection is disabled
  4010                           ;	Data Code Protection bit
  4011                           ;	CPD = OFF, Data memory code protection is disabled
  4012                           ;	Brown Out Reset Selection bits
  4013                           ;	BOREN = OFF, BOR disabled
  4014                           ;	Internal External Switchover bit
  4015                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4016                           ;	Fail-Safe Clock Monitor Enabled bit
  4017                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4018                           ;	Low Voltage Programming Enable bit
  4019                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4020                           ;	In-Circuit Debugger Mode bit
  4021                           ;	DEBUG = 0x1, unprogrammed default
  4022  2007                     	org	8199
  4023  2007  20C4               	dw	8388
  4024                           
  4025                           ;Config register CONFIG2 @ 0x2008
  4026                           ;	Brown-out Reset Selection bit
  4027                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4028                           ;	Flash Program Memory Self Write Enable bits
  4029                           ;	WRT = OFF, Write protection off
  4030  2008                     	org	8200
  4031  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[1]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init
    _Division->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9252
                                             13 BANK0      3     3      0
                           _Division
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                         _my_delay_s
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1590
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     720
                                              2 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     414
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0      22
                                              3 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _my_delay_s                                           4     4      0      23
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     858
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    1901
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Division
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___wmul
   _my_delay_s
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 29 19:38:44 2021

                        pc 0002                         l32 009E                         l50 015B  
                       l35 00AA                         l51 015E                         l52 0163  
                       l44 0093                         l29 019B                         l38 008A  
                       l47 009D               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072                        l113 00F2                        l116 03B3  
                      l142 00DB                        l151 0110                        l119 01D3  
                      l145 00B7                        l154 034D                        l163 024F  
                      l157 00C7                        l319 0419                        l283 011D  
                      l436 0482                        l285 0135                        l279 056A  
                      l449 02EC                        l555 0293                        l565 020D  
                      _GIE 005F                        _RC6 003E                        _RC7 003F  
                      u700 017B                        u710 00A4                        u630 03C4  
                      u711 00A3                        u631 03C3                        u800 043D  
                      u720 00AA                        u801 043C                        u721 00A9  
                      u705 0176                        u650 03D8                        u730 00F9  
                      u651 03D7                        u731 00F8                        u820 044F  
                      u900 02AF                        u740 0108                        u821 044E  
                      u901 02AE                        u645 03C9                        u741 0107  
                      u670 03F3                        u750 021B                        u815 0441  
                      u671 03F2                        u840 0460                        u920 02C1  
                      u760 023D                        u841 045F                        u921 02C0  
                      u665 03DA                        u930 02CB                        u690 0411  
                      u770 024F                        u835 0450                        u931 02CA  
                      u915 02B3                        u691 0410                        u675 03EF  
                      u771 024E                        u860 0474                        u780 0421  
                      u861 0473                        u845 045C                        u781 0420  
                      u685 0403                        u870 0479                        u790 042C  
                      u950 02DE                        u871 0478                        u855 0468  
                      u791 042B                        u951 02DD                        u935 02C7  
                      u960 02E3                        u880 0299                        u961 02E2  
                      u945 02D2                        u881 0298                        u890 02A4  
                      u970 0258                        u891 02A3                        u971 0257  
                      u990 026A                        u991 0269                        u985 025C  
                      _dec 0033                        _cen 0034                        _con 0035  
                      _pot 0036                        _luz 0030                        fsr0 0004  
                      _uni 0032                        indf 0000               ___awmod@sign 0076  
                     l1301 00C4                       l1311 03D8                       l1303 03B4  
                     l1401 0431                       l1321 040B                       l1313 03E1  
                     l1305 03C4                       l1411 0447                       l1403 0435  
                     l1315 03F3                       l1307 03C7                       l1323 0411  
                     l1331 016B                       l1421 0467                       l1413 044B  
                     l1405 0437                       l1341 00A4                       l1317 0401  
                     l1309 03D4                       l1333 0198                       l1501 01DD  
                     l1423 046E                       l1415 044F                       l1407 043D  
                     l1319 0402                       l1335 0199                       l1327 0164  
                     l1351 0308                       l1343 02ED                       l1511 01FC  
                     l1503 01E4                       l1417 0460                       l1409 0440  
                     l1425 0474                       l1441 02A0                       l1433 0294  
                     l1521 0087                       l1337 019A                       l1329 0168  
                     l1361 0328                       l1353 030E                       l1345 02F0  
                     l1513 0203                       l1505 01E8                       l1427 0479  
                     l1419 0466                       l1451 02B9                       l1443 02A4  
                     l1435 0295                       l1339 009E                       l1531 0136  
                     l1523 008B                       l1291 00CE                       l1371 00AB  
                     l1363 032E                       l1355 0316                       l1347 02F9  
                     l1507 01EC                       l1515 0209                       l1611 0502  
                     l1603 04D6                       l1429 047E                       l1461 02D8  
                     l1453 02BD                       l1445 02A9                       l1437 0299  
                     l1541 0157                       l1533 013B                       l1525 0090  
                     l1293 00D8                       l1365 0334                       l1357 031C  
                     l1349 02FF                       l1373 00F4                       l1381 020E  
                     l1509 01F6                       l1621 0547                       l1613 0509  
                     l1701 06A2                       l1391 041D                       l1455 02C1  
                     l1447 02AF                       l1463 02DE                       l1439 029E  
                     l1543 015F                       l1535 0143                       l1519 0082  
                     l1527 0094                       l1551 00ED                       l1287 00C9  
                     l1367 033A                       l1359 0322                       l1375 00F9  
                     l1295 00B9                       l1383 0211                       l1471 0250  
                     l1623 054B                       l1615 050D                       l1607 04F2  
                     l1711 06E5                       l1703 06AA                       l1393 0421  
                     l1465 02E3                       l1457 02CB                       l1449 02B2  
                     l1553 0351                       l1537 014C                       l1529 0099  
                     l1641 0124                       l1289 00CC                       l1369 0340  
                     l1377 0102                       l1297 00BC                       l1385 022D  
                     l1561 01A9                       l1481 0266                       l1473 0252  
                     l1617 0512                       l1609 04FC                       l1625 0554  
                     l1721 0752                       l1713 06EE                       l1705 06B6  
                     l1395 0426                       l1467 02E8                       l1459 02D1  
                     l1539 0151                       l1643 012B                       l1635 0111  
                     l1547 00DD                       l1379 0108                       l1299 00BE  
                     l1387 0233                       l1571 01CA                       l1563 01AA  
                     l1555 019C                       l1491 0289                       l1483 026A  
                     l1475 0258                       l1619 0540                       l1627 0566  
                     l1731 07AA                       l1723 075D                       l1715 0701  
                     l1707 06C9                       l1397 0428                       l1389 041A  
                     l1645 0131                       l1637 0113                       l1549 00DE  
                     l1565 01B9                       l1557 01A6                       l1485 027B  
                     l1477 025B                       l1493 028F                       l1581 049D  
                     l1573 0486                       l1741 07CE                       l1733 07B3  
                     l1725 0789                       l1717 070A                       l1709 06D2  
                     l1661 058C                       l1653 056B                       l1399 042C  
                     l1639 0117                       l1567 01BE                       l1559 01A8  
                     l1487 0281                       l1479 0262                       l1591 04C7  
                     l1575 048B                       l1743 07D7                       l1735 07BC  
                     l1719 0736                       l1671 05DF                       l1663 0591  
                     l1655 0570                       l1569 01C3                       l1489 0282  
                     l1497 01D4                       l1593 04CB                       l1585 049E  
                     l1577 0491                       l1745 07DF                       l1737 07C1  
                     l1729 07A5                       l1681 0612                       l1673 05E8  
                     l1665 059B                       l1657 0575                       l1499 01DA  
                     l1595 04CF                       l1587 04BB                       l1771 04B0  
                     l1579 0498                       l1739 07C9                       l1691 0677  
                     l1683 0620                       l1675 05FB                       l1667 05C0  
                     l1659 057E                       l1597 04D4                       l1589 04C3  
                     l1693 067C                       l1685 0625                       l1677 0604  
                     l1669 05CC                       l1695 0685                       l1687 062F  
                     l1679 0609                       l1697 0693                       l1689 0637  
                     l1699 0698                       STR_1 001D                       STR_2 002D  
                     STR_3 002D                       STR_4 002D                       STR_5 002D  
                     STR_6 002D                       STR_7 002D                       STR_8 002D  
                     u1010 027B                       u1011 027A                       u1100 0157  
                     u1101 0156                       u1005 026B                       u1110 00F2  
                     u1030 028F                       u1111 00F1                       u1031 028E  
                     u1015 0277                       u1040 01DA                       u1120 0491  
                     u1025 0283                       u1041 01D9                       u1121 0490  
                     u1130 04CB                       u1131 04CA                       u1220 0131  
                     u1060 01EC                       u1140 04F1                       u1221 0130  
                     u1205 011E                       u1061 01EB                       u1141 04F0  
                     u1070 01F6                       u1150 04FC                       u1230 0736  
                     u1215 0125                       u1071 01F5                       u1055 01DE  
                     u1151 04FB                       u1231 0735                       u1160 0502  
                     u1240 0789                       u1161 0501                       u1145 04ED  
                     u1241 0788                       u1090 0209                       u1170 0554  
                     u1307 00C1                       u1091 0208                       u1075 01F2  
                     u1171 0553                       u1235 0732                       u1180 0566  
                     u1317 02F4                       u1085 01FD                       u1181 0565  
                     u1245 0785                       u1190 0117                       u1191 0116  
                     u1327 0303                       u1337 0312                       u1257 0597  
                     u1347 0346                       u1267 062B                       u1357 00D3  
                     u1277 069E                       u1367 00E6                       u1287 0758  
                     u1297 07EA                       _PEIE 005E          ?_Lcd_Write_String 0072  
                     _main 056B                       _temp 0031                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0074            __end_of_Lcd_Cmd 00DC  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 0483  
          __end_of___awmod 02ED                      _ANSEL 0188            __end_of___lldiv 041A  
          ___awdiv@divisor 0077            __end_of___lwdiv 0294            __end_of___lwmod 020E  
          ___awdiv@counter 0020                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
          __end_of_dpowers 001D                      _setup 019C                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 056B  
         __end_of_Lcd_Init 034E            __initialization 07F2           __end_of_Division 03B4  
             __end_of_main 07F2                     ??_main 002D         __size_of_Lcd_Clear 000D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0079                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0010  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     ___wmul 0111  
                ??___awdiv 007B                  ??___awmod 0074                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C                     _buffer 0037  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_sprintf 0023            Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0073  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 00B8             __pcstackCOMMON 0070  
            __end_of_setup 01D4             _Lcd_Set_Cursor 00F3                  ?_Lcd_Init 0070  
                  ??_setup 007E                  ?_Division 0070                 __pbssBANK0 0030  
               __pmaintext 056B                    ?___wmul 0070  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 0111                 ??_Lcd_Init 0073                    _SSPCON2 0091  
                  _SSPSTAT 0094                 ??_Division 0024                 __stringtab 0003  
           _Lcd_Write_Char 00B8                    _Lcd_Cmd 00C8                    ___awdiv 041A  
                  ___awmod 0294                    ___lldiv 03B4            __size_of___wmul 0025  
                  ___lwdiv 0250               _Division$893 0027                    ___lwmod 01D4  
          ?_Lcd_Set_Cursor 0073                    __ptext1 0483                    __ptext2 01D4  
                  __ptext3 0250                    __ptext4 019C                    __ptext5 020E  
                  __ptext6 00B8                    __ptext7 00F3                    __ptext8 02ED  
                  __ptext9 00AB                    _dpowers 0013           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0483     __end_of_Lcd_Write_Char 00C8  
     end_of_initialization 07FC                 _my_delay_s 00DC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Division@y 0029  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0072  
        Lcd_Write_String@i 0077                  _Lcd_Clear 00AB             __end_of___wmul 0136  
         _Lcd_Write_String 020E        start_initialization 07F2          __size_of_Lcd_Init 0061  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070          __size_of_Division 0066                ?_my_delay_s 0070  
               ?_Lcd_Clear 0070                   ??___wmul 0074            Lcd_Write_Char@a 0071  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 0082  
         _I2C_Master_Write 0094           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074  
                 ?___awdiv 0077                   ?___awmod 0070                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0003  
      __size_of_my_delay_s 0017           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           __size_of_setup 0038             ___wmul@product 0074                   Lcd_Cmd@a 0072  
              ??_Lcd_Clear 0073                __stringbase 0012          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0070                   _Lcd_Init 02ED        I2C_Master_Read@temp 0074  
                 _Division 034E   __end_of_Lcd_Write_String 0250           __size_of_Lcd_Cmd 0014  
         __size_of___awdiv 0069           __size_of___awmod 0059           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
               sprintf@val 0029            _I2C_Master_Init 0164            _I2C_Master_Read 0136  
          _I2C_Master_Wait 009E            _I2C_Master_Stop 008B            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 00C8                   __ptext11 0164  
                 __ptext20 034E                   __ptext12 03B4                   __ptext21 0294  
                 __ptext13 00DC                   __ptext22 041A                   __ptext14 0111  
                 __ptext15 0094                   __ptext16 008B                   __ptext17 0082  
                 __ptext18 0136                   __ptext19 009E           __size_of_sprintf 00E8  
            __size_of_main 0287               ??_my_delay_s 0070   __end_of_I2C_Master_Start 008B  
         my_delay_s@tiempo 0073   __end_of_I2C_Master_Write 009E         __end_of_my_delay_s 00F3  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 019C    __end_of_I2C_Master_Read 0164    __end_of_I2C_Master_Wait 00AB  
  __end_of_I2C_Master_Stop 0094                   sprintf@c 002C                   sprintf@f 0020  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
