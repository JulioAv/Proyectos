

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Sep 04 18:26:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466                           
   467                           	psect	strings
   468  0760                     __pstrings:
   469  0760                     stringtab:
   470  0760                     __stringtab:
   471                           
   472                           ;	String table - string pointers are 1 byte each
   473  0760  1BFF               	btfsc	btemp+1,7
   474  0761  2F6A               	ljmp	stringcode
   475  0762  1383               	bcf	3,7
   476  0763  187F               	btfsc	btemp+1,0
   477  0764  1783               	bsf	3,7
   478  0765  0800               	movf	0,w
   479  0766  0A84               	incf	4,f
   480  0767  1903               	skipnz
   481  0768  0AFF               	incf	btemp+1,f
   482  0769  0008               	return
   483  076A                     stringcode:
   484  076A                     stringdir:
   485  076A  3007               	movlw	high stringdir
   486  076B  008A               	movwf	10
   487  076C  0804               	movf	4,w
   488  076D  0A84               	incf	4,f
   489  076E  0782               	addwf	2,f
   490  076F                     __stringbase:
   491  076F  3400               	retlw	0
   492  0770                     __end_of__stringtab:
   493  0770                     _dpowers:
   494  0770  3401               	retlw	1
   495  0771  3400               	retlw	0
   496  0772  340A               	retlw	10
   497  0773  3400               	retlw	0
   498  0774  3464               	retlw	100
   499  0775  3400               	retlw	0
   500  0776  34E8               	retlw	232
   501  0777  3403               	retlw	3
   502  0778  3410               	retlw	16
   503  0779  3427               	retlw	39
   504  077A                     __end_of_dpowers:
   505  0008                     _PORTD	set	8
   506  000B                     _INTCONbits	set	11
   507  001A                     _RCREG	set	26
   508  001E                     _ADRESH	set	30
   509  001F                     _ADCON0bits	set	31
   510  0019                     _TXREG	set	25
   511  000C                     _PIR1bits	set	12
   512  0018                     _RCSTAbits	set	24
   513  0013                     _SSPBUF	set	19
   514  0014                     _SSPCON	set	20
   515  0039                     _RC1	set	57
   516  003A                     _RC2	set	58
   517  0065                     _RCIF	set	101
   518  0031                     _RB1	set	49
   519  0030                     _RB0	set	48
   520  0058                     _RBIF	set	88
   521  0066                     _ADIF	set	102
   522  0063                     _SSPIF	set	99
   523  005E                     _PEIE	set	94
   524  005F                     _GIE	set	95
   525  009F                     _ADCON1bits	set	159
   526  0081                     _OPTION_REGbits	set	129
   527  0096                     _IOCB	set	150
   528  0095                     _WPUB	set	149
   529  008F                     _OSCCONbits	set	143
   530  0088                     _TRISD	set	136
   531  0087                     _TRISC	set	135
   532  0086                     _TRISB	set	134
   533  0085                     _TRISA	set	133
   534  008C                     _PIE1bits	set	140
   535  0099                     _SPBRG	set	153
   536  0098                     _TXSTAbits	set	152
   537  0091                     _SSPCON2bits	set	145
   538  0087                     _TRISCbits	set	135
   539  0094                     _SSPSTAT	set	148
   540  0093                     _SSPADD	set	147
   541  0091                     _SSPCON2	set	145
   542  04C5                     _TXEN	set	1221
   543  0463                     _SSPIE	set	1123
   544  043C                     _TRISC4	set	1084
   545  043B                     _TRISC3	set	1083
   546  0189                     _ANSELH	set	393
   547  0188                     _ANSEL	set	392
   548  0187                     _BAUDCTLbits	set	391
   549  077A                     STR_1:
   550  077A  3454               	retlw	84	;'T'
   551  077B  3465               	retlw	101	;'e'
   552  077C  346D               	retlw	109	;'m'
   553  077D  3420               	retlw	32	;' '
   554  077E  344C               	retlw	76	;'L'
   555  077F  3475               	retlw	117	;'u'
   556  0780  347A               	retlw	122	;'z'
   557  0781  3420               	retlw	32	;' '
   558  0782  3474               	retlw	116	;'t'
   559  0783  3428               	retlw	40	;'('
   560  0784  3473               	retlw	115	;'s'
   561  0785  3429               	retlw	41	;')'
   562  0786  3420               	retlw	32	;' '
   563  0787  3454               	retlw	84	;'T'
   564  0788  344F               	retlw	79	;'O'
   565  0789  3400               	retlw	0
   566  078A                     STR_12:
   567  078A  3450               	retlw	80	;'P'
   568  078B  3452               	retlw	82	;'R'
   569  078C  3445               	retlw	69	;'E'
   570  078D  3453               	retlw	83	;'S'
   571  078E  3449               	retlw	73	;'I'
   572  078F  344F               	retlw	79	;'O'
   573  0790  344E               	retlw	78	;'N'
   574  0791  3420               	retlw	32	;' '
   575  0792  3441               	retlw	65	;'A'
   576  0793  344C               	retlw	76	;'L'
   577  0794  3454               	retlw	84	;'T'
   578  0795  3441               	retlw	65	;'A'
   579  0796  3400               	retlw	0
   580  0797                     STR_11:
   581  0797  3450               	retlw	80	;'P'
   582  0798  3452               	retlw	82	;'R'
   583  0799  3445               	retlw	69	;'E'
   584  079A  3443               	retlw	67	;'C'
   585  079B  3441               	retlw	65	;'A'
   586  079C  3455               	retlw	85	;'U'
   587  079D  3443               	retlw	67	;'C'
   588  079E  3449               	retlw	73	;'I'
   589  079F  344F               	retlw	79	;'O'
   590  07A0  344E               	retlw	78	;'N'
   591  07A1  3400               	retlw	0
   592  07A2                     STR_2:
   593  07A2  3425               	retlw	37	;'%'
   594  07A3  3464               	retlw	100	;'d'
   595  07A4  3400               	retlw	0
   596  07A5                     STR_10:
   597  07A5  3453               	retlw	83	;'S'
   598  07A6  3469               	retlw	105	;'i'
   599  07A7  3400               	retlw	0
   600  07A8                     STR_9:
   601  07A8  344E               	retlw	78	;'N'
   602  07A9  346F               	retlw	111	;'o'
   603  07AA  3400               	retlw	0
   604  077A                     
   605                           	psect	cinit
   606  000F                     start_initialization:	
   607                           ; #config settings
   608                           
   609  000F                     __initialization:
   610                           
   611                           ; Clear objects allocated to COMMON
   612  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   613  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   614                           
   615                           ; Clear objects allocated to BANK0
   616  0011  1383               	bcf	3,7	;select IRP bank0
   617  0012  303C               	movlw	low __pbssBANK0
   618  0013  0084               	movwf	4
   619  0014  304C               	movlw	low (__pbssBANK0+16)
   620  0015  120A  158A  25A5  120A  118A  	fcall	clear_ram0
   621  001A                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624  001A                     __end_of__initialization:
   625  001A  0183               	clrf	3
   626  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	bssCOMMON
   629  0079                     __pbssCOMMON:
   630  0079                     _frec:
   631  0079                     	ds	2
   632                           
   633                           	psect	bssBANK0
   634  003C                     __pbssBANK0:
   635  003C                     _presion1:
   636  003C                     	ds	2
   637  003E                     _rc:
   638  003E                     	ds	2
   639  0040                     _tr:
   640  0040                     	ds	2
   641  0042                     _var:
   642  0042                     	ds	1
   643  0043                     _presion2:
   644  0043                     	ds	1
   645  0044                     _luz:
   646  0044                     	ds	1
   647  0045                     _temp:
   648  0045                     	ds	1
   649  0046                     _uni:
   650  0046                     	ds	1
   651  0047                     _dec:
   652  0047                     	ds	1
   653  0048                     _cen:
   654  0048                     	ds	1
   655  0049                     _con:
   656  0049                     	ds	1
   657  004A                     _pot:
   658  004A                     	ds	1
   659  004B                     _buffer:
   660  004B                     	ds	1
   661                           
   662                           	psect	clrtext
   663  0DA5                     clear_ram0:	
   664                           ;	Called with FSR containing the base address, and
   665                           ;	W with the last address+1
   666                           
   667  0DA5  0064               	clrwdt	;clear the watchdog before getting into this loop
   668  0DA6                     clrloop0:
   669  0DA6  0180               	clrf	0	;clear RAM location pointed to by FSR
   670  0DA7  0A84               	incf	4,f	;increment pointer
   671  0DA8  0604               	xorwf	4,w	;XOR with final address
   672  0DA9  1903               	btfsc	3,2	;have we reached the end yet?
   673  0DAA  3400               	retlw	0	;all done for this memory range, return
   674  0DAB  0604               	xorwf	4,w	;XOR again to restore value
   675  0DAC  2DA6               	goto	clrloop0	;do the next byte
   676                           
   677                           	psect	cstackCOMMON
   678  0070                     __pcstackCOMMON:
   679  0070                     ?_Lcd_Init:
   680  0070                     ?_Lcd_Clear:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_ADC_IF:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_I2C_Master_Wait:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_I2C_Master_Start:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_I2C_Master_Stop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_my_delay_s:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Division:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_isr:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_isr:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_setup:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_Lcd_Cmd:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Lcd_Write_Char:	
   717                           ; 1 bytes @ 0x0
   718                           
   719                           
   720                           ; 1 bytes @ 0x0
   721  0070                     	ds	3
   722  0073                     ?_ADC_CONFIG:
   723  0073                     ??_ADC_IF:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     ??_I2C_Master_Wait:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ??_I2C_Master_Start:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ??_I2C_Master_Stop:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ?_I2C_Master_Write:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     ??_my_delay_s:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ?_USART_CONFIG:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     ??_Lcd_Cmd:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_Lcd_Write_Char:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??___lldiv:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ?_I2C_Master_Read:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ?___wmul:	
   757                           ; 2 bytes @ 0x3
   758                           
   759  0073                     ?___awmod:	
   760                           ; 2 bytes @ 0x3
   761                           
   762  0073                     ?___lwdiv:	
   763                           ; 2 bytes @ 0x3
   764                           
   765  0073                     I2C_Master_Write@d:	
   766                           ; 2 bytes @ 0x3
   767                           
   768  0073                     I2C_Master_Read@a:	
   769                           ; 2 bytes @ 0x3
   770                           
   771  0073                     USART_CONFIG@frec:	
   772                           ; 2 bytes @ 0x3
   773                           
   774  0073                     ADC_CONFIG@frec:	
   775                           ; 2 bytes @ 0x3
   776                           
   777  0073                     ___wmul@multiplier:	
   778                           ; 2 bytes @ 0x3
   779                           
   780  0073                     ___awmod@divisor:	
   781                           ; 2 bytes @ 0x3
   782                           
   783  0073                     ___lwdiv@divisor:	
   784                           ; 2 bytes @ 0x3
   785                           
   786                           
   787                           ; 2 bytes @ 0x3
   788  0073                     	ds	1
   789  0074                     Lcd_Write_Char@a:
   790  0074                     ___lldiv@quotient:	
   791                           ; 1 bytes @ 0x4
   792                           
   793                           
   794                           ; 4 bytes @ 0x4
   795  0074                     	ds	1
   796  0075                     ??_ADC_CONFIG:
   797  0075                     ?_Lcd_Write_String:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     ??_I2C_Master_Write:	
   801                           ; 1 bytes @ 0x5
   802                           
   803  0075                     ??_I2C_Master_Read:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     Lcd_Cmd@a:	
   807                           ; 1 bytes @ 0x5
   808                           
   809  0075                     USART_CONFIG@tr:	
   810                           ; 1 bytes @ 0x5
   811                           
   812  0075                     Lcd_Write_String@a:	
   813                           ; 2 bytes @ 0x5
   814                           
   815  0075                     ___wmul@multiplicand:	
   816                           ; 2 bytes @ 0x5
   817                           
   818  0075                     ___awmod@dividend:	
   819                           ; 2 bytes @ 0x5
   820                           
   821  0075                     ___lwdiv@dividend:	
   822                           ; 2 bytes @ 0x5
   823                           
   824                           
   825                           ; 2 bytes @ 0x5
   826  0075                     	ds	1
   827  0076                     ??_Lcd_Init:
   828  0076                     ??_Lcd_Clear:	
   829                           ; 1 bytes @ 0x6
   830                           
   831  0076                     ?_Lcd_Set_Cursor:	
   832                           ; 1 bytes @ 0x6
   833                           
   834  0076                     my_delay_s@tiempo:	
   835                           ; 1 bytes @ 0x6
   836                           
   837  0076                     Lcd_Set_Cursor@b:	
   838                           ; 1 bytes @ 0x6
   839                           
   840                           
   841                           ; 1 bytes @ 0x6
   842  0076                     	ds	1
   843  0077                     ??_Lcd_Set_Cursor:
   844  0077                     ??___wmul:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     ??___awmod:	
   848                           ; 1 bytes @ 0x7
   849                           
   850  0077                     ??___lwdiv:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  0077                     Lcd_Set_Cursor@a:	
   854                           ; 1 bytes @ 0x7
   855                           
   856  0077                     I2C_Master_Read@temp:	
   857                           ; 1 bytes @ 0x7
   858                           
   859  0077                     USART_CONFIG@rc:	
   860                           ; 2 bytes @ 0x7
   861                           
   862  0077                     Lcd_Write_String@i:	
   863                           ; 2 bytes @ 0x7
   864                           
   865  0077                     ___wmul@product:	
   866                           ; 2 bytes @ 0x7
   867                           
   868                           
   869                           ; 2 bytes @ 0x7
   870  0077                     	ds	1
   871  0078                     ??___lwmod:
   872  0078                     ___lldiv@counter:	
   873                           ; 1 bytes @ 0x8
   874                           
   875                           
   876                           ; 1 bytes @ 0x8
   877  0078                     	ds	1
   878  0079                     ??_USART_CONFIG:
   879                           
   880                           	psect	cstackBANK0
   881  0020                     __pcstackBANK0:	
   882                           ; 1 bytes @ 0x9
   883                           
   884  0020                     ??_Lcd_Write_String:
   885  0020                     ?___lldiv:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0020                     ___awmod@counter:	
   889                           ; 4 bytes @ 0x0
   890                           
   891  0020                     ___lwdiv@counter:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0020                     ___lldiv@divisor:	
   895                           ; 1 bytes @ 0x0
   896                           
   897                           
   898                           ; 4 bytes @ 0x0
   899  0020                     	ds	1
   900  0021                     ___awmod@sign:
   901  0021                     ___lwdiv@quotient:	
   902                           ; 1 bytes @ 0x1
   903                           
   904                           
   905                           ; 2 bytes @ 0x1
   906  0021                     	ds	1
   907  0022                     ?___awdiv:
   908  0022                     ___awdiv@divisor:	
   909                           ; 2 bytes @ 0x2
   910                           
   911                           
   912                           ; 2 bytes @ 0x2
   913  0022                     	ds	1
   914  0023                     ?___lwmod:
   915  0023                     ___lwmod@divisor:	
   916                           ; 2 bytes @ 0x3
   917                           
   918                           
   919                           ; 2 bytes @ 0x3
   920  0023                     	ds	1
   921  0024                     ___awdiv@dividend:
   922  0024                     ___lldiv@dividend:	
   923                           ; 2 bytes @ 0x4
   924                           
   925                           
   926                           ; 4 bytes @ 0x4
   927  0024                     	ds	1
   928  0025                     ___lwmod@dividend:
   929                           
   930                           ; 2 bytes @ 0x5
   931  0025                     	ds	1
   932  0026                     ??___awdiv:
   933                           
   934                           ; 1 bytes @ 0x6
   935  0026                     	ds	1
   936  0027                     ___awdiv@counter:
   937  0027                     ___lwmod@counter:	
   938                           ; 1 bytes @ 0x7
   939                           
   940                           
   941                           ; 1 bytes @ 0x7
   942  0027                     	ds	1
   943  0028                     ?_I2C_Master_Init:
   944  0028                     ?_sprintf:	
   945                           ; 1 bytes @ 0x8
   946                           
   947  0028                     sprintf@f:	
   948                           ; 2 bytes @ 0x8
   949                           
   950  0028                     ___awdiv@sign:	
   951                           ; 1 bytes @ 0x8
   952                           
   953  0028                     I2C_Master_Init@c:	
   954                           ; 1 bytes @ 0x8
   955                           
   956                           
   957                           ; 4 bytes @ 0x8
   958  0028                     	ds	1
   959  0029                     ___awdiv@quotient:
   960                           
   961                           ; 2 bytes @ 0x9
   962  0029                     	ds	2
   963  002B                     ??_sprintf:
   964  002B                     ??_Division:	
   965                           ; 1 bytes @ 0xB
   966                           
   967                           
   968                           ; 1 bytes @ 0xB
   969  002B                     	ds	1
   970  002C                     ??_I2C_Master_Init:
   971                           
   972                           ; 1 bytes @ 0xC
   973  002C                     	ds	2
   974  002E                     sprintf@ap:
   975  002E                     _Division$1282:	
   976                           ; 1 bytes @ 0xE
   977                           
   978                           
   979                           ; 2 bytes @ 0xE
   980  002E                     	ds	1
   981  002F                     sprintf@flag:
   982                           
   983                           ; 1 bytes @ 0xF
   984  002F                     	ds	1
   985  0030                     ??_setup:
   986  0030                     Division@y:	
   987                           ; 1 bytes @ 0x10
   988                           
   989  0030                     sprintf@prec:	
   990                           ; 1 bytes @ 0x10
   991                           
   992                           
   993                           ; 1 bytes @ 0x10
   994  0030                     	ds	1
   995  0031                     sprintf@val:
   996                           
   997                           ; 2 bytes @ 0x11
   998  0031                     	ds	2
   999  0033                     sprintf@sp:
  1000                           
  1001                           ; 1 bytes @ 0x13
  1002  0033                     	ds	1
  1003  0034                     sprintf@c:
  1004                           
  1005                           ; 1 bytes @ 0x14
  1006  0034                     	ds	1
  1007  0035                     ??_main:
  1008                           
  1009                           ; 1 bytes @ 0x15
  1010  0035                     	ds	7
  1011                           
  1012                           	psect	maintext
  1013  001E                     __pmaintext:	
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 152 in file "Master_Test.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : B00/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       7       0       0       0
  1036 ;;      Totals:         0       7       0       0       0
  1037 ;;Total ram usage:        7 bytes
  1038 ;; Hardware stack levels required when called:    4
  1039 ;; This function calls:
  1040 ;;		_ADC_IF
  1041 ;;		_Division
  1042 ;;		_I2C_Master_Read
  1043 ;;		_I2C_Master_Start
  1044 ;;		_I2C_Master_Stop
  1045 ;;		_I2C_Master_Write
  1046 ;;		_Lcd_Clear
  1047 ;;		_Lcd_Set_Cursor
  1048 ;;		_Lcd_Write_String
  1049 ;;		___awdiv
  1050 ;;		___wmul
  1051 ;;		_my_delay_s
  1052 ;;		_setup
  1053 ;;		_sprintf
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _main
  1061  001E                     _main:
  1062  001E                     l2627:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1065                           
  1066                           
  1067                           ;Master_Test.c: 153:     setup();
  1068  001E  120A  118A  256C  120A  118A  	fcall	_setup
  1069  0023                     l2629:
  1070                           
  1071                           ;Master_Test.c: 156:         ADC_IF();
  1072  0023  120A  158A  25D9  120A  118A  	fcall	_ADC_IF
  1073  0028                     l2631:
  1074                           
  1075                           ;Master_Test.c: 158:         I2C_Master_Start();
  1076  0028  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1077  002D                     l2633:
  1078                           
  1079                           ;Master_Test.c: 159:         I2C_Master_Write(0x51);
  1080  002D  3051               	movlw	81
  1081  002E  00F3               	movwf	I2C_Master_Write@d
  1082  002F  3000               	movlw	0
  1083  0030  00F4               	movwf	I2C_Master_Write@d+1
  1084  0031  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1085  0036                     l2635:
  1086                           
  1087                           ;Master_Test.c: 160:         temp = I2C_Master_Read(0);
  1088  0036  3000               	movlw	0
  1089  0037  00F3               	movwf	I2C_Master_Read@a
  1090  0038  00F4               	movwf	I2C_Master_Read@a+1
  1091  0039  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Read
  1092  003E  0873               	movf	?_I2C_Master_Read,w
  1093  003F  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0040  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0041  00B5               	movwf	??_main
  1096  0042  0835               	movf	??_main,w
  1097  0043  00C5               	movwf	_temp
  1098  0044                     l2637:
  1099                           
  1100                           ;Master_Test.c: 161:         I2C_Master_Stop();
  1101  0044  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1102  0049                     l2639:
  1103                           
  1104                           ;Master_Test.c: 162:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1105  0049  3006               	movlw	6
  1106  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1107  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1108  004C  00B7               	movwf	??_main+2
  1109  004D  3013               	movlw	19
  1110  004E  00B6               	movwf	??_main+1
  1111  004F  30AD               	movlw	173
  1112  0050  00B5               	movwf	??_main
  1113  0051                     u2117:
  1114  0051  0BB5               	decfsz	??_main,f
  1115  0052  2851               	goto	u2117
  1116  0053  0BB6               	decfsz	??_main+1,f
  1117  0054  2851               	goto	u2117
  1118  0055  0BB7               	decfsz	??_main+2,f
  1119  0056  2851               	goto	u2117
  1120  0057                     l2641:
  1121                           
  1122                           ;Master_Test.c: 170:         Division((pot*50/255));
  1123  0057  30FF               	movlw	255
  1124  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1126  005A  00A2               	movwf	___awdiv@divisor
  1127  005B  3000               	movlw	0
  1128  005C  00A3               	movwf	___awdiv@divisor+1
  1129  005D  084A               	movf	_pot,w
  1130  005E  00B5               	movwf	??_main
  1131  005F  01B6               	clrf	??_main+1
  1132  0060  0835               	movf	??_main,w
  1133  0061  00F3               	movwf	___wmul@multiplier
  1134  0062  0836               	movf	??_main+1,w
  1135  0063  00F4               	movwf	___wmul@multiplier+1
  1136  0064  3032               	movlw	50
  1137  0065  00F5               	movwf	___wmul@multiplicand
  1138  0066  3000               	movlw	0
  1139  0067  00F6               	movwf	___wmul@multiplicand+1
  1140  0068  120A  158A  2640  120A  118A  	fcall	___wmul
  1141  006D  0874               	movf	?___wmul+1,w
  1142  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1143  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0070  00A5               	movwf	___awdiv@dividend+1
  1145  0071  0873               	movf	?___wmul,w
  1146  0072  00A4               	movwf	___awdiv@dividend
  1147  0073  120A  118A  2503  120A  118A  	fcall	___awdiv
  1148  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1150  007A  0822               	movf	?___awdiv,w
  1151  007B  120A  118A  263C  120A  118A  	fcall	_Division
  1152  0080                     l2643:
  1153                           
  1154                           ;Master_Test.c: 171:         Lcd_Set_Cursor(2,13);
  1155  0080  300D               	movlw	13
  1156  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0083  00B5               	movwf	??_main
  1159  0084  0835               	movf	??_main,w
  1160  0085  00F6               	movwf	Lcd_Set_Cursor@b
  1161  0086  3002               	movlw	2
  1162  0087  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1163  008C                     l2645:
  1164                           
  1165                           ;Master_Test.c: 174:         sprintf(buffer, "%d", dec);
  1166  008C  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1167  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1168  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1169  008F  00B5               	movwf	??_main
  1170  0090  0835               	movf	??_main,w
  1171  0091  00A8               	movwf	sprintf@f
  1172  0092  0847               	movf	_dec,w
  1173  0093  00B6               	movwf	??_main+1
  1174  0094  01B7               	clrf	??_main+2
  1175  0095  0836               	movf	??_main+1,w
  1176  0096  00A9               	movwf	?_sprintf+1
  1177  0097  0837               	movf	??_main+2,w
  1178  0098  00AA               	movwf	?_sprintf+2
  1179  0099  304B               	movlw	(low (_buffer| 0))& (0+255)
  1180  009A  120A  118A  2419  120A  118A  	fcall	_sprintf
  1181  009F                     l2647:
  1182                           
  1183                           ;Master_Test.c: 175:         Lcd_Write_String(buffer);
  1184  009F  304B               	movlw	(low (_buffer| 0))& (0+255)
  1185  00A0  00F5               	movwf	Lcd_Write_String@a
  1186  00A1  3000               	movlw	0
  1187  00A2  00F6               	movwf	Lcd_Write_String@a+1
  1188  00A3  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1189  00A8                     l2649:
  1190                           
  1191                           ;Master_Test.c: 176:         sprintf(buffer, "%d", uni);
  1192  00A8  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1193  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00AB  00B5               	movwf	??_main
  1196  00AC  0835               	movf	??_main,w
  1197  00AD  00A8               	movwf	sprintf@f
  1198  00AE  0846               	movf	_uni,w
  1199  00AF  00B6               	movwf	??_main+1
  1200  00B0  01B7               	clrf	??_main+2
  1201  00B1  0836               	movf	??_main+1,w
  1202  00B2  00A9               	movwf	?_sprintf+1
  1203  00B3  0837               	movf	??_main+2,w
  1204  00B4  00AA               	movwf	?_sprintf+2
  1205  00B5  304B               	movlw	(low (_buffer| 0))& (0+255)
  1206  00B6  120A  118A  2419  120A  118A  	fcall	_sprintf
  1207  00BB                     l2651:
  1208                           
  1209                           ;Master_Test.c: 177:         Lcd_Write_String(buffer);
  1210  00BB  304B               	movlw	(low (_buffer| 0))& (0+255)
  1211  00BC  00F5               	movwf	Lcd_Write_String@a
  1212  00BD  3000               	movlw	0
  1213  00BE  00F6               	movwf	Lcd_Write_String@a+1
  1214  00BF  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1215  00C4                     l2653:
  1216                           
  1217                           ;Master_Test.c: 180:         Division(temp*397/255);
  1218  00C4  30FF               	movlw	255
  1219  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1220  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1221  00C7  00A2               	movwf	___awdiv@divisor
  1222  00C8  3000               	movlw	0
  1223  00C9  00A3               	movwf	___awdiv@divisor+1
  1224  00CA  0845               	movf	_temp,w
  1225  00CB  00B5               	movwf	??_main
  1226  00CC  01B6               	clrf	??_main+1
  1227  00CD  0835               	movf	??_main,w
  1228  00CE  00F3               	movwf	___wmul@multiplier
  1229  00CF  0836               	movf	??_main+1,w
  1230  00D0  00F4               	movwf	___wmul@multiplier+1
  1231  00D1  308D               	movlw	141
  1232  00D2  00F5               	movwf	___wmul@multiplicand
  1233  00D3  3001               	movlw	1
  1234  00D4  00F6               	movwf	___wmul@multiplicand+1
  1235  00D5  120A  158A  2640  120A  118A  	fcall	___wmul
  1236  00DA  0874               	movf	?___wmul+1,w
  1237  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1238  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1239  00DD  00A5               	movwf	___awdiv@dividend+1
  1240  00DE  0873               	movf	?___wmul,w
  1241  00DF  00A4               	movwf	___awdiv@dividend
  1242  00E0  120A  118A  2503  120A  118A  	fcall	___awdiv
  1243  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1244  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1245  00E7  0822               	movf	?___awdiv,w
  1246  00E8  120A  118A  263C  120A  118A  	fcall	_Division
  1247  00ED                     l2655:
  1248                           
  1249                           ;Master_Test.c: 181:         Lcd_Set_Cursor(2,1);
  1250  00ED  01F6               	clrf	Lcd_Set_Cursor@b
  1251  00EE  0AF6               	incf	Lcd_Set_Cursor@b,f
  1252  00EF  3002               	movlw	2
  1253  00F0  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1254  00F5                     l2657:
  1255                           
  1256                           ;Master_Test.c: 184:         sprintf(buffer, "%d", dec);
  1257  00F5  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1258  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1259  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1260  00F8  00B5               	movwf	??_main
  1261  00F9  0835               	movf	??_main,w
  1262  00FA  00A8               	movwf	sprintf@f
  1263  00FB  0847               	movf	_dec,w
  1264  00FC  00B6               	movwf	??_main+1
  1265  00FD  01B7               	clrf	??_main+2
  1266  00FE  0836               	movf	??_main+1,w
  1267  00FF  00A9               	movwf	?_sprintf+1
  1268  0100  0837               	movf	??_main+2,w
  1269  0101  00AA               	movwf	?_sprintf+2
  1270  0102  304B               	movlw	(low (_buffer| 0))& (0+255)
  1271  0103  120A  118A  2419  120A  118A  	fcall	_sprintf
  1272  0108                     l2659:
  1273                           
  1274                           ;Master_Test.c: 185:         Lcd_Write_String(buffer);
  1275  0108  304B               	movlw	(low (_buffer| 0))& (0+255)
  1276  0109  00F5               	movwf	Lcd_Write_String@a
  1277  010A  3000               	movlw	0
  1278  010B  00F6               	movwf	Lcd_Write_String@a+1
  1279  010C  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1280  0111                     l2661:
  1281                           
  1282                           ;Master_Test.c: 186:         sprintf(buffer, "%d", uni);
  1283  0111  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1284  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0114  00B5               	movwf	??_main
  1287  0115  0835               	movf	??_main,w
  1288  0116  00A8               	movwf	sprintf@f
  1289  0117  0846               	movf	_uni,w
  1290  0118  00B6               	movwf	??_main+1
  1291  0119  01B7               	clrf	??_main+2
  1292  011A  0836               	movf	??_main+1,w
  1293  011B  00A9               	movwf	?_sprintf+1
  1294  011C  0837               	movf	??_main+2,w
  1295  011D  00AA               	movwf	?_sprintf+2
  1296  011E  304B               	movlw	(low (_buffer| 0))& (0+255)
  1297  011F  120A  118A  2419  120A  118A  	fcall	_sprintf
  1298  0124                     l2663:
  1299                           
  1300                           ;Master_Test.c: 187:         Lcd_Write_String(buffer);
  1301  0124  304B               	movlw	(low (_buffer| 0))& (0+255)
  1302  0125  00F5               	movwf	Lcd_Write_String@a
  1303  0126  3000               	movlw	0
  1304  0127  00F6               	movwf	Lcd_Write_String@a+1
  1305  0128  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1306  012D                     l2665:
  1307                           
  1308                           ;Master_Test.c: 189:         I2C_Master_Start();
  1309  012D  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1310  0132                     l2667:
  1311                           
  1312                           ;Master_Test.c: 190:         I2C_Master_Write(0x31);
  1313  0132  3031               	movlw	49
  1314  0133  00F3               	movwf	I2C_Master_Write@d
  1315  0134  3000               	movlw	0
  1316  0135  00F4               	movwf	I2C_Master_Write@d+1
  1317  0136  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1318  013B                     l2669:
  1319                           
  1320                           ;Master_Test.c: 191:         luz = I2C_Master_Read(0);
  1321  013B  3000               	movlw	0
  1322  013C  00F3               	movwf	I2C_Master_Read@a
  1323  013D  00F4               	movwf	I2C_Master_Read@a+1
  1324  013E  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Read
  1325  0143  0873               	movf	?_I2C_Master_Read,w
  1326  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0146  00B5               	movwf	??_main
  1329  0147  0835               	movf	??_main,w
  1330  0148  00C4               	movwf	_luz
  1331  0149                     l2671:
  1332                           
  1333                           ;Master_Test.c: 192:         I2C_Master_Stop();
  1334  0149  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1335  014E                     l2673:
  1336                           
  1337                           ;Master_Test.c: 193:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1338  014E  3082               	movlw	130
  1339  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0151  00B6               	movwf	??_main+1
  1342  0152  30DD               	movlw	221
  1343  0153  00B5               	movwf	??_main
  1344  0154                     u2127:
  1345  0154  0BB5               	decfsz	??_main,f
  1346  0155  2954               	goto	u2127
  1347  0156  0BB6               	decfsz	??_main+1,f
  1348  0157  2954               	goto	u2127
  1349  0158                     l2675:
  1350                           
  1351                           ;Master_Test.c: 201:         Division(con);
  1352  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1354  015A  0849               	movf	_con,w
  1355  015B  120A  118A  263C  120A  118A  	fcall	_Division
  1356  0160                     l2677:
  1357                           
  1358                           ;Master_Test.c: 202:         Lcd_Set_Cursor(2,8);
  1359  0160  3008               	movlw	8
  1360  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0163  00B5               	movwf	??_main
  1363  0164  0835               	movf	??_main,w
  1364  0165  00F6               	movwf	Lcd_Set_Cursor@b
  1365  0166  3002               	movlw	2
  1366  0167  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1367  016C                     l2679:
  1368                           
  1369                           ;Master_Test.c: 203:         sprintf(buffer, "%d", cen);
  1370  016C  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1371  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1372  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1373  016F  00B5               	movwf	??_main
  1374  0170  0835               	movf	??_main,w
  1375  0171  00A8               	movwf	sprintf@f
  1376  0172  0848               	movf	_cen,w
  1377  0173  00B6               	movwf	??_main+1
  1378  0174  01B7               	clrf	??_main+2
  1379  0175  0836               	movf	??_main+1,w
  1380  0176  00A9               	movwf	?_sprintf+1
  1381  0177  0837               	movf	??_main+2,w
  1382  0178  00AA               	movwf	?_sprintf+2
  1383  0179  304B               	movlw	(low (_buffer| 0))& (0+255)
  1384  017A  120A  118A  2419  120A  118A  	fcall	_sprintf
  1385  017F                     l2681:
  1386                           
  1387                           ;Master_Test.c: 204:         Lcd_Write_String(buffer);
  1388  017F  304B               	movlw	(low (_buffer| 0))& (0+255)
  1389  0180  00F5               	movwf	Lcd_Write_String@a
  1390  0181  3000               	movlw	0
  1391  0182  00F6               	movwf	Lcd_Write_String@a+1
  1392  0183  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1393  0188                     l2683:
  1394                           
  1395                           ;Master_Test.c: 205:         sprintf(buffer, "%d", dec);
  1396  0188  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1397  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1398  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1399  018B  00B5               	movwf	??_main
  1400  018C  0835               	movf	??_main,w
  1401  018D  00A8               	movwf	sprintf@f
  1402  018E  0847               	movf	_dec,w
  1403  018F  00B6               	movwf	??_main+1
  1404  0190  01B7               	clrf	??_main+2
  1405  0191  0836               	movf	??_main+1,w
  1406  0192  00A9               	movwf	?_sprintf+1
  1407  0193  0837               	movf	??_main+2,w
  1408  0194  00AA               	movwf	?_sprintf+2
  1409  0195  304B               	movlw	(low (_buffer| 0))& (0+255)
  1410  0196  120A  118A  2419  120A  118A  	fcall	_sprintf
  1411  019B                     l2685:
  1412                           
  1413                           ;Master_Test.c: 206:         Lcd_Write_String(buffer);
  1414  019B  304B               	movlw	(low (_buffer| 0))& (0+255)
  1415  019C  00F5               	movwf	Lcd_Write_String@a
  1416  019D  3000               	movlw	0
  1417  019E  00F6               	movwf	Lcd_Write_String@a+1
  1418  019F  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1419  01A4                     l2687:
  1420                           
  1421                           ;Master_Test.c: 207:         sprintf(buffer, "%d", uni);
  1422  01A4  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1423  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1424  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1425  01A7  00B5               	movwf	??_main
  1426  01A8  0835               	movf	??_main,w
  1427  01A9  00A8               	movwf	sprintf@f
  1428  01AA  0846               	movf	_uni,w
  1429  01AB  00B6               	movwf	??_main+1
  1430  01AC  01B7               	clrf	??_main+2
  1431  01AD  0836               	movf	??_main+1,w
  1432  01AE  00A9               	movwf	?_sprintf+1
  1433  01AF  0837               	movf	??_main+2,w
  1434  01B0  00AA               	movwf	?_sprintf+2
  1435  01B1  304B               	movlw	(low (_buffer| 0))& (0+255)
  1436  01B2  120A  118A  2419  120A  118A  	fcall	_sprintf
  1437  01B7                     l2689:
  1438                           
  1439                           ;Master_Test.c: 208:         Lcd_Write_String(buffer);
  1440  01B7  304B               	movlw	(low (_buffer| 0))& (0+255)
  1441  01B8  00F5               	movwf	Lcd_Write_String@a
  1442  01B9  3000               	movlw	0
  1443  01BA  00F6               	movwf	Lcd_Write_String@a+1
  1444  01BB  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1445  01C0                     l2691:
  1446                           
  1447                           ;Master_Test.c: 210:         I2C_Master_Start();
  1448  01C0  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1449  01C5                     l2693:
  1450                           
  1451                           ;Master_Test.c: 211:         I2C_Master_Write(0xEE);
  1452  01C5  30EE               	movlw	238
  1453  01C6  00F3               	movwf	I2C_Master_Write@d
  1454  01C7  3000               	movlw	0
  1455  01C8  00F4               	movwf	I2C_Master_Write@d+1
  1456  01C9  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1457  01CE                     l2695:
  1458                           
  1459                           ;Master_Test.c: 212:         I2C_Master_Write(0B11110110);
  1460  01CE  30F6               	movlw	246
  1461  01CF  00F3               	movwf	I2C_Master_Write@d
  1462  01D0  3000               	movlw	0
  1463  01D1  00F4               	movwf	I2C_Master_Write@d+1
  1464  01D2  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1465  01D7                     l2697:
  1466                           
  1467                           ;Master_Test.c: 213:         I2C_Master_Stop();
  1468  01D7  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1469  01DC                     l2699:
  1470                           
  1471                           ;Master_Test.c: 214:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1472  01DC  3082               	movlw	130
  1473  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1474  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1475  01DF  00B6               	movwf	??_main+1
  1476  01E0  30DD               	movlw	221
  1477  01E1  00B5               	movwf	??_main
  1478  01E2                     u2137:
  1479  01E2  0BB5               	decfsz	??_main,f
  1480  01E3  29E2               	goto	u2137
  1481  01E4  0BB6               	decfsz	??_main+1,f
  1482  01E5  29E2               	goto	u2137
  1483  01E6                     l2701:
  1484                           
  1485                           ;Master_Test.c: 216:         I2C_Master_Start();
  1486  01E6  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1487  01EB                     l2703:
  1488                           
  1489                           ;Master_Test.c: 217:         I2C_Master_Write(0xEE | 1);
  1490  01EB  30EF               	movlw	239
  1491  01EC  00F3               	movwf	I2C_Master_Write@d
  1492  01ED  3000               	movlw	0
  1493  01EE  00F4               	movwf	I2C_Master_Write@d+1
  1494  01EF  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1495  01F4                     l2705:
  1496                           
  1497                           ;Master_Test.c: 218:         var = I2C_Master_Read(0);
  1498  01F4  3000               	movlw	0
  1499  01F5  00F3               	movwf	I2C_Master_Read@a
  1500  01F6  00F4               	movwf	I2C_Master_Read@a+1
  1501  01F7  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Read
  1502  01FC  0873               	movf	?_I2C_Master_Read,w
  1503  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1504  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1505  01FF  00B5               	movwf	??_main
  1506  0200  0835               	movf	??_main,w
  1507  0201  00C2               	movwf	_var
  1508  0202                     l2707:
  1509                           
  1510                           ;Master_Test.c: 219:         presion1 = var<<8;
  1511  0202  0842               	movf	_var,w
  1512  0203  00B5               	movwf	??_main
  1513  0204  01B6               	clrf	??_main+1
  1514  0205  0835               	movf	??_main,w
  1515  0206  00B6               	movwf	??_main+1
  1516  0207  01B5               	clrf	??_main
  1517  0208  0835               	movf	??_main,w
  1518  0209  00BC               	movwf	_presion1
  1519  020A  0836               	movf	??_main+1,w
  1520  020B  00BD               	movwf	_presion1+1
  1521  020C                     l2709:
  1522                           
  1523                           ;Master_Test.c: 220:         var = I2C_Master_Read(0);
  1524  020C  3000               	movlw	0
  1525  020D  00F3               	movwf	I2C_Master_Read@a
  1526  020E  00F4               	movwf	I2C_Master_Read@a+1
  1527  020F  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Read
  1528  0214  0873               	movf	?_I2C_Master_Read,w
  1529  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0217  00B5               	movwf	??_main
  1532  0218  0835               	movf	??_main,w
  1533  0219  00C2               	movwf	_var
  1534  021A                     l2711:
  1535                           
  1536                           ;Master_Test.c: 221:         I2C_Master_Stop();
  1537  021A  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1538  021F                     l2713:
  1539                           
  1540                           ;Master_Test.c: 222:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1541  021F  3082               	movlw	130
  1542  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0222  00B6               	movwf	??_main+1
  1545  0223  30DD               	movlw	221
  1546  0224  00B5               	movwf	??_main
  1547  0225                     u2147:
  1548  0225  0BB5               	decfsz	??_main,f
  1549  0226  2A25               	goto	u2147
  1550  0227  0BB6               	decfsz	??_main+1,f
  1551  0228  2A25               	goto	u2147
  1552  0229                     l2715:
  1553                           
  1554                           ;Master_Test.c: 223:         presion1 = presion1 & var;
  1555  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1556  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1557  022B  0842               	movf	_var,w
  1558  022C  053C               	andwf	_presion1,w
  1559  022D  00B5               	movwf	??_main
  1560  022E  01B6               	clrf	??_main+1
  1561  022F  0835               	movf	??_main,w
  1562  0230  00BC               	movwf	_presion1
  1563  0231  0836               	movf	??_main+1,w
  1564  0232  00BD               	movwf	_presion1+1
  1565  0233                     l2717:
  1566                           
  1567                           ;Master_Test.c: 224:         presion1 = presion1+968;
  1568  0233  083C               	movf	_presion1,w
  1569  0234  3EC8               	addlw	200
  1570  0235  00BC               	movwf	_presion1
  1571  0236  083D               	movf	_presion1+1,w
  1572  0237  1803               	skipnc
  1573  0238  3E01               	addlw	1
  1574  0239  3E03               	addlw	3
  1575  023A  00BD               	movwf	_presion1+1
  1576  023B                     l2719:
  1577                           
  1578                           ;Master_Test.c: 225:         presion1 = presion1/1000;
  1579  023B  30E8               	movlw	232
  1580  023C  00A2               	movwf	___awdiv@divisor
  1581  023D  3003               	movlw	3
  1582  023E  00A3               	movwf	___awdiv@divisor+1
  1583  023F  083D               	movf	_presion1+1,w
  1584  0240  00A5               	movwf	___awdiv@dividend+1
  1585  0241  083C               	movf	_presion1,w
  1586  0242  00A4               	movwf	___awdiv@dividend
  1587  0243  120A  118A  2503  120A  118A  	fcall	___awdiv
  1588  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1590  024A  0823               	movf	?___awdiv+1,w
  1591  024B  00BD               	movwf	_presion1+1
  1592  024C  0822               	movf	?___awdiv,w
  1593  024D  00BC               	movwf	_presion1
  1594  024E                     l2721:
  1595                           
  1596                           ;Master_Test.c: 229:         if(luz==0){
  1597  024E  0844               	movf	_luz,w
  1598  024F  1D03               	btfss	3,2
  1599  0250  2A52               	goto	u2051
  1600  0251  2A53               	goto	u2050
  1601  0252                     u2051:
  1602  0252  2AB0               	goto	l2747
  1603  0253                     u2050:
  1604  0253                     l2723:
  1605                           
  1606                           ;Master_Test.c: 231:             Lcd_Set_Cursor(2, 4);
  1607  0253  3004               	movlw	4
  1608  0254  00B5               	movwf	??_main
  1609  0255  0835               	movf	??_main,w
  1610  0256  00F6               	movwf	Lcd_Set_Cursor@b
  1611  0257  3002               	movlw	2
  1612  0258  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1613  025D                     l2725:
  1614                           
  1615                           ;Master_Test.c: 232:             Lcd_Write_String("No");
  1616  025D  3039               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1617  025E  00F5               	movwf	Lcd_Write_String@a
  1618  025F  3080               	movlw	128
  1619  0260  00F6               	movwf	Lcd_Write_String@a+1
  1620  0261  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1621  0266                     l2727:
  1622                           
  1623                           ;Master_Test.c: 234:             I2C_Master_Start();
  1624  0266  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1625  026B                     l2729:
  1626                           
  1627                           ;Master_Test.c: 235:             I2C_Master_Write(0x50);
  1628  026B  3050               	movlw	80
  1629  026C  00F3               	movwf	I2C_Master_Write@d
  1630  026D  3000               	movlw	0
  1631  026E  00F4               	movwf	I2C_Master_Write@d+1
  1632  026F  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1633  0274                     l2731:
  1634                           
  1635                           ;Master_Test.c: 236:             I2C_Master_Write(0x01);
  1636  0274  3001               	movlw	1
  1637  0275  00F3               	movwf	I2C_Master_Write@d
  1638  0276  3000               	movlw	0
  1639  0277  00F4               	movwf	I2C_Master_Write@d+1
  1640  0278  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1641  027D                     l2733:
  1642                           
  1643                           ;Master_Test.c: 237:             I2C_Master_Stop();
  1644  027D  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1645  0282                     l2735:
  1646                           
  1647                           ;Master_Test.c: 238:             my_delay_s(con);
  1648  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0284  0849               	movf	_con,w
  1651  0285  120A  158A  260B  120A  118A  	fcall	_my_delay_s
  1652  028A                     l2737:
  1653                           
  1654                           ;Master_Test.c: 240:             I2C_Master_Start();
  1655  028A  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1656  028F                     l2739:
  1657                           
  1658                           ;Master_Test.c: 241:             I2C_Master_Write(0x50);
  1659  028F  3050               	movlw	80
  1660  0290  00F3               	movwf	I2C_Master_Write@d
  1661  0291  3000               	movlw	0
  1662  0292  00F4               	movwf	I2C_Master_Write@d+1
  1663  0293  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1664  0298                     l2741:
  1665                           
  1666                           ;Master_Test.c: 242:             I2C_Master_Write(0x00);
  1667  0298  3000               	movlw	0
  1668  0299  00F3               	movwf	I2C_Master_Write@d
  1669  029A  00F4               	movwf	I2C_Master_Write@d+1
  1670  029B  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1671  02A0                     l2743:
  1672                           
  1673                           ;Master_Test.c: 243:             I2C_Master_Stop();
  1674  02A0  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1675  02A5                     l2745:
  1676                           
  1677                           ;Master_Test.c: 244:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1678  02A5  3082               	movlw	130
  1679  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1680  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1681  02A8  00B6               	movwf	??_main+1
  1682  02A9  30DD               	movlw	221
  1683  02AA  00B5               	movwf	??_main
  1684  02AB                     u2157:
  1685  02AB  0BB5               	decfsz	??_main,f
  1686  02AC  2AAB               	goto	u2157
  1687  02AD  0BB6               	decfsz	??_main+1,f
  1688  02AE  2AAB               	goto	u2157
  1689                           
  1690                           ;Master_Test.c: 245:         }
  1691  02AF  2AC8               	goto	l2753
  1692  02B0                     l2747:
  1693  02B0  0344               	decf	_luz,w
  1694  02B1  1D03               	btfss	3,2
  1695  02B2  2AB4               	goto	u2061
  1696  02B3  2AB5               	goto	u2060
  1697  02B4                     u2061:
  1698  02B4  2AC8               	goto	l2753
  1699  02B5                     u2060:
  1700  02B5                     l2749:
  1701                           
  1702                           ;Master_Test.c: 247:             Lcd_Set_Cursor(2, 4);
  1703  02B5  3004               	movlw	4
  1704  02B6  00B5               	movwf	??_main
  1705  02B7  0835               	movf	??_main,w
  1706  02B8  00F6               	movwf	Lcd_Set_Cursor@b
  1707  02B9  3002               	movlw	2
  1708  02BA  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1709  02BF                     l2751:
  1710                           
  1711                           ;Master_Test.c: 248:             Lcd_Write_String("Si");
  1712  02BF  3036               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1713  02C0  00F5               	movwf	Lcd_Write_String@a
  1714  02C1  3080               	movlw	128
  1715  02C2  00F6               	movwf	Lcd_Write_String@a+1
  1716  02C3  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1717  02C8                     l2753:
  1718                           
  1719                           ;Master_Test.c: 251:         if((temp*400/255)>=(pot*50/255)){
  1720  02C8  30FF               	movlw	255
  1721  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1722  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1723  02CB  00A2               	movwf	___awdiv@divisor
  1724  02CC  3000               	movlw	0
  1725  02CD  00A3               	movwf	___awdiv@divisor+1
  1726  02CE  0845               	movf	_temp,w
  1727  02CF  00B5               	movwf	??_main
  1728  02D0  01B6               	clrf	??_main+1
  1729  02D1  0835               	movf	??_main,w
  1730  02D2  00F3               	movwf	___wmul@multiplier
  1731  02D3  0836               	movf	??_main+1,w
  1732  02D4  00F4               	movwf	___wmul@multiplier+1
  1733  02D5  3090               	movlw	144
  1734  02D6  00F5               	movwf	___wmul@multiplicand
  1735  02D7  3001               	movlw	1
  1736  02D8  00F6               	movwf	___wmul@multiplicand+1
  1737  02D9  120A  158A  2640  120A  118A  	fcall	___wmul
  1738  02DE  0874               	movf	?___wmul+1,w
  1739  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1740  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1741  02E1  00A5               	movwf	___awdiv@dividend+1
  1742  02E2  0873               	movf	?___wmul,w
  1743  02E3  00A4               	movwf	___awdiv@dividend
  1744  02E4  120A  118A  2503  120A  118A  	fcall	___awdiv
  1745  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1746  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1747  02EB  0822               	movf	?___awdiv,w
  1748  02EC  00B7               	movwf	??_main+2
  1749  02ED  0823               	movf	?___awdiv+1,w
  1750  02EE  00B8               	movwf	??_main+3
  1751  02EF  30FF               	movlw	255
  1752  02F0  00A2               	movwf	___awdiv@divisor
  1753  02F1  3000               	movlw	0
  1754  02F2  00A3               	movwf	___awdiv@divisor+1
  1755  02F3  084A               	movf	_pot,w
  1756  02F4  00B9               	movwf	??_main+4
  1757  02F5  01BA               	clrf	??_main+5
  1758  02F6  0839               	movf	??_main+4,w
  1759  02F7  00F3               	movwf	___wmul@multiplier
  1760  02F8  083A               	movf	??_main+5,w
  1761  02F9  00F4               	movwf	___wmul@multiplier+1
  1762  02FA  3032               	movlw	50
  1763  02FB  00F5               	movwf	___wmul@multiplicand
  1764  02FC  3000               	movlw	0
  1765  02FD  00F6               	movwf	___wmul@multiplicand+1
  1766  02FE  120A  158A  2640  120A  118A  	fcall	___wmul
  1767  0303  0874               	movf	?___wmul+1,w
  1768  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0306  00A5               	movwf	___awdiv@dividend+1
  1771  0307  0873               	movf	?___wmul,w
  1772  0308  00A4               	movwf	___awdiv@dividend
  1773  0309  120A  118A  2503  120A  118A  	fcall	___awdiv
  1774  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1775  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0310  0838               	movf	??_main+3,w
  1777  0311  3A80               	xorlw	128
  1778  0312  00BB               	movwf	??_main+6
  1779  0313  0823               	movf	?___awdiv+1,w
  1780  0314  3A80               	xorlw	128
  1781  0315  023B               	subwf	??_main+6,w
  1782  0316  1D03               	skipz
  1783  0317  2B1A               	goto	u2075
  1784  0318  0822               	movf	?___awdiv,w
  1785  0319  0237               	subwf	??_main+2,w
  1786  031A                     u2075:
  1787  031A  1C03               	skipc
  1788  031B  2B1D               	goto	u2071
  1789  031C  2B1E               	goto	u2070
  1790  031D                     u2071:
  1791  031D  2B45               	goto	l2759
  1792  031E                     u2070:
  1793  031E                     l2755:
  1794                           
  1795                           ;Master_Test.c: 252:             I2C_Master_Start();
  1796  031E  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1797                           
  1798                           ;Master_Test.c: 253:             I2C_Master_Write(0x30);
  1799  0323  3030               	movlw	48
  1800  0324  00F3               	movwf	I2C_Master_Write@d
  1801  0325  3000               	movlw	0
  1802  0326  00F4               	movwf	I2C_Master_Write@d+1
  1803  0327  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1804                           
  1805                           ;Master_Test.c: 254:             I2C_Master_Write(0xf0);
  1806  032C  30F0               	movlw	240
  1807  032D  00F3               	movwf	I2C_Master_Write@d
  1808  032E  3000               	movlw	0
  1809  032F  00F4               	movwf	I2C_Master_Write@d+1
  1810  0330  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1811                           
  1812                           ;Master_Test.c: 255:             I2C_Master_Stop();
  1813  0335  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1814  033A                     l2757:
  1815                           
  1816                           ;Master_Test.c: 256:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1817  033A  3082               	movlw	130
  1818  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1819  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1820  033D  00B6               	movwf	??_main+1
  1821  033E  30DD               	movlw	221
  1822  033F  00B5               	movwf	??_main
  1823  0340                     u2167:
  1824  0340  0BB5               	decfsz	??_main,f
  1825  0341  2B40               	goto	u2167
  1826  0342  0BB6               	decfsz	??_main+1,f
  1827  0343  2B40               	goto	u2167
  1828                           
  1829                           ;Master_Test.c: 257:         }
  1830  0344  2BB7               	goto	l2765
  1831  0345                     l2759:
  1832  0345  30FF               	movlw	255
  1833  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0348  00A2               	movwf	___awdiv@divisor
  1836  0349  3000               	movlw	0
  1837  034A  00A3               	movwf	___awdiv@divisor+1
  1838  034B  0845               	movf	_temp,w
  1839  034C  00B5               	movwf	??_main
  1840  034D  01B6               	clrf	??_main+1
  1841  034E  0835               	movf	??_main,w
  1842  034F  00F3               	movwf	___wmul@multiplier
  1843  0350  0836               	movf	??_main+1,w
  1844  0351  00F4               	movwf	___wmul@multiplier+1
  1845  0352  3090               	movlw	144
  1846  0353  00F5               	movwf	___wmul@multiplicand
  1847  0354  3001               	movlw	1
  1848  0355  00F6               	movwf	___wmul@multiplicand+1
  1849  0356  120A  158A  2640  120A  118A  	fcall	___wmul
  1850  035B  0874               	movf	?___wmul+1,w
  1851  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1852  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1853  035E  00A5               	movwf	___awdiv@dividend+1
  1854  035F  0873               	movf	?___wmul,w
  1855  0360  00A4               	movwf	___awdiv@dividend
  1856  0361  120A  118A  2503  120A  118A  	fcall	___awdiv
  1857  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0368  0822               	movf	?___awdiv,w
  1860  0369  00B7               	movwf	??_main+2
  1861  036A  0823               	movf	?___awdiv+1,w
  1862  036B  00B8               	movwf	??_main+3
  1863  036C  30FF               	movlw	255
  1864  036D  00A2               	movwf	___awdiv@divisor
  1865  036E  3000               	movlw	0
  1866  036F  00A3               	movwf	___awdiv@divisor+1
  1867  0370  084A               	movf	_pot,w
  1868  0371  00B9               	movwf	??_main+4
  1869  0372  01BA               	clrf	??_main+5
  1870  0373  0839               	movf	??_main+4,w
  1871  0374  00F3               	movwf	___wmul@multiplier
  1872  0375  083A               	movf	??_main+5,w
  1873  0376  00F4               	movwf	___wmul@multiplier+1
  1874  0377  3032               	movlw	50
  1875  0378  00F5               	movwf	___wmul@multiplicand
  1876  0379  3000               	movlw	0
  1877  037A  00F6               	movwf	___wmul@multiplicand+1
  1878  037B  120A  158A  2640  120A  118A  	fcall	___wmul
  1879  0380  0874               	movf	?___wmul+1,w
  1880  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0383  00A5               	movwf	___awdiv@dividend+1
  1883  0384  0873               	movf	?___wmul,w
  1884  0385  00A4               	movwf	___awdiv@dividend
  1885  0386  120A  118A  2503  120A  118A  	fcall	___awdiv
  1886  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1887  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1888  038D  0838               	movf	??_main+3,w
  1889  038E  3A80               	xorlw	128
  1890  038F  00BB               	movwf	??_main+6
  1891  0390  0823               	movf	?___awdiv+1,w
  1892  0391  3A80               	xorlw	128
  1893  0392  023B               	subwf	??_main+6,w
  1894  0393  1D03               	skipz
  1895  0394  2B97               	goto	u2085
  1896  0395  0822               	movf	?___awdiv,w
  1897  0396  0237               	subwf	??_main+2,w
  1898  0397                     u2085:
  1899  0397  1803               	skipnc
  1900  0398  2B9A               	goto	u2081
  1901  0399  2B9B               	goto	u2080
  1902  039A                     u2081:
  1903  039A  2BB7               	goto	l2765
  1904  039B                     u2080:
  1905  039B                     l2761:
  1906                           
  1907                           ;Master_Test.c: 259:             I2C_Master_Start();
  1908  039B  120A  158A  25AD  120A  118A  	fcall	_I2C_Master_Start
  1909                           
  1910                           ;Master_Test.c: 260:             I2C_Master_Write(0x30);
  1911  03A0  3030               	movlw	48
  1912  03A1  00F3               	movwf	I2C_Master_Write@d
  1913  03A2  3000               	movlw	0
  1914  03A3  00F4               	movwf	I2C_Master_Write@d+1
  1915  03A4  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1916                           
  1917                           ;Master_Test.c: 261:             I2C_Master_Write(0x00);
  1918  03A9  3000               	movlw	0
  1919  03AA  00F3               	movwf	I2C_Master_Write@d
  1920  03AB  00F4               	movwf	I2C_Master_Write@d+1
  1921  03AC  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1922                           
  1923                           ;Master_Test.c: 262:             I2C_Master_Stop();
  1924  03B1  120A  158A  25B6  120A  118A  	fcall	_I2C_Master_Stop
  1925  03B6  2B3A               	goto	l2757
  1926  03B7                     l2765:
  1927                           
  1928                           ;Master_Test.c: 265:         presion1 = 103;
  1929  03B7  3067               	movlw	103
  1930  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1931  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1932  03BA  00BC               	movwf	_presion1
  1933  03BB  3000               	movlw	0
  1934  03BC  00BD               	movwf	_presion1+1
  1935  03BD                     l2767:
  1936                           
  1937                           ;Master_Test.c: 266:         if((presion1)>=(presion2)){
  1938  03BD  083D               	movf	_presion1+1,w
  1939  03BE  3A80               	xorlw	128
  1940  03BF  00B5               	movwf	??_main
  1941  03C0  3080               	movlw	128
  1942  03C1  0235               	subwf	??_main,w
  1943  03C2  1D03               	skipz
  1944  03C3  2BC6               	goto	u2095
  1945  03C4  0843               	movf	_presion2,w
  1946  03C5  023C               	subwf	_presion1,w
  1947  03C6                     u2095:
  1948  03C6  1C03               	skipc
  1949  03C7  2BC9               	goto	u2091
  1950  03C8  2BCA               	goto	u2090
  1951  03C9                     u2091:
  1952  03C9  2823               	goto	l2629
  1953  03CA                     u2090:
  1954  03CA                     l2769:
  1955                           
  1956                           ;Master_Test.c: 267:             Lcd_Clear();
  1957  03CA  120A  158A  25CC  120A  118A  	fcall	_Lcd_Clear
  1958                           
  1959                           ;Master_Test.c: 268:             Lcd_Set_Cursor(1,1);
  1960  03CF  01F6               	clrf	Lcd_Set_Cursor@b
  1961  03D0  0AF6               	incf	Lcd_Set_Cursor@b,f
  1962  03D1  3001               	movlw	1
  1963  03D2  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1964  03D7                     l2771:
  1965                           
  1966                           ;Master_Test.c: 269:             Lcd_Write_String("PRECAUCION");
  1967  03D7  3028               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1968  03D8  00F5               	movwf	Lcd_Write_String@a
  1969  03D9  3080               	movlw	128
  1970  03DA  00F6               	movwf	Lcd_Write_String@a+1
  1971  03DB  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1972  03E0                     l2773:
  1973                           
  1974                           ;Master_Test.c: 270:             Lcd_Set_Cursor(2,1);
  1975  03E0  01F6               	clrf	Lcd_Set_Cursor@b
  1976  03E1  0AF6               	incf	Lcd_Set_Cursor@b,f
  1977  03E2  3002               	movlw	2
  1978  03E3  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  1979                           
  1980                           ;Master_Test.c: 271:             Lcd_Write_String("PRESION ALTA");
  1981  03E8  301B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1982  03E9  00F5               	movwf	Lcd_Write_String@a
  1983  03EA  3080               	movlw	128
  1984  03EB  00F6               	movwf	Lcd_Write_String@a+1
  1985  03EC  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  1986  03F1                     l2775:	
  1987                           ;Master_Test.c: 272:             while((presion1)>=(presion2));
  1988                           
  1989  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1990  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1991  03F3  083D               	movf	_presion1+1,w
  1992  03F4  3A80               	xorlw	128
  1993  03F5  00B5               	movwf	??_main
  1994  03F6  3080               	movlw	128
  1995  03F7  0235               	subwf	??_main,w
  1996  03F8  1D03               	skipz
  1997  03F9  2BFC               	goto	u2105
  1998  03FA  0843               	movf	_presion2,w
  1999  03FB  023C               	subwf	_presion1,w
  2000  03FC                     u2105:
  2001  03FC  1803               	skipnc
  2002  03FD  2BFF               	goto	u2101
  2003  03FE  2C00               	goto	u2100
  2004  03FF                     u2101:
  2005  03FF  2BF1               	goto	l2775
  2006  0400                     u2100:
  2007  0400                     l2777:
  2008                           
  2009                           ;Master_Test.c: 273:             Lcd_Clear();
  2010  0400  120A  158A  25CC  120A  118A  	fcall	_Lcd_Clear
  2011                           
  2012                           ;Master_Test.c: 274:             Lcd_Set_Cursor(1,0);
  2013  0405  01F6               	clrf	Lcd_Set_Cursor@b
  2014  0406  3001               	movlw	1
  2015  0407  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  2016  040C                     l2779:
  2017                           
  2018                           ;Master_Test.c: 275:             Lcd_Write_String("Tem Luz t(s) TO");
  2019  040C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2020  040D  00F5               	movwf	Lcd_Write_String@a
  2021  040E  3080               	movlw	128
  2022  040F  00F6               	movwf	Lcd_Write_String@a+1
  2023  0410  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  2024  0415  2823               	goto	l2629
  2025  0416  120A  118A  280C   	ljmp	start
  2026  0419                     __end_of_main:
  2027                           
  2028                           	psect	text1
  2029  0419                     __ptext1:	
  2030 ;; *************** function _sprintf *****************
  2031 ;; Defined at:
  2032 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  sp              1    wreg     PTR unsigned char 
  2035 ;;		 -> buffer(1), 
  2036 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  2037 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  2038 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  2041 ;;		 -> buffer(1), 
  2042 ;;  tmpval          4    0        struct .
  2043 ;;  val             2   17[BANK0 ] unsigned int 
  2044 ;;  cp              2    0        PTR const unsigned char 
  2045 ;;  len             2    0        unsigned int 
  2046 ;;  c               1   20[BANK0 ] unsigned char 
  2047 ;;  prec            1   16[BANK0 ] char 
  2048 ;;  flag            1   15[BANK0 ] unsigned char 
  2049 ;;  ap              1   14[BANK0 ] PTR void [1]
  2050 ;;		 -> ?_sprintf(2), 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2    8[BANK0 ] int 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       3       0       0       0
  2061 ;;      Locals:         0       7       0       0       0
  2062 ;;      Temps:          0       3       0       0       0
  2063 ;;      Totals:         0      13       0       0       0
  2064 ;;Total ram usage:       13 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    2
  2067 ;; This function calls:
  2068 ;;		___lwdiv
  2069 ;;		___lwmod
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _sprintf
  2077  0419                     _sprintf:
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2081                           ;sprintf@sp stored from wreg
  2082  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2083  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2084  041B  00B3               	movwf	sprintf@sp
  2085  041C                     l2565:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2088  041C  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2089  041D  00AB               	movwf	??_sprintf
  2090  041E  082B               	movf	??_sprintf,w
  2091  041F  00AE               	movwf	sprintf@ap
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2094  0420  2CEC               	goto	l2617
  2095  0421                     l2567:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2098  0421  3025               	movlw	37
  2099  0422  0634               	xorwf	sprintf@c,w
  2100  0423  1903               	btfsc	3,2
  2101  0424  2C26               	goto	u1981
  2102  0425  2C27               	goto	u1980
  2103  0426                     u1981:
  2104  0426  2C33               	goto	l2573
  2105  0427                     u1980:
  2106  0427                     l2569:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2109  0427  0834               	movf	sprintf@c,w
  2110  0428  00AB               	movwf	??_sprintf
  2111  0429  0833               	movf	sprintf@sp,w
  2112  042A  0084               	movwf	4
  2113  042B  082B               	movf	??_sprintf,w
  2114  042C  1383               	bcf	3,7	;select IRP bank0
  2115  042D  0080               	movwf	0
  2116  042E                     l2571:
  2117  042E  3001               	movlw	1
  2118  042F  00AB               	movwf	??_sprintf
  2119  0430  082B               	movf	??_sprintf,w
  2120  0431  07B3               	addwf	sprintf@sp,f
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2123  0432  2CEC               	goto	l2617
  2124  0433                     l2573:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2127  0433  01AF               	clrf	sprintf@flag
  2128  0434                     l2577:	
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2130                           
  2131  0434  3001               	movlw	1
  2132  0435  07A8               	addwf	sprintf@f,f
  2133  0436  30FF               	movlw	-1
  2134  0437  0728               	addwf	sprintf@f,w
  2135  0438  0084               	movwf	4
  2136  0439  120A  118A  276A  120A  118A  	fcall	stringdir
  2137  043E  00B4               	movwf	sprintf@c
  2138  043F  00AB               	movwf	??_sprintf
  2139  0440  01AC               	clrf	??_sprintf+1
  2140                           
  2141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2142                           ; Switch size 1, requested type "simple"
  2143                           ; Number of cases is 1, Range of values is 0 to 0
  2144                           ; switch strategies available:
  2145                           ; Name         Instructions Cycles
  2146                           ; simple_byte            4     3 (average)
  2147                           ; direct_byte           11     8 (fixed)
  2148                           ; jumptable            260     6 (fixed)
  2149                           ;	Chosen strategy is simple_byte
  2150  0441  082C               	movf	??_sprintf+1,w
  2151  0442  3A00               	xorlw	0	; case 0
  2152  0443  1903               	skipnz
  2153  0444  2C46               	goto	l2841
  2154  0445  2CEC               	goto	l2617
  2155  0446                     l2841:
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 3, Range of values is 0 to 105
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           10     6 (average)
  2162                           ; jumptable            260     6 (fixed)
  2163                           ;	Chosen strategy is simple_byte
  2164  0446  082B               	movf	??_sprintf,w
  2165  0447  3A00               	xorlw	0	; case 0
  2166  0448  1903               	skipnz
  2167  0449  2CFE               	goto	l2619
  2168  044A  3A64               	xorlw	100	; case 100
  2169  044B  1903               	skipnz
  2170  044C  2C51               	goto	l2579
  2171  044D  3A0D               	xorlw	13	; case 105
  2172  044E  1903               	skipnz
  2173  044F  2C51               	goto	l2579
  2174  0450  2CEC               	goto	l2617
  2175  0451                     l2579:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2178  0451  082E               	movf	sprintf@ap,w
  2179  0452  0084               	movwf	4
  2180  0453  1383               	bcf	3,7	;select IRP bank0
  2181  0454  0800               	movf	0,w
  2182  0455  00B1               	movwf	sprintf@val
  2183  0456  0A84               	incf	4,f
  2184  0457  0800               	movf	0,w
  2185  0458  00B2               	movwf	sprintf@val+1
  2186  0459                     l2581:
  2187  0459  3002               	movlw	2
  2188  045A  00AB               	movwf	??_sprintf
  2189  045B  082B               	movf	??_sprintf,w
  2190  045C  07AE               	addwf	sprintf@ap,f
  2191  045D                     l2583:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2194  045D  1FB2               	btfss	sprintf@val+1,7
  2195  045E  2C60               	goto	u1991
  2196  045F  2C61               	goto	u1990
  2197  0460                     u1991:
  2198  0460  2C6A               	goto	l2589
  2199  0461                     u1990:
  2200  0461                     l2585:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2203  0461  3003               	movlw	3
  2204  0462  00AB               	movwf	??_sprintf
  2205  0463  082B               	movf	??_sprintf,w
  2206  0464  04AF               	iorwf	sprintf@flag,f
  2207  0465                     l2587:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2210  0465  09B1               	comf	sprintf@val,f
  2211  0466  09B2               	comf	sprintf@val+1,f
  2212  0467  0AB1               	incf	sprintf@val,f
  2213  0468  1903               	skipnz
  2214  0469  0AB2               	incf	sprintf@val+1,f
  2215  046A                     l2589:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2218  046A  01B4               	clrf	sprintf@c
  2219  046B  0AB4               	incf	sprintf@c,f
  2220  046C                     l2595:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2223  046C  0834               	movf	sprintf@c,w
  2224  046D  00AB               	movwf	??_sprintf
  2225  046E  072B               	addwf	??_sprintf,w
  2226  046F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2227  0470  0084               	movwf	4
  2228  0471  120A  118A  276A  120A  118A  	fcall	stringdir
  2229  0476  00AC               	movwf	??_sprintf+1
  2230  0477  120A  118A  276A  120A  118A  	fcall	stringdir
  2231  047C  00AD               	movwf	??_sprintf+2
  2232  047D  082D               	movf	??_sprintf+2,w
  2233  047E  0232               	subwf	sprintf@val+1,w
  2234  047F  1D03               	skipz
  2235  0480  2C83               	goto	u2005
  2236  0481  082C               	movf	??_sprintf+1,w
  2237  0482  0231               	subwf	sprintf@val,w
  2238  0483                     u2005:
  2239  0483  1803               	skipnc
  2240  0484  2C86               	goto	u2001
  2241  0485  2C87               	goto	u2000
  2242  0486                     u2001:
  2243  0486  2C88               	goto	l2599
  2244  0487                     u2000:
  2245  0487  2C92               	goto	l2601
  2246  0488                     l2599:
  2247  0488  3001               	movlw	1
  2248  0489  00AB               	movwf	??_sprintf
  2249  048A  082B               	movf	??_sprintf,w
  2250  048B  07B4               	addwf	sprintf@c,f
  2251  048C  3005               	movlw	5
  2252  048D  0634               	xorwf	sprintf@c,w
  2253  048E  1D03               	btfss	3,2
  2254  048F  2C91               	goto	u2011
  2255  0490  2C92               	goto	u2010
  2256  0491                     u2011:
  2257  0491  2C6C               	goto	l2595
  2258  0492                     u2010:
  2259  0492                     l2601:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2262  0492  082F               	movf	sprintf@flag,w
  2263  0493  3903               	andlw	3
  2264  0494  1903               	btfsc	3,2
  2265  0495  2C97               	goto	u2021
  2266  0496  2C98               	goto	u2020
  2267  0497                     u2021:
  2268  0497  2CA3               	goto	l2607
  2269  0498                     u2020:
  2270  0498                     l2603:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2273  0498  302D               	movlw	45
  2274  0499  00AB               	movwf	??_sprintf
  2275  049A  0833               	movf	sprintf@sp,w
  2276  049B  0084               	movwf	4
  2277  049C  082B               	movf	??_sprintf,w
  2278  049D  1383               	bcf	3,7	;select IRP bank0
  2279  049E  0080               	movwf	0
  2280  049F                     l2605:
  2281  049F  3001               	movlw	1
  2282  04A0  00AB               	movwf	??_sprintf
  2283  04A1  082B               	movf	??_sprintf,w
  2284  04A2  07B3               	addwf	sprintf@sp,f
  2285  04A3                     l2607:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2288  04A3  0834               	movf	sprintf@c,w
  2289  04A4  00AB               	movwf	??_sprintf
  2290  04A5  082B               	movf	??_sprintf,w
  2291  04A6  00B0               	movwf	sprintf@prec
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2294  04A7  2CE3               	goto	l2615
  2295  04A8                     l2609:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2298  04A8  300A               	movlw	10
  2299  04A9  00A3               	movwf	___lwmod@divisor
  2300  04AA  3000               	movlw	0
  2301  04AB  00A4               	movwf	___lwmod@divisor+1
  2302  04AC  0830               	movf	sprintf@prec,w
  2303  04AD  00AB               	movwf	??_sprintf
  2304  04AE  072B               	addwf	??_sprintf,w
  2305  04AF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2306  04B0  0084               	movwf	4
  2307  04B1  120A  118A  276A  120A  118A  	fcall	stringdir
  2308  04B6  00F3               	movwf	___lwdiv@divisor
  2309  04B7  120A  118A  276A  120A  118A  	fcall	stringdir
  2310  04BC  00F4               	movwf	___lwdiv@divisor+1
  2311  04BD  0832               	movf	sprintf@val+1,w
  2312  04BE  00F6               	movwf	___lwdiv@dividend+1
  2313  04BF  0831               	movf	sprintf@val,w
  2314  04C0  00F5               	movwf	___lwdiv@dividend
  2315  04C1  120A  158A  27BA  120A  118A  	fcall	___lwdiv
  2316  04C6  0874               	movf	?___lwdiv+1,w
  2317  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2318  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2319  04C9  00A6               	movwf	___lwmod@dividend+1
  2320  04CA  0873               	movf	?___lwdiv,w
  2321  04CB  00A5               	movwf	___lwmod@dividend
  2322  04CC  120A  158A  26F9  120A  118A  	fcall	___lwmod
  2323  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2324  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2325  04D3  0823               	movf	?___lwmod,w
  2326  04D4  3E30               	addlw	48
  2327  04D5  00AC               	movwf	??_sprintf+1
  2328  04D6  082C               	movf	??_sprintf+1,w
  2329  04D7  00B4               	movwf	sprintf@c
  2330  04D8                     l2611:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2333  04D8  0834               	movf	sprintf@c,w
  2334  04D9  00AB               	movwf	??_sprintf
  2335  04DA  0833               	movf	sprintf@sp,w
  2336  04DB  0084               	movwf	4
  2337  04DC  082B               	movf	??_sprintf,w
  2338  04DD  1383               	bcf	3,7	;select IRP bank0
  2339  04DE  0080               	movwf	0
  2340  04DF                     l2613:
  2341  04DF  3001               	movlw	1
  2342  04E0  00AB               	movwf	??_sprintf
  2343  04E1  082B               	movf	??_sprintf,w
  2344  04E2  07B3               	addwf	sprintf@sp,f
  2345  04E3                     l2615:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2348  04E3  30FF               	movlw	255
  2349  04E4  00AB               	movwf	??_sprintf
  2350  04E5  082B               	movf	??_sprintf,w
  2351  04E6  07B0               	addwf	sprintf@prec,f
  2352  04E7  0A30               	incf	sprintf@prec,w
  2353  04E8  1D03               	btfss	3,2
  2354  04E9  2CEB               	goto	u2031
  2355  04EA  2CEC               	goto	u2030
  2356  04EB                     u2031:
  2357  04EB  2CA8               	goto	l2609
  2358  04EC                     u2030:
  2359  04EC                     l2617:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2362  04EC  3001               	movlw	1
  2363  04ED  07A8               	addwf	sprintf@f,f
  2364  04EE  30FF               	movlw	-1
  2365  04EF  0728               	addwf	sprintf@f,w
  2366  04F0  0084               	movwf	4
  2367  04F1  120A  118A  276A  120A  118A  	fcall	stringdir
  2368  04F6  00AB               	movwf	??_sprintf
  2369  04F7  082B               	movf	??_sprintf,w
  2370  04F8  00B4               	movwf	sprintf@c
  2371  04F9  0834               	movf	sprintf@c,w
  2372  04FA  1D03               	btfss	3,2
  2373  04FB  2CFD               	goto	u2041
  2374  04FC  2CFE               	goto	u2040
  2375  04FD                     u2041:
  2376  04FD  2C21               	goto	l2567
  2377  04FE                     u2040:
  2378  04FE                     l2619:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2381  04FE  0833               	movf	sprintf@sp,w
  2382  04FF  0084               	movwf	4
  2383  0500  1383               	bcf	3,7	;select IRP bank0
  2384  0501  0180               	clrf	0
  2385  0502                     l393:
  2386  0502  0008               	return
  2387  0503                     __end_of_sprintf:
  2388                           
  2389                           	psect	text2
  2390  0EF9                     __ptext2:	
  2391 ;; *************** function ___lwmod *****************
  2392 ;; Defined at:
  2393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  divisor         2    3[BANK0 ] unsigned int 
  2396 ;;  dividend        2    5[BANK0 ] unsigned int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  counter         1    7[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    3[BANK0 ] unsigned int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       4       0       0       0
  2409 ;;      Locals:         0       1       0       0       0
  2410 ;;      Temps:          1       0       0       0       0
  2411 ;;      Totals:         1       5       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_sprintf
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function ___lwmod
  2424  0EF9                     ___lwmod:
  2425  0EF9                     l2493:	
  2426                           ;incstack = 0
  2427                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2428                           
  2429  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0EFB  0823               	movf	___lwmod@divisor,w
  2432  0EFC  0424               	iorwf	___lwmod@divisor+1,w
  2433  0EFD  1903               	btfsc	3,2
  2434  0EFE  2F00               	goto	u1921
  2435  0EFF  2F01               	goto	u1920
  2436  0F00                     u1921:
  2437  0F00  2F30               	goto	l2511
  2438  0F01                     u1920:
  2439  0F01                     l2495:
  2440  0F01  01A7               	clrf	___lwmod@counter
  2441  0F02  0AA7               	incf	___lwmod@counter,f
  2442  0F03  2F0F               	goto	l2501
  2443  0F04                     l2497:
  2444  0F04  3001               	movlw	1
  2445  0F05                     u1935:
  2446  0F05  1003               	clrc
  2447  0F06  0DA3               	rlf	___lwmod@divisor,f
  2448  0F07  0DA4               	rlf	___lwmod@divisor+1,f
  2449  0F08  3EFF               	addlw	-1
  2450  0F09  1D03               	skipz
  2451  0F0A  2F05               	goto	u1935
  2452  0F0B                     l2499:
  2453  0F0B  3001               	movlw	1
  2454  0F0C  00F8               	movwf	??___lwmod
  2455  0F0D  0878               	movf	??___lwmod,w
  2456  0F0E  07A7               	addwf	___lwmod@counter,f
  2457  0F0F                     l2501:
  2458  0F0F  1FA4               	btfss	___lwmod@divisor+1,7
  2459  0F10  2F12               	goto	u1941
  2460  0F11  2F13               	goto	u1940
  2461  0F12                     u1941:
  2462  0F12  2F04               	goto	l2497
  2463  0F13                     u1940:
  2464  0F13                     l2503:
  2465  0F13  0824               	movf	___lwmod@divisor+1,w
  2466  0F14  0226               	subwf	___lwmod@dividend+1,w
  2467  0F15  1D03               	skipz
  2468  0F16  2F19               	goto	u1955
  2469  0F17  0823               	movf	___lwmod@divisor,w
  2470  0F18  0225               	subwf	___lwmod@dividend,w
  2471  0F19                     u1955:
  2472  0F19  1C03               	skipc
  2473  0F1A  2F1C               	goto	u1951
  2474  0F1B  2F1D               	goto	u1950
  2475  0F1C                     u1951:
  2476  0F1C  2F23               	goto	l2507
  2477  0F1D                     u1950:
  2478  0F1D                     l2505:
  2479  0F1D  0823               	movf	___lwmod@divisor,w
  2480  0F1E  02A5               	subwf	___lwmod@dividend,f
  2481  0F1F  0824               	movf	___lwmod@divisor+1,w
  2482  0F20  1C03               	skipc
  2483  0F21  03A6               	decf	___lwmod@dividend+1,f
  2484  0F22  02A6               	subwf	___lwmod@dividend+1,f
  2485  0F23                     l2507:
  2486  0F23  3001               	movlw	1
  2487  0F24                     u1965:
  2488  0F24  1003               	clrc
  2489  0F25  0CA4               	rrf	___lwmod@divisor+1,f
  2490  0F26  0CA3               	rrf	___lwmod@divisor,f
  2491  0F27  3EFF               	addlw	-1
  2492  0F28  1D03               	skipz
  2493  0F29  2F24               	goto	u1965
  2494  0F2A                     l2509:
  2495  0F2A  3001               	movlw	1
  2496  0F2B  02A7               	subwf	___lwmod@counter,f
  2497  0F2C  1D03               	btfss	3,2
  2498  0F2D  2F2F               	goto	u1971
  2499  0F2E  2F30               	goto	u1970
  2500  0F2F                     u1971:
  2501  0F2F  2F13               	goto	l2503
  2502  0F30                     u1970:
  2503  0F30                     l2511:
  2504  0F30  0826               	movf	___lwmod@dividend+1,w
  2505  0F31  00A4               	movwf	?___lwmod+1
  2506  0F32  0825               	movf	___lwmod@dividend,w
  2507  0F33  00A3               	movwf	?___lwmod
  2508  0F34                     l679:
  2509  0F34  0008               	return
  2510  0F35                     __end_of___lwmod:
  2511                           
  2512                           	psect	text3
  2513  0FBA                     __ptext3:	
  2514 ;; *************** function ___lwdiv *****************
  2515 ;; Defined at:
  2516 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  divisor         2    3[COMMON] unsigned int 
  2519 ;;  dividend        2    5[COMMON] unsigned int 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  quotient        2    1[BANK0 ] unsigned int 
  2522 ;;  counter         1    0[BANK0 ] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    3[COMMON] unsigned int 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         4       0       0       0       0
  2533 ;;      Locals:         0       3       0       0       0
  2534 ;;      Temps:          1       0       0       0       0
  2535 ;;      Totals:         5       3       0       0       0
  2536 ;;Total ram usage:        8 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    1
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_sprintf
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function ___lwdiv
  2548  0FBA                     ___lwdiv:
  2549  0FBA                     l2467:	
  2550                           ;incstack = 0
  2551                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2552                           
  2553  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0FBC  01A1               	clrf	___lwdiv@quotient
  2556  0FBD  01A2               	clrf	___lwdiv@quotient+1
  2557  0FBE                     l2469:
  2558  0FBE  0873               	movf	___lwdiv@divisor,w
  2559  0FBF  0474               	iorwf	___lwdiv@divisor+1,w
  2560  0FC0  1903               	btfsc	3,2
  2561  0FC1  2FC3               	goto	u1851
  2562  0FC2  2FC4               	goto	u1850
  2563  0FC3                     u1851:
  2564  0FC3  2FFB               	goto	l2489
  2565  0FC4                     u1850:
  2566  0FC4                     l2471:
  2567  0FC4  01A0               	clrf	___lwdiv@counter
  2568  0FC5  0AA0               	incf	___lwdiv@counter,f
  2569  0FC6  2FD2               	goto	l2477
  2570  0FC7                     l2473:
  2571  0FC7  3001               	movlw	1
  2572  0FC8                     u1865:
  2573  0FC8  1003               	clrc
  2574  0FC9  0DF3               	rlf	___lwdiv@divisor,f
  2575  0FCA  0DF4               	rlf	___lwdiv@divisor+1,f
  2576  0FCB  3EFF               	addlw	-1
  2577  0FCC  1D03               	skipz
  2578  0FCD  2FC8               	goto	u1865
  2579  0FCE                     l2475:
  2580  0FCE  3001               	movlw	1
  2581  0FCF  00F7               	movwf	??___lwdiv
  2582  0FD0  0877               	movf	??___lwdiv,w
  2583  0FD1  07A0               	addwf	___lwdiv@counter,f
  2584  0FD2                     l2477:
  2585  0FD2  1FF4               	btfss	___lwdiv@divisor+1,7
  2586  0FD3  2FD5               	goto	u1871
  2587  0FD4  2FD6               	goto	u1870
  2588  0FD5                     u1871:
  2589  0FD5  2FC7               	goto	l2473
  2590  0FD6                     u1870:
  2591  0FD6                     l2479:
  2592  0FD6  3001               	movlw	1
  2593  0FD7                     u1885:
  2594  0FD7  1003               	clrc
  2595  0FD8  0DA1               	rlf	___lwdiv@quotient,f
  2596  0FD9  0DA2               	rlf	___lwdiv@quotient+1,f
  2597  0FDA  3EFF               	addlw	-1
  2598  0FDB  1D03               	skipz
  2599  0FDC  2FD7               	goto	u1885
  2600  0FDD  0874               	movf	___lwdiv@divisor+1,w
  2601  0FDE  0276               	subwf	___lwdiv@dividend+1,w
  2602  0FDF  1D03               	skipz
  2603  0FE0  2FE3               	goto	u1895
  2604  0FE1  0873               	movf	___lwdiv@divisor,w
  2605  0FE2  0275               	subwf	___lwdiv@dividend,w
  2606  0FE3                     u1895:
  2607  0FE3  1C03               	skipc
  2608  0FE4  2FE6               	goto	u1891
  2609  0FE5  2FE7               	goto	u1890
  2610  0FE6                     u1891:
  2611  0FE6  2FEE               	goto	l2485
  2612  0FE7                     u1890:
  2613  0FE7                     l2481:
  2614  0FE7  0873               	movf	___lwdiv@divisor,w
  2615  0FE8  02F5               	subwf	___lwdiv@dividend,f
  2616  0FE9  0874               	movf	___lwdiv@divisor+1,w
  2617  0FEA  1C03               	skipc
  2618  0FEB  03F6               	decf	___lwdiv@dividend+1,f
  2619  0FEC  02F6               	subwf	___lwdiv@dividend+1,f
  2620  0FED                     l2483:
  2621  0FED  1421               	bsf	___lwdiv@quotient,0
  2622  0FEE                     l2485:
  2623  0FEE  3001               	movlw	1
  2624  0FEF                     u1905:
  2625  0FEF  1003               	clrc
  2626  0FF0  0CF4               	rrf	___lwdiv@divisor+1,f
  2627  0FF1  0CF3               	rrf	___lwdiv@divisor,f
  2628  0FF2  3EFF               	addlw	-1
  2629  0FF3  1D03               	skipz
  2630  0FF4  2FEF               	goto	u1905
  2631  0FF5                     l2487:
  2632  0FF5  3001               	movlw	1
  2633  0FF6  02A0               	subwf	___lwdiv@counter,f
  2634  0FF7  1D03               	btfss	3,2
  2635  0FF8  2FFA               	goto	u1911
  2636  0FF9  2FFB               	goto	u1910
  2637  0FFA                     u1911:
  2638  0FFA  2FD6               	goto	l2479
  2639  0FFB                     u1910:
  2640  0FFB                     l2489:
  2641  0FFB  0822               	movf	___lwdiv@quotient+1,w
  2642  0FFC  00F4               	movwf	?___lwdiv+1
  2643  0FFD  0821               	movf	___lwdiv@quotient,w
  2644  0FFE  00F3               	movwf	?___lwdiv
  2645  0FFF                     l669:
  2646  0FFF  0008               	return
  2647  1000                     __end_of___lwdiv:
  2648                           
  2649                           	psect	text4
  2650  056C                     __ptext4:	
  2651 ;; *************** function _setup *****************
  2652 ;; Defined at:
  2653 ;;		line 117 in file "Master_Test.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          0       1       0       0       0
  2670 ;;      Totals:         0       1       0       0       0
  2671 ;;Total ram usage:        1 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    3
  2674 ;; This function calls:
  2675 ;;		_ADC_CONFIG
  2676 ;;		_I2C_Master_Init
  2677 ;;		_Lcd_Clear
  2678 ;;		_Lcd_Init
  2679 ;;		_Lcd_Set_Cursor
  2680 ;;		_Lcd_Write_String
  2681 ;;		_USART_CONFIG
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _setup
  2689  056C                     _setup:
  2690  056C                     l2517:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2693                           
  2694                           
  2695                           ;Master_Test.c: 118:     ANSEL = 0x01;
  2696  056C  3001               	movlw	1
  2697  056D  1683               	bsf	3,5	;RP0=1, select bank3
  2698  056E  1703               	bsf	3,6	;RP1=1, select bank3
  2699  056F  0088               	movwf	8	;volatile
  2700  0570                     l2519:
  2701                           
  2702                           ;Master_Test.c: 119:     ANSELH = 0x00;
  2703  0570  0189               	clrf	9	;volatile
  2704  0571                     l2521:
  2705                           
  2706                           ;Master_Test.c: 121:     TRISA = 0x01;
  2707  0571  3001               	movlw	1
  2708  0572  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0573  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0574  0085               	movwf	5	;volatile
  2711  0575                     l2523:
  2712                           
  2713                           ;Master_Test.c: 122:     TRISB = 0x03;
  2714  0575  3003               	movlw	3
  2715  0576  0086               	movwf	6	;volatile
  2716  0577                     l2525:
  2717                           
  2718                           ;Master_Test.c: 123:     TRISC = 0x00;
  2719  0577  0187               	clrf	7	;volatile
  2720  0578                     l2527:
  2721                           
  2722                           ;Master_Test.c: 124:     TRISD = 0x00;
  2723  0578  0188               	clrf	8	;volatile
  2724  0579                     l2529:
  2725                           
  2726                           ;Master_Test.c: 126:     OSCCONbits.IRCF = 0B111;
  2727  0579  3070               	movlw	112
  2728  057A  048F               	iorwf	15,f	;volatile
  2729  057B                     l2531:
  2730                           
  2731                           ;Master_Test.c: 127:     OSCCONbits.OSTS = 0;
  2732  057B  118F               	bcf	15,3	;volatile
  2733  057C                     l2533:
  2734                           
  2735                           ;Master_Test.c: 128:     OSCCONbits.SCS = 1;
  2736  057C  140F               	bsf	15,0	;volatile
  2737  057D                     l2535:
  2738                           
  2739                           ;Master_Test.c: 130:     ADC_CONFIG(8);
  2740  057D  3008               	movlw	8
  2741  057E  00F3               	movwf	ADC_CONFIG@frec
  2742  057F  3000               	movlw	0
  2743  0580  00F4               	movwf	ADC_CONFIG@frec+1
  2744  0581  120A  158A  2665  120A  118A  	fcall	_ADC_CONFIG
  2745  0586                     l2537:
  2746                           
  2747                           ;Master_Test.c: 131:     PIE1bits.ADIE = 1;
  2748  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0588  170C               	bsf	12,6	;volatile
  2751  0589                     l2539:
  2752                           
  2753                           ;Master_Test.c: 132:     INTCONbits.PEIE = 1;
  2754  0589  170B               	bsf	11,6	;volatile
  2755  058A                     l2541:
  2756                           
  2757                           ;Master_Test.c: 133:     INTCONbits.GIE = 1;
  2758  058A  178B               	bsf	11,7	;volatile
  2759  058B                     l2543:
  2760                           
  2761                           ;Master_Test.c: 135:     USART_CONFIG(8 ,1, 1);
  2762  058B  3008               	movlw	8
  2763  058C  00F3               	movwf	USART_CONFIG@frec
  2764  058D  3000               	movlw	0
  2765  058E  00F4               	movwf	USART_CONFIG@frec+1
  2766  058F  3001               	movlw	1
  2767  0590  00F5               	movwf	USART_CONFIG@tr
  2768  0591  3000               	movlw	0
  2769  0592  00F6               	movwf	USART_CONFIG@tr+1
  2770  0593  3001               	movlw	1
  2771  0594  00F7               	movwf	USART_CONFIG@rc
  2772  0595  3000               	movlw	0
  2773  0596  00F8               	movwf	USART_CONFIG@rc+1
  2774  0597  120A  118A  27AB  120A  118A  	fcall	_USART_CONFIG
  2775  059C                     l2545:
  2776                           
  2777                           ;Master_Test.c: 137:     INTCONbits.RBIE = 1;
  2778  059C  158B               	bsf	11,3	;volatile
  2779  059D                     l2547:
  2780                           
  2781                           ;Master_Test.c: 138:     WPUB = 0x03;
  2782  059D  3003               	movlw	3
  2783  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2784  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2785  05A0  0095               	movwf	21	;volatile
  2786  05A1                     l2549:
  2787                           
  2788                           ;Master_Test.c: 139:     IOCB = 0x03;
  2789  05A1  3003               	movlw	3
  2790  05A2  0096               	movwf	22	;volatile
  2791  05A3                     l2551:
  2792                           
  2793                           ;Master_Test.c: 140:     OPTION_REGbits.nRBPU = 0;
  2794  05A3  1381               	bcf	1,7	;volatile
  2795  05A4                     l2553:
  2796                           
  2797                           ;Master_Test.c: 142:     I2C_Master_Init(100000);
  2798  05A4  3000               	movlw	0
  2799  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2800  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2801  05A7  00AB               	movwf	I2C_Master_Init@c+3
  2802  05A8  3001               	movlw	1
  2803  05A9  00AA               	movwf	I2C_Master_Init@c+2
  2804  05AA  3086               	movlw	134
  2805  05AB  00A9               	movwf	I2C_Master_Init@c+1
  2806  05AC  30A0               	movlw	160
  2807  05AD  00A8               	movwf	I2C_Master_Init@c
  2808  05AE  120A  158A  26BF  120A  118A  	fcall	_I2C_Master_Init
  2809  05B3                     l2555:
  2810                           
  2811                           ;Master_Test.c: 143:     Lcd_Init();
  2812  05B3  120A  118A  26A4  120A  118A  	fcall	_Lcd_Init
  2813  05B8                     l2557:
  2814                           
  2815                           ;Master_Test.c: 144:     Lcd_Clear();
  2816  05B8  120A  158A  25CC  120A  118A  	fcall	_Lcd_Clear
  2817  05BD                     l2559:
  2818                           
  2819                           ;Master_Test.c: 145:     Lcd_Set_Cursor(1,0);
  2820  05BD  01F6               	clrf	Lcd_Set_Cursor@b
  2821  05BE  3001               	movlw	1
  2822  05BF  120A  158A  2622  120A  118A  	fcall	_Lcd_Set_Cursor
  2823  05C4                     l2561:
  2824                           
  2825                           ;Master_Test.c: 146:     Lcd_Write_String("Tem Luz t(s) TO");
  2826  05C4  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2827  05C5  00F5               	movwf	Lcd_Write_String@a
  2828  05C6  3080               	movlw	128
  2829  05C7  00F6               	movwf	Lcd_Write_String@a+1
  2830  05C8  120A  158A  2776  120A  118A  	fcall	_Lcd_Write_String
  2831  05CD                     l2563:
  2832                           
  2833                           ;Master_Test.c: 148:     presion2 = 110;
  2834  05CD  306E               	movlw	110
  2835  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2836  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2837  05D0  00B0               	movwf	??_setup
  2838  05D1  0830               	movf	??_setup,w
  2839  05D2  00C3               	movwf	_presion2
  2840  05D3                     l209:
  2841  05D3  0008               	return
  2842  05D4                     __end_of_setup:
  2843                           
  2844                           	psect	text5
  2845  07AB                     __ptext5:	
  2846 ;; *************** function _USART_CONFIG *****************
  2847 ;; Defined at:
  2848 ;;		line 48 in file "Master_Test.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  frec            2    3[COMMON] int 
  2851 ;;  tr              2    5[COMMON] int 
  2852 ;;  rc              2    7[COMMON] int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         6       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         6       0       0       0       0
  2868 ;;Total ram usage:        6 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_setup
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _USART_CONFIG
  2880  07AB                     _USART_CONFIG:
  2881  07AB                     l1685:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  2884                           
  2885                           
  2886                           ;Master_Test.c: 49:     RCSTAbits.SPEN = 1;
  2887  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2888  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2889  07AD  1798               	bsf	24,7	;volatile
  2890                           
  2891                           ;Master_Test.c: 50:     TXSTAbits.SYNC = 0;
  2892  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  2893  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  2894  07B0  1218               	bcf	24,4	;volatile
  2895                           
  2896                           ;Master_Test.c: 51:     TXSTAbits.TX9 = 0;
  2897  07B1  1318               	bcf	24,6	;volatile
  2898                           
  2899                           ;Master_Test.c: 52:     RCSTAbits.RX9 = 0;
  2900  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2901  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2902  07B4  1318               	bcf	24,6	;volatile
  2903                           
  2904                           ;Master_Test.c: 53:     switch(frec){
  2905  07B5  2FC8               	goto	l1701
  2906  07B6                     l1687:
  2907                           
  2908                           ;Master_Test.c: 55:             SPBRG = 25;
  2909  07B6  3019               	movlw	25
  2910  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  2911  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  2912  07B9  0099               	movwf	25	;volatile
  2913  07BA                     l1689:
  2914                           
  2915                           ;Master_Test.c: 56:             TXSTAbits.BRGH = 1;
  2916  07BA  1518               	bsf	24,2	;volatile
  2917  07BB                     l1691:
  2918                           
  2919                           ;Master_Test.c: 57:             BAUDCTLbits.BRG16 = 0;
  2920  07BB  1683               	bsf	3,5	;RP0=1, select bank3
  2921  07BC  1703               	bsf	3,6	;RP1=1, select bank3
  2922  07BD  1187               	bcf	7,3	;volatile
  2923                           
  2924                           ;Master_Test.c: 58:             break;
  2925  07BE  2FD5               	goto	l1703
  2926  07BF                     l1693:
  2927                           
  2928                           ;Master_Test.c: 60:             SPBRG = 12;
  2929  07BF  300C               	movlw	12
  2930  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  2931  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  2932  07C2  0099               	movwf	25	;volatile
  2933  07C3                     l1695:
  2934                           
  2935                           ;Master_Test.c: 61:             TXSTAbits.BRGH = 0;
  2936  07C3  1118               	bcf	24,2	;volatile
  2937  07C4                     l1697:
  2938                           
  2939                           ;Master_Test.c: 62:             BAUDCTLbits.BRG16 = 0;
  2940  07C4  1683               	bsf	3,5	;RP0=1, select bank3
  2941  07C5  1703               	bsf	3,6	;RP1=1, select bank3
  2942  07C6  1187               	bcf	7,3	;volatile
  2943                           
  2944                           ;Master_Test.c: 63:             break;
  2945  07C7  2FD5               	goto	l1703
  2946  07C8                     l1701:
  2947                           
  2948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2949                           ; Switch size 1, requested type "simple"
  2950                           ; Number of cases is 1, Range of values is 0 to 0
  2951                           ; switch strategies available:
  2952                           ; Name         Instructions Cycles
  2953                           ; simple_byte            4     3 (average)
  2954                           ; direct_byte           11     8 (fixed)
  2955                           ; jumptable            260     6 (fixed)
  2956                           ;	Chosen strategy is simple_byte
  2957  07C8  0874               	movf	USART_CONFIG@frec+1,w
  2958  07C9  3A00               	xorlw	0	; case 0
  2959  07CA  1903               	skipnz
  2960  07CB  2FCD               	goto	l2843
  2961  07CC  2FD5               	goto	l1703
  2962  07CD                     l2843:
  2963                           
  2964                           ; Switch size 1, requested type "simple"
  2965                           ; Number of cases is 2, Range of values is 4 to 8
  2966                           ; switch strategies available:
  2967                           ; Name         Instructions Cycles
  2968                           ; simple_byte            7     4 (average)
  2969                           ; direct_byte           26    11 (fixed)
  2970                           ; jumptable            263     9 (fixed)
  2971                           ;	Chosen strategy is simple_byte
  2972  07CD  0873               	movf	USART_CONFIG@frec,w
  2973  07CE  3A04               	xorlw	4	; case 4
  2974  07CF  1903               	skipnz
  2975  07D0  2FB6               	goto	l1687
  2976  07D1  3A0C               	xorlw	12	; case 8
  2977  07D2  1903               	skipnz
  2978  07D3  2FBF               	goto	l1693
  2979  07D4  2FD5               	goto	l1703
  2980  07D5                     l1703:
  2981                           
  2982                           ;Master_Test.c: 65:     if(tr==1){
  2983  07D5  0375               	decf	USART_CONFIG@tr,w
  2984  07D6  0476               	iorwf	USART_CONFIG@tr+1,w
  2985  07D7  1D03               	btfss	3,2
  2986  07D8  2FDA               	goto	u891
  2987  07D9  2FDB               	goto	u890
  2988  07DA                     u891:
  2989  07DA  2FDF               	goto	l179
  2990  07DB                     u890:
  2991  07DB                     l1705:
  2992                           
  2993                           ;Master_Test.c: 66:         TXEN = 1;
  2994  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  2995  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  2996  07DD  1698               	bsf	24,5	;volatile
  2997                           
  2998                           ;Master_Test.c: 67:     }
  2999  07DE  2FE2               	goto	l1707
  3000  07DF                     l179:	
  3001                           ;Master_Test.c: 68:     else{
  3002                           
  3003                           
  3004                           ;Master_Test.c: 69:         TXEN = 0;
  3005  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  3006  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  3007  07E1  1298               	bcf	24,5	;volatile
  3008  07E2                     l1707:
  3009                           
  3010                           ;Master_Test.c: 71:     if(rc == 1){
  3011  07E2  0377               	decf	USART_CONFIG@rc,w
  3012  07E3  0478               	iorwf	USART_CONFIG@rc+1,w
  3013  07E4  1D03               	btfss	3,2
  3014  07E5  2FE7               	goto	u901
  3015  07E6  2FE8               	goto	u900
  3016  07E7                     u901:
  3017  07E7  2FF2               	goto	l181
  3018  07E8                     u900:
  3019  07E8                     l1709:
  3020                           
  3021                           ;Master_Test.c: 72:         RCSTAbits.CREN = 1;
  3022  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3023  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3024  07EA  1618               	bsf	24,4	;volatile
  3025                           
  3026                           ;Master_Test.c: 73:         PIE1bits.RCIE = 1;
  3027  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  3028  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  3029  07ED  168C               	bsf	12,5	;volatile
  3030                           
  3031                           ;Master_Test.c: 74:         PIR1bits.RCIF = 0;
  3032  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  3033  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  3034  07F0  128C               	bcf	12,5	;volatile
  3035                           
  3036                           ;Master_Test.c: 75:     }
  3037  07F1  2FF5               	goto	l183
  3038  07F2                     l181:	
  3039                           ;Master_Test.c: 76:     else{
  3040                           
  3041                           
  3042                           ;Master_Test.c: 77:         RCSTAbits.CREN = 0;
  3043  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  3044  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  3045  07F4  1218               	bcf	24,4	;volatile
  3046  07F5                     l183:
  3047  07F5  0008               	return
  3048  07F6                     __end_of_USART_CONFIG:
  3049                           
  3050                           	psect	text6
  3051  0F76                     __ptext6:	
  3052 ;; *************** function _Lcd_Write_String *****************
  3053 ;; Defined at:
  3054 ;;		line 73 in file "LCD.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  a               2    5[COMMON] PTR unsigned char 
  3057 ;;		 -> STR_13(16), STR_12(13), STR_11(11), STR_10(3), 
  3058 ;;		 -> STR_9(3), buffer(1), STR_1(16), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  i               2    7[COMMON] int 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         2       0       0       0       0
  3071 ;;      Locals:         2       0       0       0       0
  3072 ;;      Temps:          0       3       0       0       0
  3073 ;;      Totals:         4       3       0       0       0
  3074 ;;Total ram usage:        7 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    2
  3077 ;; This function calls:
  3078 ;;		_Lcd_Write_Char
  3079 ;; This function is called by:
  3080 ;;		_setup
  3081 ;;		_main
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _Lcd_Write_String
  3087  0F76                     _Lcd_Write_String:
  3088  0F76                     l2377:	
  3089                           ;incstack = 0
  3090                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3091                           
  3092                           
  3093                           ;LCD.c: 74:     int i;;LCD.c: 75:     for (i = 0; a[i] != '\0'; i++)
  3094  0F76  01F7               	clrf	Lcd_Write_String@i
  3095  0F77  01F8               	clrf	Lcd_Write_String@i+1
  3096  0F78  2F9B               	goto	l2383
  3097  0F79                     l2379:
  3098                           
  3099                           ;LCD.c: 76:         Lcd_Write_Char(a[i]);
  3100  0F79  0877               	movf	Lcd_Write_String@i,w
  3101  0F7A  0775               	addwf	Lcd_Write_String@a,w
  3102  0F7B  00A1               	movwf	??_Lcd_Write_String+1
  3103  0F7C  0876               	movf	Lcd_Write_String@a+1,w
  3104  0F7D  00A0               	movwf	??_Lcd_Write_String
  3105  0F7E  1803               	skipnc
  3106  0F7F  0AA0               	incf	??_Lcd_Write_String,f
  3107  0F80  1FF7               	btfss	Lcd_Write_String@i,7
  3108  0F81  2F83               	goto	u1630
  3109  0F82  03A0               	decf	??_Lcd_Write_String,f
  3110  0F83                     u1630:
  3111  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0F85  0820               	movf	??_Lcd_Write_String,w
  3114  0F86  00A2               	movwf	??_Lcd_Write_String+2
  3115  0F87  0822               	movf	??_Lcd_Write_String+2,w
  3116  0F88  00FF               	movwf	btemp+1
  3117  0F89  0821               	movf	??_Lcd_Write_String+1,w
  3118  0F8A  0084               	movwf	4
  3119  0F8B  120A  118A  2760  120A  158A  	fcall	stringtab
  3120  0F90  120A  158A  25E7  120A  158A  	fcall	_Lcd_Write_Char
  3121  0F95                     l2381:
  3122  0F95  3001               	movlw	1
  3123  0F96  07F7               	addwf	Lcd_Write_String@i,f
  3124  0F97  1803               	skipnc
  3125  0F98  0AF8               	incf	Lcd_Write_String@i+1,f
  3126  0F99  3000               	movlw	0
  3127  0F9A  07F8               	addwf	Lcd_Write_String@i+1,f
  3128  0F9B                     l2383:
  3129  0F9B  0877               	movf	Lcd_Write_String@i,w
  3130  0F9C  0775               	addwf	Lcd_Write_String@a,w
  3131  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0F9F  00A1               	movwf	??_Lcd_Write_String+1
  3134  0FA0  0876               	movf	Lcd_Write_String@a+1,w
  3135  0FA1  00A0               	movwf	??_Lcd_Write_String
  3136  0FA2  1803               	skipnc
  3137  0FA3  0AA0               	incf	??_Lcd_Write_String,f
  3138  0FA4  1FF7               	btfss	Lcd_Write_String@i,7
  3139  0FA5  2FA7               	goto	u1640
  3140  0FA6  03A0               	decf	??_Lcd_Write_String,f
  3141  0FA7                     u1640:
  3142  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0FA9  0820               	movf	??_Lcd_Write_String,w
  3145  0FAA  00A2               	movwf	??_Lcd_Write_String+2
  3146  0FAB  0822               	movf	??_Lcd_Write_String+2,w
  3147  0FAC  00FF               	movwf	btemp+1
  3148  0FAD  0821               	movf	??_Lcd_Write_String+1,w
  3149  0FAE  0084               	movwf	4
  3150  0FAF  120A  118A  2760  120A  158A  	fcall	stringtab
  3151  0FB4  3A00               	xorlw	0
  3152  0FB5  1D03               	skipz
  3153  0FB6  2FB8               	goto	u1651
  3154  0FB7  2FB9               	goto	u1650
  3155  0FB8                     u1651:
  3156  0FB8  2F79               	goto	l2379
  3157  0FB9                     u1650:
  3158  0FB9                     l259:
  3159  0FB9  0008               	return
  3160  0FBA                     __end_of_Lcd_Write_String:
  3161                           
  3162                           	psect	text7
  3163  0DE7                     __ptext7:	
  3164 ;; *************** function _Lcd_Write_Char *****************
  3165 ;; Defined at:
  3166 ;;		line 59 in file "LCD.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  a               1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  a               1    4[COMMON] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       0       0       0       0
  3181 ;;      Locals:         1       0       0       0       0
  3182 ;;      Temps:          1       0       0       0       0
  3183 ;;      Totals:         2       0       0       0       0
  3184 ;;Total ram usage:        2 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_Lcd_Write_String
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _Lcd_Write_Char
  3196  0DE7                     _Lcd_Write_Char:
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Lcd_Write_Char: [wreg]
  3200                           ;Lcd_Write_Char@a stored from wreg
  3201  0DE7  00F4               	movwf	Lcd_Write_Char@a
  3202  0DE8                     l2333:
  3203                           
  3204                           ;LCD.c: 62:     RC2 = 1;
  3205  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0DEA  1507               	bsf	7,2	;volatile
  3208  0DEB                     l2335:
  3209                           
  3210                           ;LCD.c: 63:     PORTD = a;
  3211  0DEB  0874               	movf	Lcd_Write_Char@a,w
  3212  0DEC  0088               	movwf	8	;volatile
  3213  0DED                     l2337:
  3214                           
  3215                           ;LCD.c: 64:     RC1 = 1;
  3216  0DED  1487               	bsf	7,1	;volatile
  3217                           
  3218                           ;LCD.c: 65:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3219  0DEE  301A               	movlw	26
  3220  0DEF  00F3               	movwf	??_Lcd_Write_Char
  3221  0DF0                     u2177:
  3222  0DF0  0BF3               	decfsz	??_Lcd_Write_Char,f
  3223  0DF1  2DF0               	goto	u2177
  3224  0DF2  0000               	nop
  3225  0DF3                     l2339:
  3226                           
  3227                           ;LCD.c: 70:     RC1 = 0;
  3228  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0DF5  1087               	bcf	7,1	;volatile
  3231  0DF6                     l253:
  3232  0DF6  0008               	return
  3233  0DF7                     __end_of_Lcd_Write_Char:
  3234                           
  3235                           	psect	text8
  3236  0E22                     __ptext8:	
  3237 ;; *************** function _Lcd_Set_Cursor *****************
  3238 ;; Defined at:
  3239 ;;		line 30 in file "LCD.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  a               1    wreg     unsigned char 
  3242 ;;  b               1    6[COMMON] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  a               1    7[COMMON] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         1       0       0       0       0
  3255 ;;      Locals:         1       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         2       0       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		_Lcd_Cmd
  3263 ;; This function is called by:
  3264 ;;		_setup
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _Lcd_Set_Cursor
  3271  0E22                     _Lcd_Set_Cursor:
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3275                           ;Lcd_Set_Cursor@a stored from wreg
  3276  0E22  00F7               	movwf	Lcd_Set_Cursor@a
  3277  0E23                     l1771:
  3278                           
  3279                           ;LCD.c: 31:     if (a == 1){
  3280  0E23  0377               	decf	Lcd_Set_Cursor@a,w
  3281  0E24  1D03               	btfss	3,2
  3282  0E25  2E27               	goto	u911
  3283  0E26  2E28               	goto	u910
  3284  0E27                     u911:
  3285  0E27  2E31               	goto	l1775
  3286  0E28                     u910:
  3287  0E28                     l1773:
  3288                           
  3289                           ;LCD.c: 32:         Lcd_Cmd((b & 0x0F)|0x80);
  3290  0E28  0876               	movf	Lcd_Set_Cursor@b,w
  3291  0E29  390F               	andlw	15
  3292  0E2A  3880               	iorlw	128
  3293  0E2B  120A  158A  25F7  120A  158A  	fcall	_Lcd_Cmd
  3294                           
  3295                           ;LCD.c: 33:     }
  3296  0E30  2E3F               	goto	l247
  3297  0E31                     l1775:
  3298  0E31  3002               	movlw	2
  3299  0E32  0677               	xorwf	Lcd_Set_Cursor@a,w
  3300  0E33  1D03               	btfss	3,2
  3301  0E34  2E36               	goto	u921
  3302  0E35  2E37               	goto	u920
  3303  0E36                     u921:
  3304  0E36  2E3F               	goto	l247
  3305  0E37                     u920:
  3306  0E37                     l1777:
  3307                           
  3308                           ;LCD.c: 35:         Lcd_Cmd((b & 0x0F)|0xC0);
  3309  0E37  0876               	movf	Lcd_Set_Cursor@b,w
  3310  0E38  390F               	andlw	15
  3311  0E39  38C0               	iorlw	192
  3312  0E3A  120A  158A  25F7  120A  158A  	fcall	_Lcd_Cmd
  3313  0E3F                     l247:
  3314  0E3F  0008               	return
  3315  0E40                     __end_of_Lcd_Set_Cursor:
  3316                           
  3317                           	psect	text9
  3318  06A4                     __ptext9:	
  3319 ;; *************** function _Lcd_Init *****************
  3320 ;; Defined at:
  3321 ;;		line 40 in file "LCD.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0
  3337 ;;      Temps:          3       0       0       0       0
  3338 ;;      Totals:         3       0       0       0       0
  3339 ;;Total ram usage:        3 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		_Lcd_Cmd
  3344 ;; This function is called by:
  3345 ;;		_setup
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function _Lcd_Init
  3351  06A4                     _Lcd_Init:
  3352  06A4                     l1741:	
  3353                           ;incstack = 0
  3354                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3355                           
  3356                           
  3357                           ;LCD.c: 41:     PORTD = (0x00);
  3358  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3359  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3360  06A6  0188               	clrf	8	;volatile
  3361  06A7                     l1743:
  3362                           
  3363                           ;LCD.c: 42:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3364  06A7  3034               	movlw	52
  3365  06A8  00F7               	movwf	??_Lcd_Init+1
  3366  06A9  30F1               	movlw	241
  3367  06AA  00F6               	movwf	??_Lcd_Init
  3368  06AB                     u2187:
  3369  06AB  0BF6               	decfsz	??_Lcd_Init,f
  3370  06AC  2EAB               	goto	u2187
  3371  06AD  0BF7               	decfsz	??_Lcd_Init+1,f
  3372  06AE  2EAB               	goto	u2187
  3373  06AF  2EB0               	nop2
  3374  06B0                     l1745:
  3375                           
  3376                           ;LCD.c: 43:     Lcd_Cmd(0x30);
  3377  06B0  3030               	movlw	48
  3378  06B1  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3379  06B6                     l1747:
  3380                           
  3381                           ;LCD.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3382  06B6  300D               	movlw	13
  3383  06B7  00F7               	movwf	??_Lcd_Init+1
  3384  06B8  30FB               	movlw	251
  3385  06B9  00F6               	movwf	??_Lcd_Init
  3386  06BA                     u2197:
  3387  06BA  0BF6               	decfsz	??_Lcd_Init,f
  3388  06BB  2EBA               	goto	u2197
  3389  06BC  0BF7               	decfsz	??_Lcd_Init+1,f
  3390  06BD  2EBA               	goto	u2197
  3391  06BE  2EBF               	nop2
  3392  06BF                     l1749:
  3393                           
  3394                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  3395  06BF  3030               	movlw	48
  3396  06C0  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3397  06C5                     l1751:
  3398                           
  3399                           ;LCD.c: 46:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3400  06C5  301D               	movlw	29
  3401  06C6  00F7               	movwf	??_Lcd_Init+1
  3402  06C7  3091               	movlw	145
  3403  06C8  00F6               	movwf	??_Lcd_Init
  3404  06C9                     u2207:
  3405  06C9  0BF6               	decfsz	??_Lcd_Init,f
  3406  06CA  2EC9               	goto	u2207
  3407  06CB  0BF7               	decfsz	??_Lcd_Init+1,f
  3408  06CC  2EC9               	goto	u2207
  3409  06CD                     l1753:
  3410                           
  3411                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  3412  06CD  3030               	movlw	48
  3413  06CE  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3414  06D3                     l1755:
  3415                           
  3416                           ;LCD.c: 49:     Lcd_Cmd(0x38);
  3417  06D3  3038               	movlw	56
  3418  06D4  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3419  06D9                     l1757:
  3420                           
  3421                           ;LCD.c: 50:     Lcd_Cmd(0x10);
  3422  06D9  3010               	movlw	16
  3423  06DA  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3424  06DF                     l1759:
  3425                           
  3426                           ;LCD.c: 51:     Lcd_Cmd(0x01);
  3427  06DF  3001               	movlw	1
  3428  06E0  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3429  06E5                     l1761:
  3430                           
  3431                           ;LCD.c: 52:     Lcd_Cmd(0x06);
  3432  06E5  3006               	movlw	6
  3433  06E6  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3434  06EB                     l1763:
  3435                           
  3436                           ;LCD.c: 53:     Lcd_Cmd(0x10);
  3437  06EB  3010               	movlw	16
  3438  06EC  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3439  06F1                     l1765:
  3440                           
  3441                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  3442  06F1  300C               	movlw	12
  3443  06F2  120A  158A  25F7  120A  118A  	fcall	_Lcd_Cmd
  3444  06F7                     l1767:
  3445                           
  3446                           ;LCD.c: 55:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3447  06F7  3002               	movlw	2
  3448  06F8  00F8               	movwf	??_Lcd_Init+2
  3449  06F9  3004               	movlw	4
  3450  06FA  00F7               	movwf	??_Lcd_Init+1
  3451  06FB  30BA               	movlw	186
  3452  06FC  00F6               	movwf	??_Lcd_Init
  3453  06FD                     u2217:
  3454  06FD  0BF6               	decfsz	??_Lcd_Init,f
  3455  06FE  2EFD               	goto	u2217
  3456  06FF  0BF7               	decfsz	??_Lcd_Init+1,f
  3457  0700  2EFD               	goto	u2217
  3458  0701  0BF8               	decfsz	??_Lcd_Init+2,f
  3459  0702  2EFD               	goto	u2217
  3460  0703  0000               	nop
  3461  0704                     l250:
  3462  0704  0008               	return
  3463  0705                     __end_of_Lcd_Init:
  3464                           
  3465                           	psect	text10
  3466  0DCC                     __ptext10:	
  3467 ;; *************** function _Lcd_Clear *****************
  3468 ;; Defined at:
  3469 ;;		line 25 in file "LCD.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		_Lcd_Cmd
  3492 ;; This function is called by:
  3493 ;;		_setup
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _Lcd_Clear
  3500  0DCC                     _Lcd_Clear:
  3501  0DCC                     l1769:	
  3502                           ;incstack = 0
  3503                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3504                           
  3505                           
  3506                           ;LCD.c: 26:     Lcd_Cmd(0);
  3507  0DCC  3000               	movlw	0
  3508  0DCD  120A  158A  25F7  120A  158A  	fcall	_Lcd_Cmd
  3509                           
  3510                           ;LCD.c: 27:     Lcd_Cmd(1);
  3511  0DD2  3001               	movlw	1
  3512  0DD3  120A  158A  25F7  120A  158A  	fcall	_Lcd_Cmd
  3513  0DD8                     l241:
  3514  0DD8  0008               	return
  3515  0DD9                     __end_of_Lcd_Clear:
  3516                           
  3517                           	psect	text11
  3518  0DF7                     __ptext11:	
  3519 ;; *************** function _Lcd_Cmd *****************
  3520 ;; Defined at:
  3521 ;;		line 17 in file "LCD.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  a               1    wreg     unsigned char 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  a               1    5[COMMON] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         0       0       0       0       0
  3536 ;;      Locals:         1       0       0       0       0
  3537 ;;      Temps:          2       0       0       0       0
  3538 ;;      Totals:         3       0       0       0       0
  3539 ;;Total ram usage:        3 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_Lcd_Clear
  3546 ;;		_Lcd_Set_Cursor
  3547 ;;		_Lcd_Init
  3548 ;;		_Lcd_Shift_Right
  3549 ;;		_Lcd_Shift_Left
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _Lcd_Cmd
  3555  0DF7                     _Lcd_Cmd:
  3556                           
  3557                           ;incstack = 0
  3558                           ; Regs used in _Lcd_Cmd: [wreg]
  3559                           ;Lcd_Cmd@a stored from wreg
  3560  0DF7  00F5               	movwf	Lcd_Cmd@a
  3561  0DF8                     l1629:
  3562                           
  3563                           ;LCD.c: 18:     RC2 = 0;
  3564  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0DFA  1107               	bcf	7,2	;volatile
  3567  0DFB                     l1631:
  3568                           
  3569                           ;LCD.c: 19:     PORTD = a;
  3570  0DFB  0875               	movf	Lcd_Cmd@a,w
  3571  0DFC  0088               	movwf	8	;volatile
  3572  0DFD                     l1633:
  3573                           
  3574                           ;LCD.c: 20:     RC1 = 1;
  3575  0DFD  1487               	bsf	7,1	;volatile
  3576                           
  3577                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3578  0DFE  300D               	movlw	13
  3579  0DFF  00F4               	movwf	??_Lcd_Cmd+1
  3580  0E00  30FB               	movlw	251
  3581  0E01  00F3               	movwf	??_Lcd_Cmd
  3582  0E02                     u2227:
  3583  0E02  0BF3               	decfsz	??_Lcd_Cmd,f
  3584  0E03  2E02               	goto	u2227
  3585  0E04  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3586  0E05  2E02               	goto	u2227
  3587  0E06  2E07               	nop2
  3588  0E07                     l1635:
  3589                           
  3590                           ;LCD.c: 22:     RC1 = 0;
  3591  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0E09  1087               	bcf	7,1	;volatile
  3594  0E0A                     l238:
  3595  0E0A  0008               	return
  3596  0E0B                     __end_of_Lcd_Cmd:
  3597                           
  3598                           	psect	text12
  3599  0EBF                     __ptext12:	
  3600 ;; *************** function _I2C_Master_Init *****************
  3601 ;; Defined at:
  3602 ;;		line 16 in file "I2C.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  c               4    8[BANK0 ] const unsigned long 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, pclath, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       4       0       0       0
  3617 ;;      Locals:         0       0       0       0       0
  3618 ;;      Temps:          0       4       0       0       0
  3619 ;;      Totals:         0       8       0       0       0
  3620 ;;Total ram usage:        8 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    2
  3623 ;; This function calls:
  3624 ;;		___lldiv
  3625 ;; This function is called by:
  3626 ;;		_setup
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function _I2C_Master_Init
  3632  0EBF                     _I2C_Master_Init:
  3633  0EBF                     l2365:	
  3634                           ;incstack = 0
  3635                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3636                           
  3637                           
  3638                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3639  0EBF  3028               	movlw	40
  3640  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0EC2  0094               	movwf	20	;volatile
  3643  0EC3                     l2367:
  3644                           
  3645                           ;I2C.c: 19:     SSPCON2 = 0;
  3646  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  3648  0EC5  0191               	clrf	17	;volatile
  3649  0EC6                     l2369:
  3650                           
  3651                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3652  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0EC8  0828               	movf	I2C_Master_Init@c,w
  3655  0EC9  00AC               	movwf	??_I2C_Master_Init
  3656  0ECA  0829               	movf	I2C_Master_Init@c+1,w
  3657  0ECB  00AD               	movwf	??_I2C_Master_Init+1
  3658  0ECC  082A               	movf	I2C_Master_Init@c+2,w
  3659  0ECD  00AE               	movwf	??_I2C_Master_Init+2
  3660  0ECE  082B               	movf	I2C_Master_Init@c+3,w
  3661  0ECF  00AF               	movwf	??_I2C_Master_Init+3
  3662  0ED0  3002               	movlw	2
  3663  0ED1                     u1625:
  3664  0ED1  1003               	clrc
  3665  0ED2  0DAC               	rlf	??_I2C_Master_Init,f
  3666  0ED3  0DAD               	rlf	??_I2C_Master_Init+1,f
  3667  0ED4  0DAE               	rlf	??_I2C_Master_Init+2,f
  3668  0ED5  0DAF               	rlf	??_I2C_Master_Init+3,f
  3669  0ED6                     u1620:
  3670  0ED6  3EFF               	addlw	-1
  3671  0ED7  1D03               	skipz
  3672  0ED8  2ED1               	goto	u1625
  3673  0ED9  082F               	movf	??_I2C_Master_Init+3,w
  3674  0EDA  00A3               	movwf	___lldiv@divisor+3
  3675  0EDB  082E               	movf	??_I2C_Master_Init+2,w
  3676  0EDC  00A2               	movwf	___lldiv@divisor+2
  3677  0EDD  082D               	movf	??_I2C_Master_Init+1,w
  3678  0EDE  00A1               	movwf	___lldiv@divisor+1
  3679  0EDF  082C               	movf	??_I2C_Master_Init,w
  3680  0EE0  00A0               	movwf	___lldiv@divisor
  3681  0EE1  3000               	movlw	0
  3682  0EE2  00A7               	movwf	___lldiv@dividend+3
  3683  0EE3  307A               	movlw	122
  3684  0EE4  00A6               	movwf	___lldiv@dividend+2
  3685  0EE5  3012               	movlw	18
  3686  0EE6  00A5               	movwf	___lldiv@dividend+1
  3687  0EE7  3000               	movlw	0
  3688  0EE8  00A4               	movwf	___lldiv@dividend
  3689  0EE9  120A  118A  25D4  120A  158A  	fcall	___lldiv
  3690  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0EF0  0820               	movf	?___lldiv,w
  3693  0EF1  3EFF               	addlw	255
  3694  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3695  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  3696  0EF4  0093               	movwf	19	;volatile
  3697  0EF5                     l2371:
  3698                           
  3699                           ;I2C.c: 21:     SSPSTAT = 0;
  3700  0EF5  0194               	clrf	20	;volatile
  3701  0EF6                     l2373:
  3702                           
  3703                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3704  0EF6  1587               	bsf	7,3	;volatile
  3705  0EF7                     l2375:
  3706                           
  3707                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3708  0EF7  1607               	bsf	7,4	;volatile
  3709  0EF8                     l29:
  3710  0EF8  0008               	return
  3711  0EF9                     __end_of_I2C_Master_Init:
  3712                           
  3713                           	psect	text13
  3714  05D4                     __ptext13:	
  3715 ;; *************** function ___lldiv *****************
  3716 ;; Defined at:
  3717 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  divisor         4    0[BANK0 ] unsigned long 
  3720 ;;  dividend        4    4[BANK0 ] unsigned long 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  quotient        4    4[COMMON] unsigned long 
  3723 ;;  counter         1    8[COMMON] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  4    0[BANK0 ] unsigned long 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       8       0       0       0
  3734 ;;      Locals:         5       0       0       0       0
  3735 ;;      Temps:          1       0       0       0       0
  3736 ;;      Totals:         6       8       0       0       0
  3737 ;;Total ram usage:       14 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_I2C_Master_Init
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function ___lldiv
  3749  05D4                     ___lldiv:
  3750  05D4                     l2341:	
  3751                           ;incstack = 0
  3752                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3753                           
  3754  05D4  3000               	movlw	0
  3755  05D5  00F7               	movwf	___lldiv@quotient+3
  3756  05D6  3000               	movlw	0
  3757  05D7  00F6               	movwf	___lldiv@quotient+2
  3758  05D8  3000               	movlw	0
  3759  05D9  00F5               	movwf	___lldiv@quotient+1
  3760  05DA  3000               	movlw	0
  3761  05DB  00F4               	movwf	___lldiv@quotient
  3762  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3763  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3764  05DE  0823               	movf	___lldiv@divisor+3,w
  3765  05DF  0422               	iorwf	___lldiv@divisor+2,w
  3766  05E0  0421               	iorwf	___lldiv@divisor+1,w
  3767  05E1  0420               	iorwf	___lldiv@divisor,w
  3768  05E2  1903               	skipnz
  3769  05E3  2DE5               	goto	u1551
  3770  05E4  2DE6               	goto	u1550
  3771  05E5                     u1551:
  3772  05E5  2E33               	goto	l2361
  3773  05E6                     u1550:
  3774  05E6                     l2343:
  3775  05E6  01F8               	clrf	___lldiv@counter
  3776  05E7  0AF8               	incf	___lldiv@counter,f
  3777  05E8  2DF6               	goto	l2347
  3778  05E9                     l2345:
  3779  05E9  3001               	movlw	1
  3780  05EA  00F3               	movwf	??___lldiv
  3781  05EB                     u1565:
  3782  05EB  1003               	clrc
  3783  05EC  0DA0               	rlf	___lldiv@divisor,f
  3784  05ED  0DA1               	rlf	___lldiv@divisor+1,f
  3785  05EE  0DA2               	rlf	___lldiv@divisor+2,f
  3786  05EF  0DA3               	rlf	___lldiv@divisor+3,f
  3787  05F0  0BF3               	decfsz	??___lldiv,f
  3788  05F1  2DEB               	goto	u1565
  3789  05F2  3001               	movlw	1
  3790  05F3  00F3               	movwf	??___lldiv
  3791  05F4  0873               	movf	??___lldiv,w
  3792  05F5  07F8               	addwf	___lldiv@counter,f
  3793  05F6                     l2347:
  3794  05F6  1FA3               	btfss	___lldiv@divisor+3,7
  3795  05F7  2DF9               	goto	u1571
  3796  05F8  2DFA               	goto	u1570
  3797  05F9                     u1571:
  3798  05F9  2DE9               	goto	l2345
  3799  05FA                     u1570:
  3800  05FA                     l2349:
  3801  05FA  3001               	movlw	1
  3802  05FB  00F3               	movwf	??___lldiv
  3803  05FC                     u1585:
  3804  05FC  1003               	clrc
  3805  05FD  0DF4               	rlf	___lldiv@quotient,f
  3806  05FE  0DF5               	rlf	___lldiv@quotient+1,f
  3807  05FF  0DF6               	rlf	___lldiv@quotient+2,f
  3808  0600  0DF7               	rlf	___lldiv@quotient+3,f
  3809  0601  0BF3               	decfsz	??___lldiv,f
  3810  0602  2DFC               	goto	u1585
  3811  0603                     l2351:
  3812  0603  0823               	movf	___lldiv@divisor+3,w
  3813  0604  0227               	subwf	___lldiv@dividend+3,w
  3814  0605  1D03               	skipz
  3815  0606  2E11               	goto	u1595
  3816  0607  0822               	movf	___lldiv@divisor+2,w
  3817  0608  0226               	subwf	___lldiv@dividend+2,w
  3818  0609  1D03               	skipz
  3819  060A  2E11               	goto	u1595
  3820  060B  0821               	movf	___lldiv@divisor+1,w
  3821  060C  0225               	subwf	___lldiv@dividend+1,w
  3822  060D  1D03               	skipz
  3823  060E  2E11               	goto	u1595
  3824  060F  0820               	movf	___lldiv@divisor,w
  3825  0610  0224               	subwf	___lldiv@dividend,w
  3826  0611                     u1595:
  3827  0611  1C03               	skipc
  3828  0612  2E14               	goto	u1591
  3829  0613  2E15               	goto	u1590
  3830  0614                     u1591:
  3831  0614  2E24               	goto	l2357
  3832  0615                     u1590:
  3833  0615                     l2353:
  3834  0615  0820               	movf	___lldiv@divisor,w
  3835  0616  02A4               	subwf	___lldiv@dividend,f
  3836  0617  0821               	movf	___lldiv@divisor+1,w
  3837  0618  1C03               	skipc
  3838  0619  0F21               	incfsz	___lldiv@divisor+1,w
  3839  061A  02A5               	subwf	___lldiv@dividend+1,f
  3840  061B  0822               	movf	___lldiv@divisor+2,w
  3841  061C  1C03               	skipc
  3842  061D  0F22               	incfsz	___lldiv@divisor+2,w
  3843  061E  02A6               	subwf	___lldiv@dividend+2,f
  3844  061F  0823               	movf	___lldiv@divisor+3,w
  3845  0620  1C03               	skipc
  3846  0621  0F23               	incfsz	___lldiv@divisor+3,w
  3847  0622  02A7               	subwf	___lldiv@dividend+3,f
  3848  0623                     l2355:
  3849  0623  1474               	bsf	___lldiv@quotient,0
  3850  0624                     l2357:
  3851  0624  3001               	movlw	1
  3852  0625                     u1605:
  3853  0625  1003               	clrc
  3854  0626  0CA3               	rrf	___lldiv@divisor+3,f
  3855  0627  0CA2               	rrf	___lldiv@divisor+2,f
  3856  0628  0CA1               	rrf	___lldiv@divisor+1,f
  3857  0629  0CA0               	rrf	___lldiv@divisor,f
  3858  062A  3EFF               	addlw	-1
  3859  062B  1D03               	skipz
  3860  062C  2E25               	goto	u1605
  3861  062D                     l2359:
  3862  062D  3001               	movlw	1
  3863  062E  02F8               	subwf	___lldiv@counter,f
  3864  062F  1D03               	btfss	3,2
  3865  0630  2E32               	goto	u1611
  3866  0631  2E33               	goto	u1610
  3867  0632                     u1611:
  3868  0632  2DFA               	goto	l2349
  3869  0633                     u1610:
  3870  0633                     l2361:
  3871  0633  0877               	movf	___lldiv@quotient+3,w
  3872  0634  00A3               	movwf	?___lldiv+3
  3873  0635  0876               	movf	___lldiv@quotient+2,w
  3874  0636  00A2               	movwf	?___lldiv+2
  3875  0637  0875               	movf	___lldiv@quotient+1,w
  3876  0638  00A1               	movwf	?___lldiv+1
  3877  0639  0874               	movf	___lldiv@quotient,w
  3878  063A  00A0               	movwf	?___lldiv
  3879  063B                     l433:
  3880  063B  0008               	return
  3881  063C                     __end_of___lldiv:
  3882                           
  3883                           	psect	text14
  3884  0E65                     __ptext14:	
  3885 ;; *************** function _ADC_CONFIG *****************
  3886 ;; Defined at:
  3887 ;;		line 14 in file "ADC.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  frec            2    3[COMMON] int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         2       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0
  3904 ;;      Totals:         2       0       0       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_setup
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _ADC_CONFIG
  3917  0E65                     _ADC_CONFIG:
  3918  0E65                     l1715:	
  3919                           ;incstack = 0
  3920                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  3921                           
  3922                           
  3923                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  3924  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0E67  141F               	bsf	31,0	;volatile
  3927  0E68                     l1717:
  3928                           
  3929                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  3930  0E68  30C3               	movlw	-61
  3931  0E69  059F               	andwf	31,f	;volatile
  3932  0E6A                     l1719:
  3933                           
  3934                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  3935  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  3936  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  3937  0E6C  139F               	bcf	31,7	;volatile
  3938  0E6D                     l1721:
  3939                           
  3940                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  3941  0E6D  121F               	bcf	31,4	;volatile
  3942  0E6E                     l1723:
  3943                           
  3944                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  3945  0E6E  129F               	bcf	31,5	;volatile
  3946  0E6F                     l1725:
  3947                           
  3948                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  3949  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3951  0E71  109F               	bcf	31,1	;volatile
  3952                           
  3953                           ;ADC.c: 23:     switch(frec){
  3954  0E72  2E80               	goto	l1735
  3955  0E73                     l1727:
  3956                           
  3957                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  3958  0E73  303F               	movlw	-193
  3959  0E74  059F               	andwf	31,f	;volatile
  3960                           
  3961                           ;ADC.c: 26:             break;
  3962  0E75  2E90               	goto	l279
  3963  0E76                     l1729:
  3964                           
  3965                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  3966  0E76  081F               	movf	31,w	;volatile
  3967  0E77  393F               	andlw	-193
  3968  0E78  3840               	iorlw	64
  3969  0E79  009F               	movwf	31	;volatile
  3970                           
  3971                           ;ADC.c: 29:             break;
  3972  0E7A  2E90               	goto	l279
  3973  0E7B                     l1731:
  3974                           
  3975                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  3976  0E7B  081F               	movf	31,w	;volatile
  3977  0E7C  393F               	andlw	-193
  3978  0E7D  3880               	iorlw	128
  3979  0E7E  009F               	movwf	31	;volatile
  3980                           
  3981                           ;ADC.c: 32:             break;
  3982  0E7F  2E90               	goto	l279
  3983  0E80                     l1735:
  3984                           
  3985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3986                           ; Switch size 1, requested type "simple"
  3987                           ; Number of cases is 1, Range of values is 0 to 0
  3988                           ; switch strategies available:
  3989                           ; Name         Instructions Cycles
  3990                           ; simple_byte            4     3 (average)
  3991                           ; direct_byte           11     8 (fixed)
  3992                           ; jumptable            260     6 (fixed)
  3993                           ;	Chosen strategy is simple_byte
  3994  0E80  0874               	movf	ADC_CONFIG@frec+1,w
  3995  0E81  3A00               	xorlw	0	; case 0
  3996  0E82  1903               	skipnz
  3997  0E83  2E85               	goto	l2845
  3998  0E84  2E90               	goto	l279
  3999  0E85                     l2845:
  4000                           
  4001                           ; Switch size 1, requested type "simple"
  4002                           ; Number of cases is 3, Range of values is 1 to 8
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte           10     6 (average)
  4006                           ; direct_byte           35    11 (fixed)
  4007                           ; jumptable            263     9 (fixed)
  4008                           ;	Chosen strategy is simple_byte
  4009  0E85  0873               	movf	ADC_CONFIG@frec,w
  4010  0E86  3A01               	xorlw	1	; case 1
  4011  0E87  1903               	skipnz
  4012  0E88  2E73               	goto	l1727
  4013  0E89  3A05               	xorlw	5	; case 4
  4014  0E8A  1903               	skipnz
  4015  0E8B  2E76               	goto	l1729
  4016  0E8C  3A0C               	xorlw	12	; case 8
  4017  0E8D  1903               	skipnz
  4018  0E8E  2E7B               	goto	l1731
  4019  0E8F  2E90               	goto	l279
  4020  0E90                     l279:
  4021  0E90  0008               	return
  4022  0E91                     __end_of_ADC_CONFIG:
  4023                           
  4024                           	psect	text15
  4025  0E0B                     __ptext15:	
  4026 ;; *************** function _my_delay_s *****************
  4027 ;; Defined at:
  4028 ;;		line 35 in file "Master_Test.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  tiempo          1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  tiempo          1    6[COMMON] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0
  4044 ;;      Temps:          3       0       0       0       0
  4045 ;;      Totals:         4       0       0       0       0
  4046 ;;Total ram usage:        4 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _my_delay_s
  4058  0E0B                     _my_delay_s:
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in _my_delay_s: [wreg+status,2+status,0]
  4062                           ;my_delay_s@tiempo stored from wreg
  4063  0E0B  00F6               	movwf	my_delay_s@tiempo
  4064  0E0C                     l1945:
  4065                           
  4066                           ;Master_Test.c: 36:     while(tiempo != 0){
  4067  0E0C  2E1C               	goto	l1949
  4068  0E0D                     l1947:
  4069                           
  4070                           ;Master_Test.c: 37:         tiempo--;
  4071  0E0D  3001               	movlw	1
  4072  0E0E  02F6               	subwf	my_delay_s@tiempo,f
  4073                           
  4074                           ;Master_Test.c: 38:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  4075  0E0F  300B               	movlw	11
  4076  0E10  00F5               	movwf	??_my_delay_s+2
  4077  0E11  3026               	movlw	38
  4078  0E12  00F4               	movwf	??_my_delay_s+1
  4079  0E13  305D               	movlw	93
  4080  0E14  00F3               	movwf	??_my_delay_s
  4081  0E15                     u2237:
  4082  0E15  0BF3               	decfsz	??_my_delay_s,f
  4083  0E16  2E15               	goto	u2237
  4084  0E17  0BF4               	decfsz	??_my_delay_s+1,f
  4085  0E18  2E15               	goto	u2237
  4086  0E19  0BF5               	decfsz	??_my_delay_s+2,f
  4087  0E1A  2E15               	goto	u2237
  4088  0E1B  2E1C               	nop2
  4089  0E1C                     l1949:
  4090                           
  4091                           ;Master_Test.c: 36:     while(tiempo != 0){
  4092  0E1C  0876               	movf	my_delay_s@tiempo,w
  4093  0E1D  1D03               	btfss	3,2
  4094  0E1E  2E20               	goto	u1291
  4095  0E1F  2E21               	goto	u1290
  4096  0E20                     u1291:
  4097  0E20  2E0D               	goto	l1947
  4098  0E21                     u1290:
  4099  0E21                     l169:
  4100  0E21  0008               	return
  4101  0E22                     __end_of_my_delay_s:
  4102                           
  4103                           	psect	text16
  4104  0E40                     __ptext16:	
  4105 ;; *************** function ___wmul *****************
  4106 ;; Defined at:
  4107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  multiplier      2    3[COMMON] unsigned int 
  4110 ;;  multiplicand    2    5[COMMON] unsigned int 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  product         2    7[COMMON] unsigned int 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2    3[COMMON] unsigned int 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         4       0       0       0       0
  4123 ;;      Locals:         2       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0
  4125 ;;      Totals:         6       0       0       0       0
  4126 ;;Total ram usage:        6 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function ___wmul
  4138  0E40                     ___wmul:
  4139  0E40                     l2069:	
  4140                           ;incstack = 0
  4141                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4142                           
  4143  0E40  01F7               	clrf	___wmul@product
  4144  0E41  01F8               	clrf	___wmul@product+1
  4145  0E42                     l2071:
  4146  0E42  1C73               	btfss	___wmul@multiplier,0
  4147  0E43  2E45               	goto	u1381
  4148  0E44  2E46               	goto	u1380
  4149  0E45                     u1381:
  4150  0E45  2E4C               	goto	l397
  4151  0E46                     u1380:
  4152  0E46                     l2073:
  4153  0E46  0875               	movf	___wmul@multiplicand,w
  4154  0E47  07F7               	addwf	___wmul@product,f
  4155  0E48  1803               	skipnc
  4156  0E49  0AF8               	incf	___wmul@product+1,f
  4157  0E4A  0876               	movf	___wmul@multiplicand+1,w
  4158  0E4B  07F8               	addwf	___wmul@product+1,f
  4159  0E4C                     l397:
  4160  0E4C  3001               	movlw	1
  4161  0E4D                     u1395:
  4162  0E4D  1003               	clrc
  4163  0E4E  0DF5               	rlf	___wmul@multiplicand,f
  4164  0E4F  0DF6               	rlf	___wmul@multiplicand+1,f
  4165  0E50  3EFF               	addlw	-1
  4166  0E51  1D03               	skipz
  4167  0E52  2E4D               	goto	u1395
  4168  0E53                     l2075:
  4169  0E53  3001               	movlw	1
  4170  0E54                     u1405:
  4171  0E54  1003               	clrc
  4172  0E55  0CF4               	rrf	___wmul@multiplier+1,f
  4173  0E56  0CF3               	rrf	___wmul@multiplier,f
  4174  0E57  3EFF               	addlw	-1
  4175  0E58  1D03               	skipz
  4176  0E59  2E54               	goto	u1405
  4177  0E5A                     l2077:
  4178  0E5A  0873               	movf	___wmul@multiplier,w
  4179  0E5B  0474               	iorwf	___wmul@multiplier+1,w
  4180  0E5C  1D03               	btfss	3,2
  4181  0E5D  2E5F               	goto	u1411
  4182  0E5E  2E60               	goto	u1410
  4183  0E5F                     u1411:
  4184  0E5F  2E42               	goto	l2071
  4185  0E60                     u1410:
  4186  0E60                     l2079:
  4187  0E60  0878               	movf	___wmul@product+1,w
  4188  0E61  00F4               	movwf	?___wmul+1
  4189  0E62  0877               	movf	___wmul@product,w
  4190  0E63  00F3               	movwf	?___wmul
  4191  0E64                     l399:
  4192  0E64  0008               	return
  4193  0E65                     __end_of___wmul:
  4194                           
  4195                           	psect	text17
  4196  07F6                     __ptext17:	
  4197 ;; *************** function _I2C_Master_Write *****************
  4198 ;; Defined at:
  4199 ;;		line 65 in file "I2C.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  d               2    3[COMMON] unsigned int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, pclath, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         2       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0
  4216 ;;      Totals:         2       0       0       0       0
  4217 ;;Total ram usage:        2 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    2
  4220 ;; This function calls:
  4221 ;;		_I2C_Master_Wait
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _I2C_Master_Write
  4229  07F6                     _I2C_Master_Write:
  4230  07F6                     l1925:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4233                           
  4234                           
  4235                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4236  07F6  120A  158A  25BF  120A  118A  	fcall	_I2C_Master_Wait
  4237  07FB                     l1927:
  4238                           
  4239                           ;I2C.c: 68:     SSPBUF = d;
  4240  07FB  0873               	movf	I2C_Master_Write@d,w
  4241  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  4242  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  4243  07FE  0093               	movwf	19	;volatile
  4244  07FF                     l47:
  4245  07FF  0008               	return
  4246  0800                     __end_of_I2C_Master_Write:
  4247                           
  4248                           	psect	text18
  4249  0DB6                     __ptext18:	
  4250 ;; *************** function _I2C_Master_Stop *****************
  4251 ;; Defined at:
  4252 ;;		line 55 in file "I2C.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    2
  4273 ;; This function calls:
  4274 ;;		_I2C_Master_Wait
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _I2C_Master_Stop
  4282  0DB6                     _I2C_Master_Stop:
  4283  0DB6                     l1921:	
  4284                           ;incstack = 0
  4285                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4286                           
  4287                           
  4288                           ;I2C.c: 57:     I2C_Master_Wait();
  4289  0DB6  120A  158A  25BF  120A  158A  	fcall	_I2C_Master_Wait
  4290  0DBB                     l1923:
  4291                           
  4292                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4293  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0DBD  1511               	bsf	17,2	;volatile
  4296  0DBE                     l44:
  4297  0DBE  0008               	return
  4298  0DBF                     __end_of_I2C_Master_Stop:
  4299                           
  4300                           	psect	text19
  4301  0DAD                     __ptext19:	
  4302 ;; *************** function _I2C_Master_Start *****************
  4303 ;; Defined at:
  4304 ;;		line 39 in file "I2C.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0, pclath, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    2
  4325 ;; This function calls:
  4326 ;;		_I2C_Master_Wait
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _I2C_Master_Start
  4334  0DAD                     _I2C_Master_Start:
  4335  0DAD                     l1917:	
  4336                           ;incstack = 0
  4337                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4338                           
  4339                           
  4340                           ;I2C.c: 41:     I2C_Master_Wait();
  4341  0DAD  120A  158A  25BF  120A  158A  	fcall	_I2C_Master_Wait
  4342  0DB2                     l1919:
  4343                           
  4344                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4345  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  4346  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  4347  0DB4  1411               	bsf	17,0	;volatile
  4348  0DB5                     l38:
  4349  0DB5  0008               	return
  4350  0DB6                     __end_of_I2C_Master_Start:
  4351                           
  4352                           	psect	text20
  4353  0E91                     __ptext20:	
  4354 ;; *************** function _I2C_Master_Read *****************
  4355 ;; Defined at:
  4356 ;;		line 74 in file "I2C.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  a               2    3[COMMON] unsigned short 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  temp            2    7[COMMON] unsigned short 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2    3[COMMON] unsigned short 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         2       0       0       0       0
  4371 ;;      Locals:         2       0       0       0       0
  4372 ;;      Temps:          2       0       0       0       0
  4373 ;;      Totals:         6       0       0       0       0
  4374 ;;Total ram usage:        6 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    2
  4377 ;; This function calls:
  4378 ;;		_I2C_Master_Wait
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _I2C_Master_Read
  4386  0E91                     _I2C_Master_Read:
  4387  0E91                     l1929:	
  4388                           ;incstack = 0
  4389                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4390                           
  4391                           
  4392                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4393  0E91  120A  158A  25BF  120A  158A  	fcall	_I2C_Master_Wait
  4394  0E96                     l1931:
  4395                           
  4396                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4397  0E96  1683               	bsf	3,5	;RP0=1, select bank1
  4398  0E97  1303               	bcf	3,6	;RP1=0, select bank1
  4399  0E98  1591               	bsf	17,3	;volatile
  4400                           
  4401                           ;I2C.c: 79:     I2C_Master_Wait();
  4402  0E99  120A  158A  25BF  120A  158A  	fcall	_I2C_Master_Wait
  4403  0E9E                     l1933:
  4404                           
  4405                           ;I2C.c: 80:     temp = SSPBUF;
  4406  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0EA0  0813               	movf	19,w	;volatile
  4409  0EA1  00F5               	movwf	??_I2C_Master_Read
  4410  0EA2  01F6               	clrf	??_I2C_Master_Read+1
  4411  0EA3  0875               	movf	??_I2C_Master_Read,w
  4412  0EA4  00F7               	movwf	I2C_Master_Read@temp
  4413  0EA5  0876               	movf	??_I2C_Master_Read+1,w
  4414  0EA6  00F8               	movwf	I2C_Master_Read@temp+1
  4415  0EA7                     l1935:
  4416                           
  4417                           ;I2C.c: 81:     I2C_Master_Wait();
  4418  0EA7  120A  158A  25BF  120A  158A  	fcall	_I2C_Master_Wait
  4419  0EAC                     l1937:
  4420                           
  4421                           ;I2C.c: 82:     if(a == 1){
  4422  0EAC  0373               	decf	I2C_Master_Read@a,w
  4423  0EAD  0474               	iorwf	I2C_Master_Read@a+1,w
  4424  0EAE  1D03               	btfss	3,2
  4425  0EAF  2EB1               	goto	u1281
  4426  0EB0  2EB2               	goto	u1280
  4427  0EB1                     u1281:
  4428  0EB1  2EB6               	goto	l50
  4429  0EB2                     u1280:
  4430  0EB2                     l1939:
  4431                           
  4432                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4433  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  4434  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  4435  0EB4  1291               	bcf	17,5	;volatile
  4436                           
  4437                           ;I2C.c: 84:     }else{
  4438  0EB5  2EB9               	goto	l51
  4439  0EB6                     l50:
  4440                           
  4441                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4442  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  4443  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  4444  0EB8  1691               	bsf	17,5	;volatile
  4445  0EB9                     l51:	
  4446                           ;I2C.c: 86:     }
  4447                           
  4448                           
  4449                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4450  0EB9  1611               	bsf	17,4	;volatile
  4451  0EBA                     l1941:
  4452                           
  4453                           ;I2C.c: 88:     return temp;
  4454  0EBA  0878               	movf	I2C_Master_Read@temp+1,w
  4455  0EBB  00F4               	movwf	?_I2C_Master_Read+1
  4456  0EBC  0877               	movf	I2C_Master_Read@temp,w
  4457  0EBD  00F3               	movwf	?_I2C_Master_Read
  4458  0EBE                     l52:
  4459  0EBE  0008               	return
  4460  0EBF                     __end_of_I2C_Master_Read:
  4461                           
  4462                           	psect	text21
  4463  0DBF                     __ptext21:	
  4464 ;; *************** function _I2C_Master_Wait *****************
  4465 ;; Defined at:
  4466 ;;		line 32 in file "I2C.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_I2C_Master_Start
  4491 ;;		_I2C_Master_Stop
  4492 ;;		_I2C_Master_Write
  4493 ;;		_I2C_Master_Read
  4494 ;;		_I2C_Master_RepeatedStart
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _I2C_Master_Wait
  4500  0DBF                     _I2C_Master_Wait:
  4501  0DBF                     l1681:	
  4502                           ;incstack = 0
  4503                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4504                           
  4505  0DBF                     l32:	
  4506                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4507                           
  4508  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  4509  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  4510  0DC1  1914               	btfsc	20,2	;volatile
  4511  0DC2  2DC4               	goto	u871
  4512  0DC3  2DC5               	goto	u870
  4513  0DC4                     u871:
  4514  0DC4  2DBF               	goto	l32
  4515  0DC5                     u870:
  4516  0DC5                     l1683:
  4517  0DC5  0811               	movf	17,w	;volatile
  4518  0DC6  391F               	andlw	31
  4519  0DC7  1D03               	btfss	3,2
  4520  0DC8  2DCA               	goto	u881
  4521  0DC9  2DCB               	goto	u880
  4522  0DCA                     u881:
  4523  0DCA  2DBF               	goto	l32
  4524  0DCB                     u880:
  4525  0DCB                     l35:
  4526  0DCB  0008               	return
  4527  0DCC                     __end_of_I2C_Master_Wait:
  4528                           
  4529                           	psect	text22
  4530  063C                     __ptext22:	
  4531 ;; *************** function _Division *****************
  4532 ;; Defined at:
  4533 ;;		line 42 in file "Master_Test.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  y               1    wreg     unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  y               1   16[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       0       0       0       0
  4548 ;;      Locals:         0       3       0       0       0
  4549 ;;      Temps:          0       3       0       0       0
  4550 ;;      Totals:         0       6       0       0       0
  4551 ;;Total ram usage:        6 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    2
  4554 ;; This function calls:
  4555 ;;		___awdiv
  4556 ;;		___awmod
  4557 ;; This function is called by:
  4558 ;;		_main
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _Division
  4564  063C                     _Division:
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  4568                           ;Division@y stored from wreg
  4569  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4570  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4571  063E  00B0               	movwf	Division@y
  4572  063F                     l2515:
  4573                           
  4574                           ;Master_Test.c: 43:         cen = (y/100);
  4575  063F  3064               	movlw	100
  4576  0640  00A2               	movwf	___awdiv@divisor
  4577  0641  3000               	movlw	0
  4578  0642  00A3               	movwf	___awdiv@divisor+1
  4579  0643  0830               	movf	Division@y,w
  4580  0644  00AB               	movwf	??_Division
  4581  0645  01AC               	clrf	??_Division+1
  4582  0646  082B               	movf	??_Division,w
  4583  0647  00A4               	movwf	___awdiv@dividend
  4584  0648  082C               	movf	??_Division+1,w
  4585  0649  00A5               	movwf	___awdiv@dividend+1
  4586  064A  120A  118A  2503  120A  118A  	fcall	___awdiv
  4587  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0651  0822               	movf	?___awdiv,w
  4590  0652  00AD               	movwf	??_Division+2
  4591  0653  082D               	movf	??_Division+2,w
  4592  0654  00C8               	movwf	_cen
  4593                           
  4594                           ;Master_Test.c: 44:         dec = ((y%100)/10);
  4595  0655  300A               	movlw	10
  4596  0656  00A2               	movwf	___awdiv@divisor
  4597  0657  3000               	movlw	0
  4598  0658  00A3               	movwf	___awdiv@divisor+1
  4599  0659  0830               	movf	Division@y,w
  4600  065A  00AB               	movwf	??_Division
  4601  065B  01AC               	clrf	??_Division+1
  4602  065C  082B               	movf	??_Division,w
  4603  065D  00F5               	movwf	___awmod@dividend
  4604  065E  082C               	movf	??_Division+1,w
  4605  065F  00F6               	movwf	___awmod@dividend+1
  4606  0660  3064               	movlw	100
  4607  0661  00F3               	movwf	___awmod@divisor
  4608  0662  3000               	movlw	0
  4609  0663  00F4               	movwf	___awmod@divisor+1
  4610  0664  120A  118A  2705  120A  118A  	fcall	___awmod
  4611  0669  0874               	movf	?___awmod+1,w
  4612  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4613  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4614  066C  00A5               	movwf	___awdiv@dividend+1
  4615  066D  0873               	movf	?___awmod,w
  4616  066E  00A4               	movwf	___awdiv@dividend
  4617  066F  120A  118A  2503  120A  118A  	fcall	___awdiv
  4618  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0676  0822               	movf	?___awdiv,w
  4621  0677  00AD               	movwf	??_Division+2
  4622  0678  082D               	movf	??_Division+2,w
  4623  0679  00C7               	movwf	_dec
  4624                           
  4625                           ;Master_Test.c: 45:         uni = ((y%100)%10);
  4626  067A  0830               	movf	Division@y,w
  4627  067B  00AB               	movwf	??_Division
  4628  067C  01AC               	clrf	??_Division+1
  4629  067D  082B               	movf	??_Division,w
  4630  067E  00F5               	movwf	___awmod@dividend
  4631  067F  082C               	movf	??_Division+1,w
  4632  0680  00F6               	movwf	___awmod@dividend+1
  4633  0681  3064               	movlw	100
  4634  0682  00F3               	movwf	___awmod@divisor
  4635  0683  3000               	movlw	0
  4636  0684  00F4               	movwf	___awmod@divisor+1
  4637  0685  120A  118A  2705  120A  118A  	fcall	___awmod
  4638  068A  0874               	movf	?___awmod+1,w
  4639  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4640  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4641  068D  00AF               	movwf	_Division$1282+1
  4642  068E  0873               	movf	?___awmod,w
  4643  068F  00AE               	movwf	_Division$1282
  4644                           
  4645                           ;Master_Test.c: 45:         uni = ((y%100)%10);
  4646  0690  300A               	movlw	10
  4647  0691  00F3               	movwf	___awmod@divisor
  4648  0692  3000               	movlw	0
  4649  0693  00F4               	movwf	___awmod@divisor+1
  4650  0694  082F               	movf	_Division$1282+1,w
  4651  0695  00F6               	movwf	___awmod@dividend+1
  4652  0696  082E               	movf	_Division$1282,w
  4653  0697  00F5               	movwf	___awmod@dividend
  4654  0698  120A  118A  2705  120A  118A  	fcall	___awmod
  4655  069D  0873               	movf	?___awmod,w
  4656  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4657  069F  1303               	bcf	3,6	;RP1=0, select bank0
  4658  06A0  00AB               	movwf	??_Division
  4659  06A1  082B               	movf	??_Division,w
  4660  06A2  00C6               	movwf	_uni
  4661  06A3                     l172:
  4662  06A3  0008               	return
  4663  06A4                     __end_of_Division:
  4664                           
  4665                           	psect	text23
  4666  0705                     __ptext23:	
  4667 ;; *************** function ___awmod *****************
  4668 ;; Defined at:
  4669 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  divisor         2    3[COMMON] int 
  4672 ;;  dividend        2    5[COMMON] int 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  sign            1    1[BANK0 ] unsigned char 
  4675 ;;  counter         1    0[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  2    3[COMMON] int 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         4       0       0       0       0
  4686 ;;      Locals:         0       2       0       0       0
  4687 ;;      Temps:          1       0       0       0       0
  4688 ;;      Totals:         5       2       0       0       0
  4689 ;;Total ram usage:        7 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_Division
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function ___awmod
  4701  0705                     ___awmod:
  4702  0705                     l2429:	
  4703                           ;incstack = 0
  4704                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4705                           
  4706  0705  1283               	bcf	3,5	;RP0=0, select bank0
  4707  0706  1303               	bcf	3,6	;RP1=0, select bank0
  4708  0707  01A1               	clrf	___awmod@sign
  4709  0708                     l2431:
  4710  0708  1FF6               	btfss	___awmod@dividend+1,7
  4711  0709  2F0B               	goto	u1761
  4712  070A  2F0C               	goto	u1760
  4713  070B                     u1761:
  4714  070B  2F13               	goto	l2437
  4715  070C                     u1760:
  4716  070C                     l2433:
  4717  070C  09F5               	comf	___awmod@dividend,f
  4718  070D  09F6               	comf	___awmod@dividend+1,f
  4719  070E  0AF5               	incf	___awmod@dividend,f
  4720  070F  1903               	skipnz
  4721  0710  0AF6               	incf	___awmod@dividend+1,f
  4722  0711                     l2435:
  4723  0711  01A1               	clrf	___awmod@sign
  4724  0712  0AA1               	incf	___awmod@sign,f
  4725  0713                     l2437:
  4726  0713  1FF4               	btfss	___awmod@divisor+1,7
  4727  0714  2F16               	goto	u1771
  4728  0715  2F17               	goto	u1770
  4729  0716                     u1771:
  4730  0716  2F1C               	goto	l2441
  4731  0717                     u1770:
  4732  0717                     l2439:
  4733  0717  09F3               	comf	___awmod@divisor,f
  4734  0718  09F4               	comf	___awmod@divisor+1,f
  4735  0719  0AF3               	incf	___awmod@divisor,f
  4736  071A  1903               	skipnz
  4737  071B  0AF4               	incf	___awmod@divisor+1,f
  4738  071C                     l2441:
  4739  071C  0873               	movf	___awmod@divisor,w
  4740  071D  0474               	iorwf	___awmod@divisor+1,w
  4741  071E  1903               	btfsc	3,2
  4742  071F  2F21               	goto	u1781
  4743  0720  2F22               	goto	u1780
  4744  0721                     u1781:
  4745  0721  2F51               	goto	l2459
  4746  0722                     u1780:
  4747  0722                     l2443:
  4748  0722  01A0               	clrf	___awmod@counter
  4749  0723  0AA0               	incf	___awmod@counter,f
  4750  0724  2F30               	goto	l2449
  4751  0725                     l2445:
  4752  0725  3001               	movlw	1
  4753  0726                     u1795:
  4754  0726  1003               	clrc
  4755  0727  0DF3               	rlf	___awmod@divisor,f
  4756  0728  0DF4               	rlf	___awmod@divisor+1,f
  4757  0729  3EFF               	addlw	-1
  4758  072A  1D03               	skipz
  4759  072B  2F26               	goto	u1795
  4760  072C                     l2447:
  4761  072C  3001               	movlw	1
  4762  072D  00F7               	movwf	??___awmod
  4763  072E  0877               	movf	??___awmod,w
  4764  072F  07A0               	addwf	___awmod@counter,f
  4765  0730                     l2449:
  4766  0730  1FF4               	btfss	___awmod@divisor+1,7
  4767  0731  2F33               	goto	u1801
  4768  0732  2F34               	goto	u1800
  4769  0733                     u1801:
  4770  0733  2F25               	goto	l2445
  4771  0734                     u1800:
  4772  0734                     l2451:
  4773  0734  0874               	movf	___awmod@divisor+1,w
  4774  0735  0276               	subwf	___awmod@dividend+1,w
  4775  0736  1D03               	skipz
  4776  0737  2F3A               	goto	u1815
  4777  0738  0873               	movf	___awmod@divisor,w
  4778  0739  0275               	subwf	___awmod@dividend,w
  4779  073A                     u1815:
  4780  073A  1C03               	skipc
  4781  073B  2F3D               	goto	u1811
  4782  073C  2F3E               	goto	u1810
  4783  073D                     u1811:
  4784  073D  2F44               	goto	l2455
  4785  073E                     u1810:
  4786  073E                     l2453:
  4787  073E  0873               	movf	___awmod@divisor,w
  4788  073F  02F5               	subwf	___awmod@dividend,f
  4789  0740  0874               	movf	___awmod@divisor+1,w
  4790  0741  1C03               	skipc
  4791  0742  03F6               	decf	___awmod@dividend+1,f
  4792  0743  02F6               	subwf	___awmod@dividend+1,f
  4793  0744                     l2455:
  4794  0744  3001               	movlw	1
  4795  0745                     u1825:
  4796  0745  1003               	clrc
  4797  0746  0CF4               	rrf	___awmod@divisor+1,f
  4798  0747  0CF3               	rrf	___awmod@divisor,f
  4799  0748  3EFF               	addlw	-1
  4800  0749  1D03               	skipz
  4801  074A  2F45               	goto	u1825
  4802  074B                     l2457:
  4803  074B  3001               	movlw	1
  4804  074C  02A0               	subwf	___awmod@counter,f
  4805  074D  1D03               	btfss	3,2
  4806  074E  2F50               	goto	u1831
  4807  074F  2F51               	goto	u1830
  4808  0750                     u1831:
  4809  0750  2F34               	goto	l2451
  4810  0751                     u1830:
  4811  0751                     l2459:
  4812  0751  0821               	movf	___awmod@sign,w
  4813  0752  1903               	btfsc	3,2
  4814  0753  2F55               	goto	u1841
  4815  0754  2F56               	goto	u1840
  4816  0755                     u1841:
  4817  0755  2F5B               	goto	l2463
  4818  0756                     u1840:
  4819  0756                     l2461:
  4820  0756  09F5               	comf	___awmod@dividend,f
  4821  0757  09F6               	comf	___awmod@dividend+1,f
  4822  0758  0AF5               	incf	___awmod@dividend,f
  4823  0759  1903               	skipnz
  4824  075A  0AF6               	incf	___awmod@dividend+1,f
  4825  075B                     l2463:
  4826  075B  0876               	movf	___awmod@dividend+1,w
  4827  075C  00F4               	movwf	?___awmod+1
  4828  075D  0875               	movf	___awmod@dividend,w
  4829  075E  00F3               	movwf	?___awmod
  4830  075F                     l563:
  4831  075F  0008               	return
  4832  0760                     __end_of___awmod:
  4833                           
  4834                           	psect	text24
  4835  0503                     __ptext24:	
  4836 ;; *************** function ___awdiv *****************
  4837 ;; Defined at:
  4838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  divisor         2    2[BANK0 ] int 
  4841 ;;  dividend        2    4[BANK0 ] int 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  quotient        2    9[BANK0 ] int 
  4844 ;;  sign            1    8[BANK0 ] unsigned char 
  4845 ;;  counter         1    7[BANK0 ] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2    2[BANK0 ] int 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4855 ;;      Params:         0       4       0       0       0
  4856 ;;      Locals:         0       4       0       0       0
  4857 ;;      Temps:          0       1       0       0       0
  4858 ;;      Totals:         0       9       0       0       0
  4859 ;;Total ram usage:        9 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    1
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_Division
  4866 ;;		_main
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function ___awdiv
  4872  0503                     ___awdiv:
  4873  0503                     l2385:	
  4874                           ;incstack = 0
  4875                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4876                           
  4877  0503  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0504  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0505  01A8               	clrf	___awdiv@sign
  4880  0506                     l2387:
  4881  0506  1FA3               	btfss	___awdiv@divisor+1,7
  4882  0507  2D09               	goto	u1661
  4883  0508  2D0A               	goto	u1660
  4884  0509                     u1661:
  4885  0509  2D11               	goto	l2393
  4886  050A                     u1660:
  4887  050A                     l2389:
  4888  050A  09A2               	comf	___awdiv@divisor,f
  4889  050B  09A3               	comf	___awdiv@divisor+1,f
  4890  050C  0AA2               	incf	___awdiv@divisor,f
  4891  050D  1903               	skipnz
  4892  050E  0AA3               	incf	___awdiv@divisor+1,f
  4893  050F                     l2391:
  4894  050F  01A8               	clrf	___awdiv@sign
  4895  0510  0AA8               	incf	___awdiv@sign,f
  4896  0511                     l2393:
  4897  0511  1FA5               	btfss	___awdiv@dividend+1,7
  4898  0512  2D14               	goto	u1671
  4899  0513  2D15               	goto	u1670
  4900  0514                     u1671:
  4901  0514  2D1E               	goto	l2399
  4902  0515                     u1670:
  4903  0515                     l2395:
  4904  0515  09A4               	comf	___awdiv@dividend,f
  4905  0516  09A5               	comf	___awdiv@dividend+1,f
  4906  0517  0AA4               	incf	___awdiv@dividend,f
  4907  0518  1903               	skipnz
  4908  0519  0AA5               	incf	___awdiv@dividend+1,f
  4909  051A                     l2397:
  4910  051A  3001               	movlw	1
  4911  051B  00A6               	movwf	??___awdiv
  4912  051C  0826               	movf	??___awdiv,w
  4913  051D  06A8               	xorwf	___awdiv@sign,f
  4914  051E                     l2399:
  4915  051E  01A9               	clrf	___awdiv@quotient
  4916  051F  01AA               	clrf	___awdiv@quotient+1
  4917  0520                     l2401:
  4918  0520  0822               	movf	___awdiv@divisor,w
  4919  0521  0423               	iorwf	___awdiv@divisor+1,w
  4920  0522  1903               	btfsc	3,2
  4921  0523  2D25               	goto	u1681
  4922  0524  2D26               	goto	u1680
  4923  0525                     u1681:
  4924  0525  2D5D               	goto	l2421
  4925  0526                     u1680:
  4926  0526                     l2403:
  4927  0526  01A7               	clrf	___awdiv@counter
  4928  0527  0AA7               	incf	___awdiv@counter,f
  4929  0528  2D34               	goto	l2409
  4930  0529                     l2405:
  4931  0529  3001               	movlw	1
  4932  052A                     u1695:
  4933  052A  1003               	clrc
  4934  052B  0DA2               	rlf	___awdiv@divisor,f
  4935  052C  0DA3               	rlf	___awdiv@divisor+1,f
  4936  052D  3EFF               	addlw	-1
  4937  052E  1D03               	skipz
  4938  052F  2D2A               	goto	u1695
  4939  0530                     l2407:
  4940  0530  3001               	movlw	1
  4941  0531  00A6               	movwf	??___awdiv
  4942  0532  0826               	movf	??___awdiv,w
  4943  0533  07A7               	addwf	___awdiv@counter,f
  4944  0534                     l2409:
  4945  0534  1FA3               	btfss	___awdiv@divisor+1,7
  4946  0535  2D37               	goto	u1701
  4947  0536  2D38               	goto	u1700
  4948  0537                     u1701:
  4949  0537  2D29               	goto	l2405
  4950  0538                     u1700:
  4951  0538                     l2411:
  4952  0538  3001               	movlw	1
  4953  0539                     u1715:
  4954  0539  1003               	clrc
  4955  053A  0DA9               	rlf	___awdiv@quotient,f
  4956  053B  0DAA               	rlf	___awdiv@quotient+1,f
  4957  053C  3EFF               	addlw	-1
  4958  053D  1D03               	skipz
  4959  053E  2D39               	goto	u1715
  4960  053F  0823               	movf	___awdiv@divisor+1,w
  4961  0540  0225               	subwf	___awdiv@dividend+1,w
  4962  0541  1D03               	skipz
  4963  0542  2D45               	goto	u1725
  4964  0543  0822               	movf	___awdiv@divisor,w
  4965  0544  0224               	subwf	___awdiv@dividend,w
  4966  0545                     u1725:
  4967  0545  1C03               	skipc
  4968  0546  2D48               	goto	u1721
  4969  0547  2D49               	goto	u1720
  4970  0548                     u1721:
  4971  0548  2D50               	goto	l2417
  4972  0549                     u1720:
  4973  0549                     l2413:
  4974  0549  0822               	movf	___awdiv@divisor,w
  4975  054A  02A4               	subwf	___awdiv@dividend,f
  4976  054B  0823               	movf	___awdiv@divisor+1,w
  4977  054C  1C03               	skipc
  4978  054D  03A5               	decf	___awdiv@dividend+1,f
  4979  054E  02A5               	subwf	___awdiv@dividend+1,f
  4980  054F                     l2415:
  4981  054F  1429               	bsf	___awdiv@quotient,0
  4982  0550                     l2417:
  4983  0550  3001               	movlw	1
  4984  0551                     u1735:
  4985  0551  1003               	clrc
  4986  0552  0CA3               	rrf	___awdiv@divisor+1,f
  4987  0553  0CA2               	rrf	___awdiv@divisor,f
  4988  0554  3EFF               	addlw	-1
  4989  0555  1D03               	skipz
  4990  0556  2D51               	goto	u1735
  4991  0557                     l2419:
  4992  0557  3001               	movlw	1
  4993  0558  02A7               	subwf	___awdiv@counter,f
  4994  0559  1D03               	btfss	3,2
  4995  055A  2D5C               	goto	u1741
  4996  055B  2D5D               	goto	u1740
  4997  055C                     u1741:
  4998  055C  2D38               	goto	l2411
  4999  055D                     u1740:
  5000  055D                     l2421:
  5001  055D  0828               	movf	___awdiv@sign,w
  5002  055E  1903               	btfsc	3,2
  5003  055F  2D61               	goto	u1751
  5004  0560  2D62               	goto	u1750
  5005  0561                     u1751:
  5006  0561  2D67               	goto	l2425
  5007  0562                     u1750:
  5008  0562                     l2423:
  5009  0562  09A9               	comf	___awdiv@quotient,f
  5010  0563  09AA               	comf	___awdiv@quotient+1,f
  5011  0564  0AA9               	incf	___awdiv@quotient,f
  5012  0565  1903               	skipnz
  5013  0566  0AAA               	incf	___awdiv@quotient+1,f
  5014  0567                     l2425:
  5015  0567  082A               	movf	___awdiv@quotient+1,w
  5016  0568  00A3               	movwf	?___awdiv+1
  5017  0569  0829               	movf	___awdiv@quotient,w
  5018  056A  00A2               	movwf	?___awdiv
  5019  056B                     l550:
  5020  056B  0008               	return
  5021  056C                     __end_of___awdiv:
  5022                           
  5023                           	psect	text25
  5024  0DD9                     __ptext25:	
  5025 ;; *************** function _ADC_IF *****************
  5026 ;; Defined at:
  5027 ;;		line 36 in file "ADC.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0
  5043 ;;      Temps:          1       0       0       0       0
  5044 ;;      Totals:         1       0       0       0       0
  5045 ;;Total ram usage:        1 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _ADC_IF
  5057  0DD9                     _ADC_IF:
  5058  0DD9                     l2001:	
  5059                           ;incstack = 0
  5060                           ; Regs used in _ADC_IF: [wreg]
  5061                           
  5062                           
  5063                           ;ADC.c: 37:     if(ADCON0bits.GO == 0){
  5064  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0DDB  189F               	btfsc	31,1	;volatile
  5067  0DDC  2DDE               	goto	u1301
  5068  0DDD  2DDF               	goto	u1300
  5069  0DDE                     u1301:
  5070  0DDE  2DE6               	goto	l283
  5071  0DDF                     u1300:
  5072  0DDF                     l2003:
  5073                           
  5074                           ;ADC.c: 38:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  5075  0DDF  3021               	movlw	33
  5076  0DE0  00F3               	movwf	??_ADC_IF
  5077  0DE1                     u2247:
  5078  0DE1  0BF3               	decfsz	??_ADC_IF,f
  5079  0DE2  2DE1               	goto	u2247
  5080  0DE3                     l2005:
  5081                           
  5082                           ;ADC.c: 39:             ADCON0bits.GO = 1;
  5083  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0DE5  149F               	bsf	31,1	;volatile
  5086  0DE6                     l283:
  5087  0DE6  0008               	return
  5088  0DE7                     __end_of_ADC_IF:
  5089                           
  5090                           	psect	text26
  5091  0F35                     __ptext26:	
  5092 ;; *************** function _isr *****************
  5093 ;; Defined at:
  5094 ;;		line 90 in file "Master_Test.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0
  5110 ;;      Temps:          3       0       0       0       0
  5111 ;;      Totals:         3       0       0       0       0
  5112 ;;Total ram usage:        3 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		Interrupt level 1
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function _isr
  5123  0F35                     _isr:
  5124  0F35                     i1l2087:
  5125                           
  5126                           ;Master_Test.c: 91:     if(ADIF){
  5127  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  5128  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  5129  0F37  1F0C               	btfss	12,6	;volatile
  5130  0F38  2F3A               	goto	u142_21
  5131  0F39  2F3B               	goto	u142_20
  5132  0F3A                     u142_21:
  5133  0F3A  2F49               	goto	i1l2095
  5134  0F3B                     u142_20:
  5135  0F3B                     i1l2089:
  5136                           
  5137                           ;Master_Test.c: 92:         if(ADCON0bits.CHS == 0){
  5138  0F3B  0C1F               	rrf	31,w	;volatile
  5139  0F3C  00F0               	movwf	??_isr
  5140  0F3D  0C70               	rrf	??_isr,w
  5141  0F3E  390F               	andlw	15
  5142  0F3F  3A00               	xorlw	0
  5143  0F40  1D03               	skipz
  5144  0F41  2F43               	goto	u143_21
  5145  0F42  2F44               	goto	u143_20
  5146  0F43                     u143_21:
  5147  0F43  2F48               	goto	i1l2093
  5148  0F44                     u143_20:
  5149  0F44                     i1l2091:
  5150                           
  5151                           ;Master_Test.c: 93:             pot = ADRESH;
  5152  0F44  081E               	movf	30,w	;volatile
  5153  0F45  00F0               	movwf	??_isr
  5154  0F46  0870               	movf	??_isr,w
  5155  0F47  00CA               	movwf	_pot
  5156  0F48                     i1l2093:
  5157                           
  5158                           ;Master_Test.c: 95:         ADIF = 0;
  5159  0F48  130C               	bcf	12,6	;volatile
  5160  0F49                     i1l2095:
  5161                           
  5162                           ;Master_Test.c: 97:     if(RBIF){
  5163  0F49  1C0B               	btfss	11,0	;volatile
  5164  0F4A  2F4C               	goto	u144_21
  5165  0F4B  2F4D               	goto	u144_20
  5166  0F4C                     u144_21:
  5167  0F4C  2F5D               	goto	i1l2105
  5168  0F4D                     u144_20:
  5169  0F4D                     i1l2097:
  5170                           
  5171                           ;Master_Test.c: 98:         if(RB0==1){
  5172  0F4D  1C06               	btfss	6,0	;volatile
  5173  0F4E  2F50               	goto	u145_21
  5174  0F4F  2F51               	goto	u145_20
  5175  0F50                     u145_21:
  5176  0F50  2F56               	goto	i1l200
  5177  0F51                     u145_20:
  5178  0F51                     i1l2099:
  5179                           
  5180                           ;Master_Test.c: 99:             con++;
  5181  0F51  3001               	movlw	1
  5182  0F52  00F0               	movwf	??_isr
  5183  0F53  0870               	movf	??_isr,w
  5184  0F54  07C9               	addwf	_con,f
  5185                           
  5186                           ;Master_Test.c: 100:         }
  5187  0F55  2F5C               	goto	i1l2103
  5188  0F56                     i1l200:	
  5189                           ;Master_Test.c: 101:         else if(RB1==1){
  5190                           
  5191  0F56  1C86               	btfss	6,1	;volatile
  5192  0F57  2F59               	goto	u146_21
  5193  0F58  2F5A               	goto	u146_20
  5194  0F59                     u146_21:
  5195  0F59  2F5C               	goto	i1l2103
  5196  0F5A                     u146_20:
  5197  0F5A                     i1l2101:
  5198                           
  5199                           ;Master_Test.c: 102:             con--;
  5200  0F5A  3001               	movlw	1
  5201  0F5B  02C9               	subwf	_con,f
  5202  0F5C                     i1l2103:
  5203                           
  5204                           ;Master_Test.c: 104:         RBIF = 0;
  5205  0F5C  100B               	bcf	11,0	;volatile
  5206  0F5D                     i1l2105:
  5207                           
  5208                           ;Master_Test.c: 106:     if(RCIF){
  5209  0F5D  1E8C               	btfss	12,5	;volatile
  5210  0F5E  2F60               	goto	u147_21
  5211  0F5F  2F61               	goto	u147_20
  5212  0F60                     u147_21:
  5213  0F60  2F6F               	goto	i1l206
  5214  0F61                     u147_20:
  5215  0F61                     i1l2107:
  5216                           
  5217                           ;Master_Test.c: 107:         if(RCREG == '1'){
  5218  0F61  3031               	movlw	49
  5219  0F62  061A               	xorwf	26,w	;volatile
  5220  0F63  1D03               	btfss	3,2
  5221  0F64  2F66               	goto	u148_21
  5222  0F65  2F67               	goto	u148_20
  5223  0F66                     u148_21:
  5224  0F66  2F6A               	goto	i1l2111
  5225  0F67                     u148_20:
  5226  0F67                     i1l2109:
  5227                           
  5228                           ;Master_Test.c: 108:             TXREG = (presion1);
  5229  0F67  083C               	movf	_presion1,w
  5230  0F68  0099               	movwf	25	;volatile
  5231                           
  5232                           ;Master_Test.c: 109:         }
  5233  0F69  2F6F               	goto	i1l206
  5234  0F6A                     i1l2111:
  5235                           
  5236                           ;Master_Test.c: 111:             presion2 = RCREG;
  5237  0F6A  081A               	movf	26,w	;volatile
  5238  0F6B  00F0               	movwf	??_isr
  5239  0F6C  0870               	movf	??_isr,w
  5240  0F6D  00C3               	movwf	_presion2
  5241  0F6E                     i1l2113:
  5242                           
  5243                           ;Master_Test.c: 112:             RCIF = 0;
  5244  0F6E  128C               	bcf	12,5	;volatile
  5245  0F6F                     i1l206:
  5246  0F6F  0872               	movf	??_isr+2,w
  5247  0F70  008A               	movwf	10
  5248  0F71  0E71               	swapf	??_isr+1,w
  5249  0F72  0083               	movwf	3
  5250  0F73  0EFE               	swapf	btemp,f
  5251  0F74  0E7E               	swapf	btemp,w
  5252  0F75  0009               	retfie
  5253  0F76                     __end_of_isr:
  5254  007E                     btemp	set	126	;btemp
  5255  007E                     wtemp0	set	126
  5256                           
  5257                           	psect	intentry
  5258  0004                     __pintentry:	
  5259                           ;incstack = 0
  5260                           ; Regs used in _isr: [wreg+status,2+status,0]
  5261                           
  5262  0004                     interrupt_function:
  5263  007E                     saved_w	set	btemp
  5264  0004  00FE               	movwf	btemp
  5265  0005  0E03               	swapf	3,w
  5266  0006  00F1               	movwf	??_isr+1
  5267  0007  080A               	movf	10,w
  5268  0008  00F2               	movwf	??_isr+2
  5269  0009  120A  158A  2F35   	ljmp	_isr
  5270                           
  5271                           	psect	config
  5272                           
  5273                           ;Config register CONFIG1 @ 0x2007
  5274                           ;	Oscillator Selection bits
  5275                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5276                           ;	Watchdog Timer Enable bit
  5277                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5278                           ;	Power-up Timer Enable bit
  5279                           ;	PWRTE = ON, PWRT enabled
  5280                           ;	RE3/MCLR pin function select bit
  5281                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5282                           ;	Code Protection bit
  5283                           ;	CP = OFF, Program memory code protection is disabled
  5284                           ;	Data Code Protection bit
  5285                           ;	CPD = OFF, Data memory code protection is disabled
  5286                           ;	Brown Out Reset Selection bits
  5287                           ;	BOREN = OFF, BOR disabled
  5288                           ;	Internal External Switchover bit
  5289                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5290                           ;	Fail-Safe Clock Monitor Enabled bit
  5291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5292                           ;	Low Voltage Programming Enable bit
  5293                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5294                           ;	In-Circuit Debugger Mode bit
  5295                           ;	DEBUG = 0x1, unprogrammed default
  5296  2007                     	org	8199
  5297  2007  20C4               	dw	8388
  5298                           
  5299                           ;Config register CONFIG2 @ 0x2008
  5300                           ;	Brown-out Reset Selection bit
  5301                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5302                           ;	Flash Program Memory Self Write Enable bits
  5303                           ;	WRT = OFF, Write protection off
  5304  2008                     	org	8200
  5305  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     28      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[11]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), buffer(BANK0[1]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_Lcd_Write_String
    _main->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init
    _setup->_Lcd_Write_String
    _setup->_USART_CONFIG
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   15277
                                             21 BANK0      7     7      0
                             _ADC_IF
                           _Division
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                         _my_delay_s
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2411
                                              8 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    3103
                                             16 BANK0      1     1      0
                         _ADC_CONFIG
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _USART_CONFIG
 ---------------------------------------------------------------------------------
 (2) _USART_CONFIG                                         6     0      6     294
                                              3 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1331
                                              5 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     794
                                              6 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0      22
                                              6 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _my_delay_s                                           4     4      0      23
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1004
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    3165
                                             11 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2065
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _Division
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___wmul
   _my_delay_s
   _setup
     _ADC_CONFIG
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     _USART_CONFIG
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      37       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      37      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Sep 04 18:26:35 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0073                          pc 0002  
                       l32 0DBF                         l50 0EB6                         l35 0DCB  
                       l51 0EB9                         l52 0EBE                         l44 0DBE  
                       l29 0EF8                         l38 0DB5                         l47 07FF  
             ___awdiv@sign 0028                         _rc 003E                         _tr 0040  
                       fsr 0004        ___wmul@multiplicand 0075                        l241 0DD8  
                      l209 05D3                        l250 0704                        l172 06A3  
                      l253 0DF6                        l181 07F2                        l238 0E0A  
                      l247 0E3F                        l183 07F5                        l169 0E21  
                      l433 063B                        l283 0DE6                        l259 0FB9  
                      l179 07DF                        l550 056B                        l279 0E90  
                      l393 0502                        l563 075F                        l397 0E4C  
                      l399 0E64                        l669 0FFF                        l679 0F34  
                      _GIE 005F                        _RB0 0030                        _RB1 0031  
                      _RC1 0039                        _RC2 003A                        u900 07E8  
                      u901 07E7                        u910 0E28                        u911 0E27  
                      u920 0E37                        u921 0E36                        u870 0DC5  
                      u871 0DC4                        u880 0DCB                        u881 0DCA  
                      u890 07DB                        u891 07DA                        _dec 0047  
                      _cen 0048                        _con 0049                        _isr 0F35  
                      _var 0042                        _pot 004A                        _luz 0044  
                      fsr0 0004                        _uni 0046                        indf 0000  
             ___awmod@sign 0021                       l2001 0DD9                       l2003 0DDF  
                     l2005 0DE3                       l2071 0E42                       l2401 0520  
                     l2073 0E46                       l2411 0538                       l2403 0526  
                     l2075 0E53                       l2413 0549                       l2405 0529  
                     l2421 055D                       l2077 0E5A                       l2069 0E40  
                     l2341 05D4                       l2333 0DE8                       l1701 07C8  
                     l2501 0F0F                       l2423 0562                       l2415 054F  
                     l2407 0530                       l2431 0708                       l2079 0E60  
                     l2351 0603                       l2343 05E6                       l1631 0DFB  
                     l2335 0DEB                       l1703 07D5                       l2503 0F13  
                     l2511 0F30                       l2425 0567                       l2417 0550  
                     l2409 0534                       l2441 071C                       l2433 070C  
                     l1721 0E6D                       l2353 0615                       l2345 05E9  
                     l2361 0633                       l1633 0DFD                       l2337 0DED  
                     l1705 07DB                       l2521 0571                       l2505 0F1D  
                     l2601 0492                       l2419 0557                       l2451 0734  
                     l2443 0722                       l2435 0711                       l2515 063F  
                     l1731 0E7B                       l1723 0E6E                       l1715 0E65  
                     l2355 0623                       l2347 05F6                       l2371 0EF5  
                     l1635 0E07                       l2339 0DF3                       l1707 07E2  
                     l2531 057B                       l2523 0575                       l2507 0F23  
                     l2611 04D8                       l2603 0498                       l2461 0756  
                     l2453 073E                       l2445 0725                       l2437 0713  
                     l2429 0705                       l1725 0E6F                       l1717 0E68  
                     l2357 0624                       l2349 05FA                       l2373 0EF6  
                     l2365 0EBF                       l1629 0DF8                       l1741 06A4  
                     l2381 0F95                       l1709 07E8                       l2541 058A  
                     l2533 057C                       l2525 0577                       l2517 056C  
                     l2509 0F2A                       l2613 04DF                       l2605 049F  
                     l2701 01E6                       l2391 050F                       l2463 075B  
                     l2455 0744                       l2447 072C                       l2439 0717  
                     l1727 0E73                       l1735 0E80                       l1719 0E6A  
                     l2359 062D                       l2375 0EF7                       l2367 0EC3  
                     l1751 06C5                       l1743 06A7                       l2383 0F9B  
                     l2551 05A3                       l2543 058B                       l2535 057D  
                     l2527 0578                       l2519 0570                       l2471 0FC4  
                     l2615 04E3                       l2607 04A3                       l2711 021A  
                     l2703 01EB                       l2631 0028                       l2393 0511  
                     l2385 0503                       l2457 074B                       l2449 0730  
                     l1681 0DBF                       l1921 0DB6                       l1729 0E76  
                     l2369 0EC6                       l1761 06E5                       l1753 06CD  
                     l1745 06B0                       l2377 0F76                       l2561 05C4  
                     l2553 05A4                       l2545 059C                       l2537 0586  
                     l2529 0579                       l2481 0FE7                       l2473 0FC7  
                     l2609 04A8                       l2617 04EC                       l2721 024E  
                     l2713 021F                       l2705 01F4                       l2641 0057  
                     l2633 002D                       l2395 0515                       l2387 0506  
                     l2459 0751                       l1683 0DC5                       l1931 0E96  
                     l1923 0DBB                       l1763 06EB                       l1755 06D3  
                     l1747 06B6                       l1771 0E23                       l2379 0F79  
                     l1691 07BB                       l2563 05CD                       l2555 05B3  
                     l2547 059D                       l2539 0589                       l2483 0FED  
                     l2475 0FCE                       l2467 0FBA                       l2619 04FE  
                     l2571 042E                       l2731 0274                       l2723 0253  
                     l2715 0229                       l2707 0202                       l2651 00BB  
                     l2643 0080                       l2635 0036                       l2627 001E  
                     l2397 051A                       l2389 050A                       l1941 0EBA  
                     l1933 0E9E                       l1917 0DAD                       l1925 07F6  
                     l1765 06F1                       l1757 06D9                       l1749 06BF  
                     l1773 0E28                       l1693 07BF                       l1685 07AB  
                     l2557 05B8                       l2549 05A1                       l2485 0FEE  
                     l2477 0FD2                       l2469 0FBE                       l2493 0EF9  
                     l2581 0459                       l2573 0433                       l2565 041C  
                     l2741 0298                       l2733 027D                       l2725 025D  
                     l2717 0233                       l2709 020C                       l2661 0111  
                     l2653 00C4                       l2645 008C                       l2637 0044  
                     l2629 0023                       l2399 051E                       l1935 0EA7  
                     l1919 0DB2                       l1927 07FB                       l1767 06F7  
                     l1759 06DF                       l1775 0E31                       l1695 07C3  
                     l1687 07B6                       l2559 05BD                       l2487 0FF5  
                     l2479 0FD6                       l2495 0F01                       l2583 045D  
                     l2567 0421                       l2751 02BF                       l2743 02A0  
                     l2735 0282                       l2727 0266                       l2719 023B  
                     l2671 0149                       l2663 0124                       l2655 00ED  
                     l2647 009F                       l2639 0049                       l1937 0EAC  
                     l1929 0E91                       l1945 0E0C                       l1769 0DCC  
                     l1777 0E37                       l1697 07C4                       l1689 07BA  
                     l2489 0FFB                       l2497 0F04                       l2585 0461  
                     l2841 0446                       l2577 0434                       l2569 0427  
                     l2761 039B                       l2753 02C8                       l2745 02A5  
                     l2737 028A                       l2729 026B                       l2681 017F  
                     l2673 014E                       l2665 012D                       l2657 00F5  
                     l2649 00A8                       l1939 0EB2                       l1947 0E0D  
                     l2843 07CD                       l2499 0F0B                       l2595 046C  
                     l2587 0465                       l2579 0451                       l2771 03D7  
                     l2755 031E                       l2739 028F                       l2747 02B0  
                     l2691 01C0                       l2683 0188                       l2675 0158  
                     l2667 0132                       l2659 0108                       l1949 0E1C  
                     l2845 0E85                       l2589 046A                       l2773 03E0  
                     l2765 03B7                       l2757 033A                       l2749 02B5  
                     l2693 01C5                       l2685 019B                       l2677 0160  
                     l2669 013B                       l2599 0488                       l2775 03F1  
                     l2767 03BD                       l2759 0345                       l2695 01CE  
                     l2687 01A4                       l2679 016C                       l2777 0400  
                     l2769 03CA                       l2697 01D7                       l2689 01B7  
                     l2779 040C                       l2699 01DC                       _ADIF 0066  
                     ?_isr 0070                       STR_1 077A                       STR_2 07A2  
                     STR_3 07A2                       STR_4 07A2                       STR_5 07A2  
                     STR_6 07A2                       STR_7 07A2                       STR_8 07A2  
                     STR_9 07A8                       u2000 0487                       u2001 0486  
                     u2010 0492                       u2011 0491                       u1300 0DDF  
                     u2020 0498                       u2100 0400                       u1301 0DDE  
                     u2021 0497                       u2005 0483                       u2101 03FF  
                     u2030 04EC                       u2031 04EB                       u2040 04FE  
                     u2041 04FD                       u2105 03FC                       u1410 0E60  
                     u2050 0253                       u1411 0E5F                       u2051 0252  
                     u2060 02B5                       _IOCB 0096                       u1405 0E54  
                     u2061 02B4                       u2117 0051                       u2070 031E  
                     u2207 06C9                       u2071 031D                       u2127 0154  
                     u1280 0EB2                       u2080 039B                       u1281 0EB1  
                     u2217 06FD                       u2081 039A                       u2137 01E2  
                     u1290 0E21                       u1610 0633                       u2090 03CA  
                     u1291 0E20                       u1611 0632                       u2227 0E02  
                     u2091 03C9                       u2075 031A                       u2147 0225  
                     u1700 0538                       u1380 0E46                       u1620 0ED6  
                     u1701 0537                       u1381 0E45                       u2237 0E15  
                     u1605 0625                       u2085 0397                       u2157 02AB  
                     u1550 05E6                       u1630 0F83                       u2247 0DE1  
                     u1551 05E5                       u2095 03C6                       u2167 0340  
                     u1720 0549                       u1800 0734                       u1640 0FA7  
                     u1721 0548                       u1801 0733                       u1625 0ED1  
                     u2177 0DF0                       u1810 073E                       u1570 05FA  
                     u1650 0FB9                       u1715 0539                       u1811 073D  
                     u1395 0E4D                       u1571 05F9                       u2187 06AB  
                     u1651 0FB8                       u1740 055D                       u1660 050A  
                     u1741 055C                       u1725 0545                       u1661 0509  
                     u1565 05EB                       u2197 06BA                       u1750 0562  
                     u1670 0515                       u1830 0751                       u1590 0615  
                     u1910 0FFB                       u1751 0561                       u1735 0551  
                     u1671 0514                       u1831 0750                       u1815 073A  
                     u1591 0614                       u1911 0FFA                       u1680 0526  
                     u1840 0756                       u1760 070C                       u1920 0F01  
                     u1681 0525                       u1841 0755                       u1825 0745  
                     u1761 070B                       u1585 05FC                       u1905 0FEF  
                     u1921 0F00                       u1770 0717                       u1850 0FC4  
                     u1771 0716                       u1595 0611                       u1851 0FC3  
                     u1780 0722                       u1940 0F13                       u1781 0721  
                     u1941 0F12                       u1870 0FD6                       u1950 0F1D  
                     u1695 052A                       u1871 0FD5                       u1951 0F1C  
                     u1935 0F05                       u1865 0FC8                       u1890 0FE7  
                     u1970 0F30                       u1795 0726                       u1891 0FE6  
                     u1971 0F2F                       u1955 0F19                       _PEIE 005E  
                     u1980 0427                       u1885 0FD7                       u1965 0F24  
                     u1981 0426                       u1990 0461                       u1895 0FE3  
                     u1991 0460                       _RBIF 0058                       _RCIF 0065  
                     _TXEN 04C5                       _WPUB 0095          ?_Lcd_Write_String 0075  
                     _frec 0079                       _main 001E                       _temp 0045  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0020  
          __end_of_Lcd_Cmd 0E0B                      ??_isr 0070           ?_I2C_Master_Init 0028  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 056C                      STR_10 07A5  
                    STR_11 0797                      STR_12 078A                      STR_13 077A  
          __end_of___awmod 0760                      _ANSEL 0188            __end_of___lldiv 063C  
          ___awdiv@divisor 0022            __end_of___lwdiv 1000                      i1l200 0F56  
                    i1l206 0F6F            __end_of___lwmod 0F35            ___awdiv@counter 0027  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 001E                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019           USART_CONFIG@frec 0073  
          __end_of_dpowers 077A                      _setup 056C                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0503  
         __end_of_Lcd_Init 0705            __initialization 000F           __end_of_Division 06A4  
             __end_of_main 0419                     ??_main 0035         __size_of_Lcd_Clear 000D  
        ?_I2C_Master_Start 0070               ??_ADC_CONFIG 0075          ?_I2C_Master_Write 0073  
       ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075                     _ADC_IF 0DD9  
                   _ADRESH 001E           ___awdiv@dividend 0024                     ?_setup 0070  
                   _ANSELH 0189                     i1l2101 0F5A                     i1l2111 0F6A  
                   i1l2103 0F5C                     i1l2113 0F6E                     i1l2105 0F5D  
                   i1l2107 0F61                     i1l2109 0F67                     i1l2091 0F44  
                   i1l2093 0F48                     i1l2095 0F49                     i1l2087 0F35  
                   i1l2097 0F4D                     i1l2089 0F3B                     i1l2099 0F51  
                   u142_20 0F3B                     u142_21 0F3A                     u143_20 0F44  
                   u143_21 0F43                     u144_20 0F4D                     u144_21 0F4C  
                   u145_20 0F51                     u145_21 0F50                     u146_20 0F5A  
                   u146_21 0F59                     u147_20 0F61                     u147_21 0F60  
                   u148_20 0F67                     u148_21 0F66                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 0010                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
       __end_of_ADC_CONFIG 0E91                     ___wmul 0E40                  ??___awdiv 0026  
                ??___awmod 0077                  ??___lldiv 0073                  ??___lwdiv 0077  
                ??___lwmod 0078                     _buffer 004B           ___awdiv@quotient 0029  
          ___awmod@divisor 0073            ___awmod@counter 0020                     saved_w 007E  
                ??_sprintf 002B            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001A          __end_of_Lcd_Clear 0DD9             __pcstackCOMMON 0070  
           USART_CONFIG@rc 0077             USART_CONFIG@tr 0075              __end_of_setup 05D4  
           _Lcd_Set_Cursor 0E22             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                  ?_ADC_IF 0070                    ??_setup 0030                  ?_Division 0070  
               __pbssBANK0 003C                 __pmaintext 001E                    ?___wmul 0073  
               __pintentry 0004  __size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 0E40  
               ??_Lcd_Init 0076                    _SSPCON2 0091            __size_of_ADC_IF 000E  
                  _SSPSTAT 0094                 ??_Division 002B                 __stringtab 0760  
           _Lcd_Write_Char 0DE7                    _Lcd_Cmd 0DF7                    ___awdiv 0503  
                  ___awmod 0705                    ___lldiv 05D4            __size_of___wmul 0025  
                  ___lwdiv 0FBA                    ___lwmod 0EF9            ?_Lcd_Set_Cursor 0076  
                  __ptext1 0419                    __ptext2 0EF9                    __ptext3 0FBA  
                  __ptext4 056C                    __ptext5 07AB                    __ptext6 0F76  
                  __ptext7 0DE7                    __ptext8 0E22                    __ptext9 06A4  
                  _dpowers 0770               __size_of_isr 0041           ___awmod@dividend 0075  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0419                    clrloop0 0DA6  
   __end_of_Lcd_Write_Char 0DF7       end_of_initialization 001A                 _my_delay_s 0E0B  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020  
          ___lldiv@counter 0078                  _RCSTAbits 0018           I2C_Master_Init@c 0028  
         I2C_Master_Read@a 0073                  Division@y 0030              ?_USART_CONFIG 0073  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0077             __end_of_ADC_IF 0DE7                  _TXSTAbits 0098  
                _Lcd_Clear 0DCC             __end_of___wmul 0E65           _Lcd_Write_String 0F76  
              _BAUDCTLbits 0187             ??_USART_CONFIG 0079        start_initialization 000F  
              __end_of_isr 0F76                   ??_ADC_IF 0073          __size_of_Lcd_Init 0061  
        ??_I2C_Master_Init 002C          ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073  
        ??_I2C_Master_Stop 0073          __size_of_Division 0068                ?_my_delay_s 0070  
               ?_Lcd_Clear 0070                   ??___wmul 0077            Lcd_Write_Char@a 0074  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070                sprintf@flag 002F                sprintf@prec 0030  
         _I2C_Master_Start 0DAD           _I2C_Master_Write 07F6           ___lwdiv@dividend 0075  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0022                   ?___awmod 0073  
                 ?___lldiv 0020                   ?___lwdiv 0073                   ?___lwmod 0023  
                __pstrings 0760        __size_of_my_delay_s 0017           ___lwdiv@quotient 0021  
                 ?_sprintf 0028             __size_of_setup 0068          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 0DA5                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075       __end_of_USART_CONFIG 07F6                   _PIR1bits 000C  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 076F  
               _ADCON1bits 009F          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0073  
               _ADC_CONFIG 0E65                   _Lcd_Init 06A4        I2C_Master_Read@temp 0077  
                 _Division 063C   __end_of_Lcd_Write_String 0FBA           __size_of_Lcd_Cmd 0014  
         __size_of___awdiv 0069           __size_of___awmod 005B           __size_of___lldiv 0068  
         __size_of___lwdiv 0046           __size_of___lwmod 003C              _Division$1282 002E  
       __end_of__stringtab 0770                 sprintf@val 0031            _I2C_Master_Init 0EBF  
          _I2C_Master_Read 0E91            _I2C_Master_Wait 0DBF            _I2C_Master_Stop 0DB6  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 0DCC  
                 __ptext11 0DF7                   __ptext20 0E91                   __ptext12 0EBF  
                 __ptext21 0DBF                   __ptext13 05D4                   __ptext22 063C  
                 __ptext14 0E65                   __ptext23 0705                   __ptext15 0E0B  
                 __ptext24 0503                   __ptext16 0E40                   __ptext25 0DD9  
                 __ptext17 07F6                   __ptext26 0F35                   __ptext18 0DB6  
                 __ptext19 0DAD           __size_of_sprintf 00EA              __size_of_main 03FB  
             ??_my_delay_s 0073                   _presion1 003C                   _presion2 0043  
 __end_of_I2C_Master_Start 0DB6           my_delay_s@tiempo 0076   __end_of_I2C_Master_Write 0800  
               _INTCONbits 000B                ?_ADC_CONFIG 0073         __end_of_my_delay_s 0E22  
                 intlevel1 0000                  sprintf@ap 002E                  sprintf@sp 0033  
    __size_of_USART_CONFIG 004B           ___lwmod@dividend 0025           ___lldiv@dividend 0024  
                stringcode 076A                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0EF9  
  __end_of_I2C_Master_Read 0EBF    __end_of_I2C_Master_Wait 0DCC    __end_of_I2C_Master_Stop 0DBF  
                 sprintf@c 0034                   sprintf@f 0028           ___lldiv@quotient 0074  
        I2C_Master_Write@d 0073            ___lwmod@divisor 0023            ___lwmod@counter 0027  
                 stringdir 076A                   stringtab 0760               _USART_CONFIG 07AB  
              _SSPCON2bits 0091  
