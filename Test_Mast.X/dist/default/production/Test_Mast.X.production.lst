

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 08 09:48:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467                           
   468                           	psect	strings
   469  0800                     __pstrings:
   470  0800                     stringtab:
   471  0800                     __stringtab:
   472                           
   473                           ;	String table - string pointers are 1 byte each
   474  0800  1BFF               	btfsc	btemp+1,7
   475  0801  280A               	ljmp	stringcode
   476  0802  1383               	bcf	3,7
   477  0803  187F               	btfsc	btemp+1,0
   478  0804  1783               	bsf	3,7
   479  0805  0800               	movf	0,w
   480  0806  0A84               	incf	4,f
   481  0807  1903               	skipnz
   482  0808  0AFF               	incf	btemp+1,f
   483  0809  0008               	return
   484  080A                     stringcode:
   485  080A                     stringdir:
   486  080A  3008               	movlw	high stringdir
   487  080B  008A               	movwf	10
   488  080C  0804               	movf	4,w
   489  080D  0A84               	incf	4,f
   490  080E  0782               	addwf	2,f
   491  080F                     __stringbase:
   492  080F  3400               	retlw	0
   493  0810                     __end_of__stringtab:
   494  0810                     _dpowers:
   495  0810  3401               	retlw	1
   496  0811  3400               	retlw	0
   497  0812  340A               	retlw	10
   498  0813  3400               	retlw	0
   499  0814  3464               	retlw	100
   500  0815  3400               	retlw	0
   501  0816  34E8               	retlw	232
   502  0817  3403               	retlw	3
   503  0818  3410               	retlw	16
   504  0819  3427               	retlw	39
   505  081A                     __end_of_dpowers:
   506  0008                     _PORTD	set	8
   507  000B                     _INTCONbits	set	11
   508  001A                     _RCREG	set	26
   509  001E                     _ADRESH	set	30
   510  001F                     _ADCON0bits	set	31
   511  0019                     _TXREG	set	25
   512  000C                     _PIR1bits	set	12
   513  0018                     _RCSTAbits	set	24
   514  0013                     _SSPBUF	set	19
   515  0014                     _SSPCON	set	20
   516  0039                     _RC1	set	57
   517  003A                     _RC2	set	58
   518  0065                     _RCIF	set	101
   519  0031                     _RB1	set	49
   520  0030                     _RB0	set	48
   521  0058                     _RBIF	set	88
   522  0066                     _ADIF	set	102
   523  0063                     _SSPIF	set	99
   524  005E                     _PEIE	set	94
   525  005F                     _GIE	set	95
   526  009F                     _ADCON1bits	set	159
   527  0081                     _OPTION_REGbits	set	129
   528  0096                     _IOCB	set	150
   529  0095                     _WPUB	set	149
   530  008F                     _OSCCONbits	set	143
   531  0088                     _TRISD	set	136
   532  0087                     _TRISC	set	135
   533  0086                     _TRISB	set	134
   534  0085                     _TRISA	set	133
   535  008C                     _PIE1bits	set	140
   536  0099                     _SPBRG	set	153
   537  0098                     _TXSTAbits	set	152
   538  0091                     _SSPCON2bits	set	145
   539  0087                     _TRISCbits	set	135
   540  0094                     _SSPSTAT	set	148
   541  0093                     _SSPADD	set	147
   542  0091                     _SSPCON2	set	145
   543  04C5                     _TXEN	set	1221
   544  0463                     _SSPIE	set	1123
   545  043C                     _TRISC4	set	1084
   546  043B                     _TRISC3	set	1083
   547  0189                     _ANSELH	set	393
   548  0188                     _ANSEL	set	392
   549  0187                     _BAUDCTLbits	set	391
   550  081A                     STR_1:
   551  081A  3454               	retlw	84	;'T'
   552  081B  3465               	retlw	101	;'e'
   553  081C  346D               	retlw	109	;'m'
   554  081D  3420               	retlw	32	;' '
   555  081E  344C               	retlw	76	;'L'
   556  081F  3475               	retlw	117	;'u'
   557  0820  347A               	retlw	122	;'z'
   558  0821  3420               	retlw	32	;' '
   559  0822  3474               	retlw	116	;'t'
   560  0823  3428               	retlw	40	;'('
   561  0824  3473               	retlw	115	;'s'
   562  0825  3429               	retlw	41	;')'
   563  0826  3420               	retlw	32	;' '
   564  0827  3454               	retlw	84	;'T'
   565  0828  344F               	retlw	79	;'O'
   566  0829  3400               	retlw	0
   567  082A                     STR_12:
   568  082A  3450               	retlw	80	;'P'
   569  082B  3452               	retlw	82	;'R'
   570  082C  3445               	retlw	69	;'E'
   571  082D  3453               	retlw	83	;'S'
   572  082E  3449               	retlw	73	;'I'
   573  082F  344F               	retlw	79	;'O'
   574  0830  344E               	retlw	78	;'N'
   575  0831  3420               	retlw	32	;' '
   576  0832  3441               	retlw	65	;'A'
   577  0833  344C               	retlw	76	;'L'
   578  0834  3454               	retlw	84	;'T'
   579  0835  3441               	retlw	65	;'A'
   580  0836  3400               	retlw	0
   581  0837                     STR_11:
   582  0837  3450               	retlw	80	;'P'
   583  0838  3452               	retlw	82	;'R'
   584  0839  3445               	retlw	69	;'E'
   585  083A  3443               	retlw	67	;'C'
   586  083B  3441               	retlw	65	;'A'
   587  083C  3455               	retlw	85	;'U'
   588  083D  3443               	retlw	67	;'C'
   589  083E  3449               	retlw	73	;'I'
   590  083F  344F               	retlw	79	;'O'
   591  0840  344E               	retlw	78	;'N'
   592  0841  3400               	retlw	0
   593  0842                     STR_2:
   594  0842  3425               	retlw	37	;'%'
   595  0843  3464               	retlw	100	;'d'
   596  0844  3400               	retlw	0
   597  0845                     STR_10:
   598  0845  3453               	retlw	83	;'S'
   599  0846  3469               	retlw	105	;'i'
   600  0847  3400               	retlw	0
   601  0848                     STR_9:
   602  0848  344E               	retlw	78	;'N'
   603  0849  346F               	retlw	111	;'o'
   604  084A  3400               	retlw	0
   605  081A                     
   606                           	psect	cinit
   607  0011                     start_initialization:	
   608                           ; #config settings
   609                           
   610  0011                     __initialization:
   611                           
   612                           ; Clear objects allocated to COMMON
   613  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   614  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   615  0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   616                           
   617                           ; Clear objects allocated to BANK0
   618  0014  1283               	bcf	3,5	;RP0=0, select bank0
   619  0015  1303               	bcf	3,6	;RP1=0, select bank0
   620  0016  01CA               	clrf	__pbssBANK0& (0+127)
   621  0017  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   622  0018  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   623  0019  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   624  001A  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   625  001B  01CF               	clrf	(__pbssBANK0+5)& (0+127)
   626  001C  01D0               	clrf	(__pbssBANK0+6)& (0+127)
   627  001D  01D1               	clrf	(__pbssBANK0+7)& (0+127)
   628  001E  01D2               	clrf	(__pbssBANK0+8)& (0+127)
   629  001F  01D3               	clrf	(__pbssBANK0+9)& (0+127)
   630  0020  01D4               	clrf	(__pbssBANK0+10)& (0+127)
   631  0021  01D5               	clrf	(__pbssBANK0+11)& (0+127)
   632  0022  01D6               	clrf	(__pbssBANK0+12)& (0+127)
   633  0023  01D7               	clrf	(__pbssBANK0+13)& (0+127)
   634  0024  01D8               	clrf	(__pbssBANK0+14)& (0+127)
   635  0025                     end_of_initialization:	
   636                           ;End of C runtime variable initialization code
   637                           
   638  0025                     __end_of__initialization:
   639  0025  0183               	clrf	3
   640  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   641                           
   642                           	psect	bssCOMMON
   643  007B                     __pbssCOMMON:
   644  007B                     _presion1:
   645  007B                     	ds	2
   646  007D                     _temp:
   647  007D                     	ds	1
   648                           
   649                           	psect	bssBANK0
   650  004A                     __pbssBANK0:
   651  004A                     _rc:
   652  004A                     	ds	2
   653  004C                     _tr:
   654  004C                     	ds	2
   655  004E                     _frec:
   656  004E                     	ds	2
   657  0050                     _var:
   658  0050                     	ds	1
   659  0051                     _presion2:
   660  0051                     	ds	1
   661  0052                     _luz:
   662  0052                     	ds	1
   663  0053                     _uni:
   664  0053                     	ds	1
   665  0054                     _dec:
   666  0054                     	ds	1
   667  0055                     _cen:
   668  0055                     	ds	1
   669  0056                     _con:
   670  0056                     	ds	1
   671  0057                     _pot:
   672  0057                     	ds	1
   673  0058                     _buffer:
   674  0058                     	ds	1
   675                           
   676                           	psect	cstackCOMMON
   677  0070                     __pcstackCOMMON:
   678  0070                     ?_Lcd_Init:
   679  0070                     ?_Lcd_Clear:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_ADC_IF:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_I2C_Master_Wait:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_I2C_Master_Start:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Stop:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_my_delay_s:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Division:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_isr:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_setup:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_main:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_Lcd_Cmd:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_Lcd_Write_Char:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?i1___wmul:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     i1___wmul@multiplier:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 2 bytes @ 0x0
   723  0070                     	ds	2
   724  0072                     i1___wmul@multiplicand:
   725                           
   726                           ; 2 bytes @ 0x2
   727  0072                     	ds	2
   728  0074                     ??i1___wmul:
   729  0074                     i1___wmul@product:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 2 bytes @ 0x4
   734  0074                     	ds	2
   735  0076                     ?i1___awdiv:
   736  0076                     i1___awdiv@divisor:	
   737                           ; 2 bytes @ 0x6
   738                           
   739                           
   740                           ; 2 bytes @ 0x6
   741  0076                     	ds	2
   742  0078                     i1___awdiv@dividend:
   743                           
   744                           ; 2 bytes @ 0x8
   745  0078                     	ds	2
   746  007A                     ??i1___awdiv:
   747                           
   748                           ; 1 bytes @ 0xA
   749  007A                     	ds	1
   750                           
   751                           	psect	cstackBANK0
   752  0020                     __pcstackBANK0:
   753  0020                     i1___awdiv@counter:
   754                           
   755                           ; 1 bytes @ 0x0
   756  0020                     	ds	1
   757  0021                     i1___awdiv@sign:
   758                           
   759                           ; 1 bytes @ 0x1
   760  0021                     	ds	1
   761  0022                     i1___awdiv@quotient:
   762                           
   763                           ; 2 bytes @ 0x2
   764  0022                     	ds	2
   765  0024                     ??_isr:
   766                           
   767                           ; 1 bytes @ 0x4
   768  0024                     	ds	4
   769  0028                     ?_ADC_CONFIG:
   770  0028                     ??_ADC_IF:	
   771                           ; 1 bytes @ 0x8
   772                           
   773  0028                     ??_I2C_Master_Wait:	
   774                           ; 1 bytes @ 0x8
   775                           
   776  0028                     ??_I2C_Master_Start:	
   777                           ; 1 bytes @ 0x8
   778                           
   779  0028                     ??_I2C_Master_Stop:	
   780                           ; 1 bytes @ 0x8
   781                           
   782  0028                     ?_I2C_Master_Write:	
   783                           ; 1 bytes @ 0x8
   784                           
   785  0028                     ??_my_delay_s:	
   786                           ; 1 bytes @ 0x8
   787                           
   788  0028                     ?_USART_CONFIG:	
   789                           ; 1 bytes @ 0x8
   790                           
   791  0028                     ??_Lcd_Cmd:	
   792                           ; 1 bytes @ 0x8
   793                           
   794  0028                     ??_Lcd_Write_Char:	
   795                           ; 1 bytes @ 0x8
   796                           
   797  0028                     ?_I2C_Master_Read:	
   798                           ; 1 bytes @ 0x8
   799                           
   800  0028                     ?___wmul:	
   801                           ; 2 bytes @ 0x8
   802                           
   803  0028                     ?___awmod:	
   804                           ; 2 bytes @ 0x8
   805                           
   806  0028                     ?___lwdiv:	
   807                           ; 2 bytes @ 0x8
   808                           
   809  0028                     ?___lldiv:	
   810                           ; 2 bytes @ 0x8
   811                           
   812  0028                     I2C_Master_Write@d:	
   813                           ; 4 bytes @ 0x8
   814                           
   815  0028                     I2C_Master_Read@a:	
   816                           ; 2 bytes @ 0x8
   817                           
   818  0028                     USART_CONFIG@frec:	
   819                           ; 2 bytes @ 0x8
   820                           
   821  0028                     ADC_CONFIG@frec:	
   822                           ; 2 bytes @ 0x8
   823                           
   824  0028                     ___wmul@multiplier:	
   825                           ; 2 bytes @ 0x8
   826                           
   827  0028                     ___awmod@divisor:	
   828                           ; 2 bytes @ 0x8
   829                           
   830  0028                     ___lwdiv@divisor:	
   831                           ; 2 bytes @ 0x8
   832                           
   833  0028                     ___lldiv@divisor:	
   834                           ; 2 bytes @ 0x8
   835                           
   836                           
   837                           ; 4 bytes @ 0x8
   838  0028                     	ds	1
   839  0029                     Lcd_Write_Char@a:
   840                           
   841                           ; 1 bytes @ 0x9
   842  0029                     	ds	1
   843  002A                     ??_ADC_CONFIG:
   844  002A                     ?_Lcd_Write_String:	
   845                           ; 1 bytes @ 0xA
   846                           
   847  002A                     ??_I2C_Master_Write:	
   848                           ; 1 bytes @ 0xA
   849                           
   850  002A                     ??_I2C_Master_Read:	
   851                           ; 1 bytes @ 0xA
   852                           
   853  002A                     Lcd_Cmd@a:	
   854                           ; 1 bytes @ 0xA
   855                           
   856  002A                     USART_CONFIG@tr:	
   857                           ; 1 bytes @ 0xA
   858                           
   859  002A                     Lcd_Write_String@a:	
   860                           ; 2 bytes @ 0xA
   861                           
   862  002A                     ___wmul@multiplicand:	
   863                           ; 2 bytes @ 0xA
   864                           
   865  002A                     ___awmod@dividend:	
   866                           ; 2 bytes @ 0xA
   867                           
   868  002A                     ___lwdiv@dividend:	
   869                           ; 2 bytes @ 0xA
   870                           
   871                           
   872                           ; 2 bytes @ 0xA
   873  002A                     	ds	1
   874  002B                     ??_Lcd_Init:
   875  002B                     ??_Lcd_Clear:	
   876                           ; 1 bytes @ 0xB
   877                           
   878  002B                     ?_Lcd_Set_Cursor:	
   879                           ; 1 bytes @ 0xB
   880                           
   881  002B                     my_delay_s@tiempo:	
   882                           ; 1 bytes @ 0xB
   883                           
   884  002B                     Lcd_Set_Cursor@b:	
   885                           ; 1 bytes @ 0xB
   886                           
   887                           
   888                           ; 1 bytes @ 0xB
   889  002B                     	ds	1
   890  002C                     ??_Lcd_Set_Cursor:
   891  002C                     ??_Lcd_Write_String:	
   892                           ; 1 bytes @ 0xC
   893                           
   894  002C                     ??___wmul:	
   895                           ; 1 bytes @ 0xC
   896                           
   897  002C                     ??___awmod:	
   898                           ; 1 bytes @ 0xC
   899                           
   900  002C                     ??___lwdiv:	
   901                           ; 1 bytes @ 0xC
   902                           
   903  002C                     Lcd_Set_Cursor@a:	
   904                           ; 1 bytes @ 0xC
   905                           
   906  002C                     I2C_Master_Read@temp:	
   907                           ; 1 bytes @ 0xC
   908                           
   909  002C                     USART_CONFIG@rc:	
   910                           ; 2 bytes @ 0xC
   911                           
   912  002C                     ___wmul@product:	
   913                           ; 2 bytes @ 0xC
   914                           
   915  002C                     ___lldiv@dividend:	
   916                           ; 2 bytes @ 0xC
   917                           
   918                           
   919                           ; 4 bytes @ 0xC
   920  002C                     	ds	1
   921  002D                     ___awmod@counter:
   922  002D                     ___lwdiv@quotient:	
   923                           ; 1 bytes @ 0xD
   924                           
   925                           
   926                           ; 2 bytes @ 0xD
   927  002D                     	ds	1
   928  002E                     ??_USART_CONFIG:
   929  002E                     ___awmod@sign:	
   930                           ; 1 bytes @ 0xE
   931                           
   932                           
   933                           ; 1 bytes @ 0xE
   934  002E                     	ds	1
   935  002F                     ?___awdiv:
   936  002F                     ___lwdiv@counter:	
   937                           ; 2 bytes @ 0xF
   938                           
   939  002F                     Lcd_Write_String@i:	
   940                           ; 1 bytes @ 0xF
   941                           
   942  002F                     ___awdiv@divisor:	
   943                           ; 2 bytes @ 0xF
   944                           
   945                           
   946                           ; 2 bytes @ 0xF
   947  002F                     	ds	1
   948  0030                     ??___lldiv:
   949  0030                     ?___lwmod:	
   950                           ; 1 bytes @ 0x10
   951                           
   952  0030                     ___lwmod@divisor:	
   953                           ; 2 bytes @ 0x10
   954                           
   955                           
   956                           ; 2 bytes @ 0x10
   957  0030                     	ds	1
   958  0031                     ___awdiv@dividend:
   959  0031                     ___lldiv@quotient:	
   960                           ; 2 bytes @ 0x11
   961                           
   962                           
   963                           ; 4 bytes @ 0x11
   964  0031                     	ds	1
   965  0032                     ___lwmod@dividend:
   966                           
   967                           ; 2 bytes @ 0x12
   968  0032                     	ds	1
   969  0033                     ??___awdiv:
   970                           
   971                           ; 1 bytes @ 0x13
   972  0033                     	ds	1
   973  0034                     ??___lwmod:
   974  0034                     ___awdiv@counter:	
   975                           ; 1 bytes @ 0x14
   976                           
   977                           
   978                           ; 1 bytes @ 0x14
   979  0034                     	ds	1
   980  0035                     ___lldiv@counter:
   981  0035                     ___awdiv@sign:	
   982                           ; 1 bytes @ 0x15
   983                           
   984  0035                     ___lwmod@counter:	
   985                           ; 1 bytes @ 0x15
   986                           
   987                           
   988                           ; 1 bytes @ 0x15
   989  0035                     	ds	1
   990  0036                     ?_I2C_Master_Init:
   991  0036                     ?_sprintf:	
   992                           ; 1 bytes @ 0x16
   993                           
   994  0036                     sprintf@f:	
   995                           ; 2 bytes @ 0x16
   996                           
   997  0036                     ___awdiv@quotient:	
   998                           ; 1 bytes @ 0x16
   999                           
  1000  0036                     I2C_Master_Init@c:	
  1001                           ; 2 bytes @ 0x16
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x16
  1005  0036                     	ds	2
  1006  0038                     ??_Division:
  1007                           
  1008                           ; 1 bytes @ 0x18
  1009  0038                     	ds	1
  1010  0039                     ??_sprintf:
  1011                           
  1012                           ; 1 bytes @ 0x19
  1013  0039                     	ds	1
  1014  003A                     ??_I2C_Master_Init:
  1015                           
  1016                           ; 1 bytes @ 0x1A
  1017  003A                     	ds	1
  1018  003B                     _Division$1282:
  1019                           
  1020                           ; 2 bytes @ 0x1B
  1021  003B                     	ds	1
  1022  003C                     sprintf@ap:
  1023                           
  1024                           ; 1 bytes @ 0x1C
  1025  003C                     	ds	1
  1026  003D                     Division@y:
  1027  003D                     sprintf@flag:	
  1028                           ; 1 bytes @ 0x1D
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x1D
  1032  003D                     	ds	1
  1033  003E                     ??_setup:
  1034  003E                     sprintf@prec:	
  1035                           ; 1 bytes @ 0x1E
  1036                           
  1037                           
  1038                           ; 1 bytes @ 0x1E
  1039  003E                     	ds	1
  1040  003F                     sprintf@val:
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043  003F                     	ds	2
  1044  0041                     sprintf@sp:
  1045                           
  1046                           ; 1 bytes @ 0x21
  1047  0041                     	ds	1
  1048  0042                     sprintf@c:
  1049                           
  1050                           ; 1 bytes @ 0x22
  1051  0042                     	ds	1
  1052  0043                     ??_main:
  1053                           
  1054                           ; 1 bytes @ 0x23
  1055  0043                     	ds	7
  1056                           
  1057                           	psect	maintext
  1058  0029                     __pmaintext:	
  1059 ;;
  1060 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  1061 ;;
  1062 ;; *************** function _main *****************
  1063 ;; Defined at:
  1064 ;;		line 158 in file "Master_Test.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : B00/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          0       7       0       0       0
  1081 ;;      Totals:         0       7       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels required when called:    5
  1084 ;; This function calls:
  1085 ;;		_ADC_IF
  1086 ;;		_Division
  1087 ;;		_I2C_Master_Read
  1088 ;;		_I2C_Master_Start
  1089 ;;		_I2C_Master_Stop
  1090 ;;		_I2C_Master_Write
  1091 ;;		_Lcd_Clear
  1092 ;;		_Lcd_Set_Cursor
  1093 ;;		_Lcd_Write_String
  1094 ;;		___awdiv
  1095 ;;		___wmul
  1096 ;;		_my_delay_s
  1097 ;;		_setup
  1098 ;;		_sprintf
  1099 ;; This function is called by:
  1100 ;;		Startup code after reset
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _main
  1106  0029                     _main:
  1107  0029                     l2246:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110                           
  1111                           
  1112                           ;Master_Test.c: 159:     setup();
  1113  0029  120A  118A  25C3  120A  118A  	fcall	_setup
  1114  002E                     l2248:
  1115                           
  1116                           ;Master_Test.c: 162:         ADC_IF();
  1117  002E  120A  158A  24F9  120A  118A  	fcall	_ADC_IF
  1118  0033                     l2250:
  1119                           
  1120                           ;Master_Test.c: 164:         I2C_Master_Start();
  1121  0033  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1122  0038                     l2252:
  1123                           
  1124                           ;Master_Test.c: 165:         I2C_Master_Write(0x51);
  1125  0038  3051               	movlw	81
  1126  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1127  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1128  003B  00A8               	movwf	I2C_Master_Write@d
  1129  003C  3000               	movlw	0
  1130  003D  00A9               	movwf	I2C_Master_Write@d+1
  1131  003E  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1132  0043                     l2254:
  1133                           
  1134                           ;Master_Test.c: 166:         temp = I2C_Master_Read(0);
  1135  0043  3000               	movlw	0
  1136  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0046  00A8               	movwf	I2C_Master_Read@a
  1139  0047  00A9               	movwf	I2C_Master_Read@a+1
  1140  0048  120A  158A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1141  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1142  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1143  004F  0828               	movf	?_I2C_Master_Read,w
  1144  0050  00C3               	movwf	??_main
  1145  0051  0843               	movf	??_main,w
  1146  0052  00FD               	movwf	_temp
  1147  0053                     l2256:
  1148                           
  1149                           ;Master_Test.c: 167:         I2C_Master_Stop();
  1150  0053  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1151  0058                     l2258:
  1152                           
  1153                           ;Master_Test.c: 168:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1154  0058  3006               	movlw	6
  1155  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1156  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1157  005B  00C5               	movwf	??_main+2
  1158  005C  3013               	movlw	19
  1159  005D  00C4               	movwf	??_main+1
  1160  005E  30AD               	movlw	173
  1161  005F  00C3               	movwf	??_main
  1162  0060                     u1897:
  1163  0060  0BC3               	decfsz	??_main,f
  1164  0061  2860               	goto	u1897
  1165  0062  0BC4               	decfsz	??_main+1,f
  1166  0063  2860               	goto	u1897
  1167  0064  0BC5               	decfsz	??_main+2,f
  1168  0065  2860               	goto	u1897
  1169  0066                     l2260:
  1170                           
  1171                           ;Master_Test.c: 176:         Division((pot*50/255));
  1172  0066  30FF               	movlw	255
  1173  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0069  00AF               	movwf	___awdiv@divisor
  1176  006A  3000               	movlw	0
  1177  006B  00B0               	movwf	___awdiv@divisor+1
  1178  006C  0857               	movf	_pot,w
  1179  006D  00C3               	movwf	??_main
  1180  006E  01C4               	clrf	??_main+1
  1181  006F  0843               	movf	??_main,w
  1182  0070  00A8               	movwf	___wmul@multiplier
  1183  0071  0844               	movf	??_main+1,w
  1184  0072  00A9               	movwf	___wmul@multiplier+1
  1185  0073  3032               	movlw	50
  1186  0074  00AA               	movwf	___wmul@multiplicand
  1187  0075  3000               	movlw	0
  1188  0076  00AB               	movwf	___wmul@multiplicand+1
  1189  0077  120A  118A  27D5  120A  118A  	fcall	___wmul
  1190  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1191  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1192  007E  0829               	movf	?___wmul+1,w
  1193  007F  00B2               	movwf	___awdiv@dividend+1
  1194  0080  0828               	movf	?___wmul,w
  1195  0081  00B1               	movwf	___awdiv@dividend
  1196  0082  120A  118A  2633  120A  118A  	fcall	___awdiv
  1197  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0089  082F               	movf	?___awdiv,w
  1200  008A  120A  158A  2798  120A  118A  	fcall	_Division
  1201  008F                     l2262:
  1202                           
  1203                           ;Master_Test.c: 177:         Lcd_Set_Cursor(2,13);
  1204  008F  300D               	movlw	13
  1205  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0092  00C3               	movwf	??_main
  1208  0093  0843               	movf	??_main,w
  1209  0094  00AB               	movwf	Lcd_Set_Cursor@b
  1210  0095  3002               	movlw	2
  1211  0096  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  1212  009B                     l2264:
  1213                           
  1214                           ;Master_Test.c: 180:         sprintf(buffer, "%d", dec);
  1215  009B  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1216  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1217  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1218  009E  00C3               	movwf	??_main
  1219  009F  0843               	movf	??_main,w
  1220  00A0  00B6               	movwf	sprintf@f
  1221  00A1  0854               	movf	_dec,w
  1222  00A2  00C4               	movwf	??_main+1
  1223  00A3  01C5               	clrf	??_main+2
  1224  00A4  0844               	movf	??_main+1,w
  1225  00A5  00B7               	movwf	?_sprintf+1
  1226  00A6  0845               	movf	??_main+2,w
  1227  00A7  00B8               	movwf	?_sprintf+2
  1228  00A8  3058               	movlw	(low (_buffer| 0))& (0+255)
  1229  00A9  120A  118A  2460  120A  118A  	fcall	_sprintf
  1230  00AE                     l2266:
  1231                           
  1232                           ;Master_Test.c: 181:         Lcd_Write_String(buffer);
  1233  00AE  3058               	movlw	(low (_buffer| 0))& (0+255)
  1234  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1235  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1236  00B1  00AA               	movwf	Lcd_Write_String@a
  1237  00B2  3000               	movlw	0
  1238  00B3  00AB               	movwf	Lcd_Write_String@a+1
  1239  00B4  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1240  00B9                     l2268:
  1241                           
  1242                           ;Master_Test.c: 182:         sprintf(buffer, "%d", uni);
  1243  00B9  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1244  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00BC  00C3               	movwf	??_main
  1247  00BD  0843               	movf	??_main,w
  1248  00BE  00B6               	movwf	sprintf@f
  1249  00BF  0853               	movf	_uni,w
  1250  00C0  00C4               	movwf	??_main+1
  1251  00C1  01C5               	clrf	??_main+2
  1252  00C2  0844               	movf	??_main+1,w
  1253  00C3  00B7               	movwf	?_sprintf+1
  1254  00C4  0845               	movf	??_main+2,w
  1255  00C5  00B8               	movwf	?_sprintf+2
  1256  00C6  3058               	movlw	(low (_buffer| 0))& (0+255)
  1257  00C7  120A  118A  2460  120A  118A  	fcall	_sprintf
  1258  00CC                     l2270:
  1259                           
  1260                           ;Master_Test.c: 183:         Lcd_Write_String(buffer);
  1261  00CC  3058               	movlw	(low (_buffer| 0))& (0+255)
  1262  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1263  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1264  00CF  00AA               	movwf	Lcd_Write_String@a
  1265  00D0  3000               	movlw	0
  1266  00D1  00AB               	movwf	Lcd_Write_String@a+1
  1267  00D2  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1268  00D7                     l2272:
  1269                           
  1270                           ;Master_Test.c: 186:         Division(temp*397/255);
  1271  00D7  30FF               	movlw	255
  1272  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1273  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1274  00DA  00AF               	movwf	___awdiv@divisor
  1275  00DB  3000               	movlw	0
  1276  00DC  00B0               	movwf	___awdiv@divisor+1
  1277  00DD  087D               	movf	_temp,w
  1278  00DE  00C3               	movwf	??_main
  1279  00DF  01C4               	clrf	??_main+1
  1280  00E0  0843               	movf	??_main,w
  1281  00E1  00A8               	movwf	___wmul@multiplier
  1282  00E2  0844               	movf	??_main+1,w
  1283  00E3  00A9               	movwf	___wmul@multiplier+1
  1284  00E4  308D               	movlw	141
  1285  00E5  00AA               	movwf	___wmul@multiplicand
  1286  00E6  3001               	movlw	1
  1287  00E7  00AB               	movwf	___wmul@multiplicand+1
  1288  00E8  120A  118A  27D5  120A  118A  	fcall	___wmul
  1289  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1290  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1291  00EF  0829               	movf	?___wmul+1,w
  1292  00F0  00B2               	movwf	___awdiv@dividend+1
  1293  00F1  0828               	movf	?___wmul,w
  1294  00F2  00B1               	movwf	___awdiv@dividend
  1295  00F3  120A  118A  2633  120A  118A  	fcall	___awdiv
  1296  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1297  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1298  00FA  082F               	movf	?___awdiv,w
  1299  00FB  120A  158A  2798  120A  118A  	fcall	_Division
  1300  0100                     l2274:
  1301                           
  1302                           ;Master_Test.c: 187:         Lcd_Set_Cursor(2,1);
  1303  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0102  01AB               	clrf	Lcd_Set_Cursor@b
  1306  0103  0AAB               	incf	Lcd_Set_Cursor@b,f
  1307  0104  3002               	movlw	2
  1308  0105  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  1309  010A                     l2276:
  1310                           
  1311                           ;Master_Test.c: 190:         sprintf(buffer, "%d", dec);
  1312  010A  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1313  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1314  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1315  010D  00C3               	movwf	??_main
  1316  010E  0843               	movf	??_main,w
  1317  010F  00B6               	movwf	sprintf@f
  1318  0110  0854               	movf	_dec,w
  1319  0111  00C4               	movwf	??_main+1
  1320  0112  01C5               	clrf	??_main+2
  1321  0113  0844               	movf	??_main+1,w
  1322  0114  00B7               	movwf	?_sprintf+1
  1323  0115  0845               	movf	??_main+2,w
  1324  0116  00B8               	movwf	?_sprintf+2
  1325  0117  3058               	movlw	(low (_buffer| 0))& (0+255)
  1326  0118  120A  118A  2460  120A  118A  	fcall	_sprintf
  1327  011D                     l2278:
  1328                           
  1329                           ;Master_Test.c: 191:         Lcd_Write_String(buffer);
  1330  011D  3058               	movlw	(low (_buffer| 0))& (0+255)
  1331  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1332  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0120  00AA               	movwf	Lcd_Write_String@a
  1334  0121  3000               	movlw	0
  1335  0122  00AB               	movwf	Lcd_Write_String@a+1
  1336  0123  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1337  0128                     l2280:
  1338                           
  1339                           ;Master_Test.c: 192:         sprintf(buffer, "%d", uni);
  1340  0128  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1341  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1342  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1343  012B  00C3               	movwf	??_main
  1344  012C  0843               	movf	??_main,w
  1345  012D  00B6               	movwf	sprintf@f
  1346  012E  0853               	movf	_uni,w
  1347  012F  00C4               	movwf	??_main+1
  1348  0130  01C5               	clrf	??_main+2
  1349  0131  0844               	movf	??_main+1,w
  1350  0132  00B7               	movwf	?_sprintf+1
  1351  0133  0845               	movf	??_main+2,w
  1352  0134  00B8               	movwf	?_sprintf+2
  1353  0135  3058               	movlw	(low (_buffer| 0))& (0+255)
  1354  0136  120A  118A  2460  120A  118A  	fcall	_sprintf
  1355  013B                     l2282:
  1356                           
  1357                           ;Master_Test.c: 193:         Lcd_Write_String(buffer);
  1358  013B  3058               	movlw	(low (_buffer| 0))& (0+255)
  1359  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1360  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1361  013E  00AA               	movwf	Lcd_Write_String@a
  1362  013F  3000               	movlw	0
  1363  0140  00AB               	movwf	Lcd_Write_String@a+1
  1364  0141  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1365  0146                     l2284:
  1366                           
  1367                           ;Master_Test.c: 195:         I2C_Master_Start();
  1368  0146  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1369  014B                     l2286:
  1370                           
  1371                           ;Master_Test.c: 196:         I2C_Master_Write(0x31);
  1372  014B  3031               	movlw	49
  1373  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1374  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1375  014E  00A8               	movwf	I2C_Master_Write@d
  1376  014F  3000               	movlw	0
  1377  0150  00A9               	movwf	I2C_Master_Write@d+1
  1378  0151  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1379  0156                     l2288:
  1380                           
  1381                           ;Master_Test.c: 197:         luz = I2C_Master_Read(0);
  1382  0156  3000               	movlw	0
  1383  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0159  00A8               	movwf	I2C_Master_Read@a
  1386  015A  00A9               	movwf	I2C_Master_Read@a+1
  1387  015B  120A  158A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1388  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0162  0828               	movf	?_I2C_Master_Read,w
  1391  0163  00C3               	movwf	??_main
  1392  0164  0843               	movf	??_main,w
  1393  0165  00D2               	movwf	_luz
  1394  0166                     l2290:
  1395                           
  1396                           ;Master_Test.c: 198:         I2C_Master_Stop();
  1397  0166  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1398  016B                     l2292:
  1399                           
  1400                           ;Master_Test.c: 199:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1401  016B  3082               	movlw	130
  1402  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1403  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1404  016E  00C4               	movwf	??_main+1
  1405  016F  30DD               	movlw	221
  1406  0170  00C3               	movwf	??_main
  1407  0171                     u1907:
  1408  0171  0BC3               	decfsz	??_main,f
  1409  0172  2971               	goto	u1907
  1410  0173  0BC4               	decfsz	??_main+1,f
  1411  0174  2971               	goto	u1907
  1412  0175                     l2294:
  1413                           
  1414                           ;Master_Test.c: 207:         Division(con);
  1415  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0177  0856               	movf	_con,w
  1418  0178  120A  158A  2798  120A  118A  	fcall	_Division
  1419  017D                     l2296:
  1420                           
  1421                           ;Master_Test.c: 208:         Lcd_Set_Cursor(2,8);
  1422  017D  3008               	movlw	8
  1423  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1424  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0180  00C3               	movwf	??_main
  1426  0181  0843               	movf	??_main,w
  1427  0182  00AB               	movwf	Lcd_Set_Cursor@b
  1428  0183  3002               	movlw	2
  1429  0184  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  1430  0189                     l2298:
  1431                           
  1432                           ;Master_Test.c: 209:         sprintf(buffer, "%d", cen);
  1433  0189  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1434  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1435  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1436  018C  00C3               	movwf	??_main
  1437  018D  0843               	movf	??_main,w
  1438  018E  00B6               	movwf	sprintf@f
  1439  018F  0855               	movf	_cen,w
  1440  0190  00C4               	movwf	??_main+1
  1441  0191  01C5               	clrf	??_main+2
  1442  0192  0844               	movf	??_main+1,w
  1443  0193  00B7               	movwf	?_sprintf+1
  1444  0194  0845               	movf	??_main+2,w
  1445  0195  00B8               	movwf	?_sprintf+2
  1446  0196  3058               	movlw	(low (_buffer| 0))& (0+255)
  1447  0197  120A  118A  2460  120A  118A  	fcall	_sprintf
  1448  019C                     l2300:
  1449                           
  1450                           ;Master_Test.c: 210:         Lcd_Write_String(buffer);
  1451  019C  3058               	movlw	(low (_buffer| 0))& (0+255)
  1452  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1453  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1454  019F  00AA               	movwf	Lcd_Write_String@a
  1455  01A0  3000               	movlw	0
  1456  01A1  00AB               	movwf	Lcd_Write_String@a+1
  1457  01A2  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1458  01A7                     l2302:
  1459                           
  1460                           ;Master_Test.c: 211:         sprintf(buffer, "%d", dec);
  1461  01A7  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1462  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01AA  00C3               	movwf	??_main
  1465  01AB  0843               	movf	??_main,w
  1466  01AC  00B6               	movwf	sprintf@f
  1467  01AD  0854               	movf	_dec,w
  1468  01AE  00C4               	movwf	??_main+1
  1469  01AF  01C5               	clrf	??_main+2
  1470  01B0  0844               	movf	??_main+1,w
  1471  01B1  00B7               	movwf	?_sprintf+1
  1472  01B2  0845               	movf	??_main+2,w
  1473  01B3  00B8               	movwf	?_sprintf+2
  1474  01B4  3058               	movlw	(low (_buffer| 0))& (0+255)
  1475  01B5  120A  118A  2460  120A  118A  	fcall	_sprintf
  1476  01BA                     l2304:
  1477                           
  1478                           ;Master_Test.c: 212:         Lcd_Write_String(buffer);
  1479  01BA  3058               	movlw	(low (_buffer| 0))& (0+255)
  1480  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1481  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1482  01BD  00AA               	movwf	Lcd_Write_String@a
  1483  01BE  3000               	movlw	0
  1484  01BF  00AB               	movwf	Lcd_Write_String@a+1
  1485  01C0  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1486  01C5                     l2306:
  1487                           
  1488                           ;Master_Test.c: 213:         sprintf(buffer, "%d", uni);
  1489  01C5  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1490  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1491  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1492  01C8  00C3               	movwf	??_main
  1493  01C9  0843               	movf	??_main,w
  1494  01CA  00B6               	movwf	sprintf@f
  1495  01CB  0853               	movf	_uni,w
  1496  01CC  00C4               	movwf	??_main+1
  1497  01CD  01C5               	clrf	??_main+2
  1498  01CE  0844               	movf	??_main+1,w
  1499  01CF  00B7               	movwf	?_sprintf+1
  1500  01D0  0845               	movf	??_main+2,w
  1501  01D1  00B8               	movwf	?_sprintf+2
  1502  01D2  3058               	movlw	(low (_buffer| 0))& (0+255)
  1503  01D3  120A  118A  2460  120A  118A  	fcall	_sprintf
  1504  01D8                     l2308:
  1505                           
  1506                           ;Master_Test.c: 214:         Lcd_Write_String(buffer);
  1507  01D8  3058               	movlw	(low (_buffer| 0))& (0+255)
  1508  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1509  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1510  01DB  00AA               	movwf	Lcd_Write_String@a
  1511  01DC  3000               	movlw	0
  1512  01DD  00AB               	movwf	Lcd_Write_String@a+1
  1513  01DE  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1514  01E3                     l2310:
  1515                           
  1516                           ;Master_Test.c: 216:         I2C_Master_Start();
  1517  01E3  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1518  01E8                     l2312:
  1519                           
  1520                           ;Master_Test.c: 217:         I2C_Master_Write(0xEE);
  1521  01E8  30EE               	movlw	238
  1522  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1523  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1524  01EB  00A8               	movwf	I2C_Master_Write@d
  1525  01EC  3000               	movlw	0
  1526  01ED  00A9               	movwf	I2C_Master_Write@d+1
  1527  01EE  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1528  01F3                     l2314:
  1529                           
  1530                           ;Master_Test.c: 218:         I2C_Master_Write(0B11110110);
  1531  01F3  30F6               	movlw	246
  1532  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1533  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1534  01F6  00A8               	movwf	I2C_Master_Write@d
  1535  01F7  3000               	movlw	0
  1536  01F8  00A9               	movwf	I2C_Master_Write@d+1
  1537  01F9  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1538  01FE                     l2316:
  1539                           
  1540                           ;Master_Test.c: 219:         I2C_Master_Stop();
  1541  01FE  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1542  0203                     l2318:
  1543                           
  1544                           ;Master_Test.c: 220:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1545  0203  3082               	movlw	130
  1546  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0206  00C4               	movwf	??_main+1
  1549  0207  30DD               	movlw	221
  1550  0208  00C3               	movwf	??_main
  1551  0209                     u1917:
  1552  0209  0BC3               	decfsz	??_main,f
  1553  020A  2A09               	goto	u1917
  1554  020B  0BC4               	decfsz	??_main+1,f
  1555  020C  2A09               	goto	u1917
  1556  020D                     l2320:
  1557                           
  1558                           ;Master_Test.c: 222:         I2C_Master_Start();
  1559  020D  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1560  0212                     l2322:
  1561                           
  1562                           ;Master_Test.c: 223:         I2C_Master_Write(0xEE | 1);
  1563  0212  30EF               	movlw	239
  1564  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0215  00A8               	movwf	I2C_Master_Write@d
  1567  0216  3000               	movlw	0
  1568  0217  00A9               	movwf	I2C_Master_Write@d+1
  1569  0218  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1570  021D                     l2324:
  1571                           
  1572                           ;Master_Test.c: 224:         var = I2C_Master_Read(0);
  1573  021D  3000               	movlw	0
  1574  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1575  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0220  00A8               	movwf	I2C_Master_Read@a
  1577  0221  00A9               	movwf	I2C_Master_Read@a+1
  1578  0222  120A  158A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1579  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0229  0828               	movf	?_I2C_Master_Read,w
  1582  022A  00C3               	movwf	??_main
  1583  022B  0843               	movf	??_main,w
  1584  022C  00D0               	movwf	_var
  1585  022D                     l2326:
  1586                           
  1587                           ;Master_Test.c: 225:         presion1 = var<<8;
  1588  022D  0850               	movf	_var,w
  1589  022E  00C3               	movwf	??_main
  1590  022F  01C4               	clrf	??_main+1
  1591  0230  0843               	movf	??_main,w
  1592  0231  00C4               	movwf	??_main+1
  1593  0232  01C3               	clrf	??_main
  1594  0233  0843               	movf	??_main,w
  1595  0234  00FB               	movwf	_presion1
  1596  0235  0844               	movf	??_main+1,w
  1597  0236  00FC               	movwf	_presion1+1
  1598  0237                     l2328:
  1599                           
  1600                           ;Master_Test.c: 226:         var = I2C_Master_Read(0);
  1601  0237  3000               	movlw	0
  1602  0238  00A8               	movwf	I2C_Master_Read@a
  1603  0239  00A9               	movwf	I2C_Master_Read@a+1
  1604  023A  120A  158A  25BE  120A  118A  	fcall	_I2C_Master_Read
  1605  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0241  0828               	movf	?_I2C_Master_Read,w
  1608  0242  00C3               	movwf	??_main
  1609  0243  0843               	movf	??_main,w
  1610  0244  00D0               	movwf	_var
  1611  0245                     l2330:
  1612                           
  1613                           ;Master_Test.c: 227:         I2C_Master_Stop();
  1614  0245  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1615  024A                     l2332:
  1616                           
  1617                           ;Master_Test.c: 228:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1618  024A  3082               	movlw	130
  1619  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1620  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1621  024D  00C4               	movwf	??_main+1
  1622  024E  30DD               	movlw	221
  1623  024F  00C3               	movwf	??_main
  1624  0250                     u1927:
  1625  0250  0BC3               	decfsz	??_main,f
  1626  0251  2A50               	goto	u1927
  1627  0252  0BC4               	decfsz	??_main+1,f
  1628  0253  2A50               	goto	u1927
  1629  0254                     l2334:
  1630                           
  1631                           ;Master_Test.c: 229:         presion1 = presion1 & var;
  1632  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0256  0850               	movf	_var,w
  1635  0257  057B               	andwf	_presion1,w
  1636  0258  00C3               	movwf	??_main
  1637  0259  01C4               	clrf	??_main+1
  1638  025A  0843               	movf	??_main,w
  1639  025B  00FB               	movwf	_presion1
  1640  025C  0844               	movf	??_main+1,w
  1641  025D  00FC               	movwf	_presion1+1
  1642  025E                     l2336:
  1643                           
  1644                           ;Master_Test.c: 230:         presion1 = presion1+968;
  1645  025E  087B               	movf	_presion1,w
  1646  025F  3EC8               	addlw	200
  1647  0260  00FB               	movwf	_presion1
  1648  0261  087C               	movf	_presion1+1,w
  1649  0262  1803               	skipnc
  1650  0263  3E01               	addlw	1
  1651  0264  3E03               	addlw	3
  1652  0265  00FC               	movwf	_presion1+1
  1653  0266                     l2338:
  1654                           
  1655                           ;Master_Test.c: 231:         presion1 = presion1/1000;
  1656  0266  30E8               	movlw	232
  1657  0267  00AF               	movwf	___awdiv@divisor
  1658  0268  3003               	movlw	3
  1659  0269  00B0               	movwf	___awdiv@divisor+1
  1660  026A  087C               	movf	_presion1+1,w
  1661  026B  00B2               	movwf	___awdiv@dividend+1
  1662  026C  087B               	movf	_presion1,w
  1663  026D  00B1               	movwf	___awdiv@dividend
  1664  026E  120A  118A  2633  120A  118A  	fcall	___awdiv
  1665  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0275  0830               	movf	?___awdiv+1,w
  1668  0276  00FC               	movwf	_presion1+1
  1669  0277  082F               	movf	?___awdiv,w
  1670  0278  00FB               	movwf	_presion1
  1671  0279                     l2340:
  1672                           
  1673                           ;Master_Test.c: 235:         if(luz==0){
  1674  0279  0852               	movf	_luz,w
  1675  027A  1D03               	btfss	3,2
  1676  027B  2A7D               	goto	u1831
  1677  027C  2A7E               	goto	u1830
  1678  027D                     u1831:
  1679  027D  2AE5               	goto	l2366
  1680  027E                     u1830:
  1681  027E                     l2342:
  1682                           
  1683                           ;Master_Test.c: 237:             Lcd_Set_Cursor(2, 4);
  1684  027E  3004               	movlw	4
  1685  027F  00C3               	movwf	??_main
  1686  0280  0843               	movf	??_main,w
  1687  0281  00AB               	movwf	Lcd_Set_Cursor@b
  1688  0282  3002               	movlw	2
  1689  0283  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  1690  0288                     l2344:
  1691                           
  1692                           ;Master_Test.c: 238:             Lcd_Write_String("No");
  1693  0288  3039               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1694  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1695  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1696  028B  00AA               	movwf	Lcd_Write_String@a
  1697  028C  3080               	movlw	128
  1698  028D  00AB               	movwf	Lcd_Write_String@a+1
  1699  028E  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1700  0293                     l2346:
  1701                           
  1702                           ;Master_Test.c: 240:             I2C_Master_Start();
  1703  0293  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1704  0298                     l2348:
  1705                           
  1706                           ;Master_Test.c: 241:             I2C_Master_Write(0x50);
  1707  0298  3050               	movlw	80
  1708  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1709  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1710  029B  00A8               	movwf	I2C_Master_Write@d
  1711  029C  3000               	movlw	0
  1712  029D  00A9               	movwf	I2C_Master_Write@d+1
  1713  029E  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1714  02A3                     l2350:
  1715                           
  1716                           ;Master_Test.c: 242:             I2C_Master_Write(0x01);
  1717  02A3  3001               	movlw	1
  1718  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1719  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1720  02A6  00A8               	movwf	I2C_Master_Write@d
  1721  02A7  3000               	movlw	0
  1722  02A8  00A9               	movwf	I2C_Master_Write@d+1
  1723  02A9  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1724  02AE                     l2352:
  1725                           
  1726                           ;Master_Test.c: 243:             I2C_Master_Stop();
  1727  02AE  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1728  02B3                     l2354:
  1729                           
  1730                           ;Master_Test.c: 244:             my_delay_s(con);
  1731  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1732  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1733  02B5  0856               	movf	_con,w
  1734  02B6  120A  158A  2531  120A  118A  	fcall	_my_delay_s
  1735  02BB                     l2356:
  1736                           
  1737                           ;Master_Test.c: 246:             I2C_Master_Start();
  1738  02BB  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1739  02C0                     l2358:
  1740                           
  1741                           ;Master_Test.c: 247:             I2C_Master_Write(0x50);
  1742  02C0  3050               	movlw	80
  1743  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1744  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1745  02C3  00A8               	movwf	I2C_Master_Write@d
  1746  02C4  3000               	movlw	0
  1747  02C5  00A9               	movwf	I2C_Master_Write@d+1
  1748  02C6  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1749  02CB                     l2360:
  1750                           
  1751                           ;Master_Test.c: 248:             I2C_Master_Write(0x00);
  1752  02CB  3000               	movlw	0
  1753  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1754  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1755  02CE  00A8               	movwf	I2C_Master_Write@d
  1756  02CF  00A9               	movwf	I2C_Master_Write@d+1
  1757  02D0  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1758  02D5                     l2362:
  1759                           
  1760                           ;Master_Test.c: 249:             I2C_Master_Stop();
  1761  02D5  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1762  02DA                     l2364:
  1763                           
  1764                           ;Master_Test.c: 250:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1765  02DA  3082               	movlw	130
  1766  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1767  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1768  02DD  00C4               	movwf	??_main+1
  1769  02DE  30DD               	movlw	221
  1770  02DF  00C3               	movwf	??_main
  1771  02E0                     u1937:
  1772  02E0  0BC3               	decfsz	??_main,f
  1773  02E1  2AE0               	goto	u1937
  1774  02E2  0BC4               	decfsz	??_main+1,f
  1775  02E3  2AE0               	goto	u1937
  1776                           
  1777                           ;Master_Test.c: 251:         }
  1778  02E4  2AFF               	goto	l2372
  1779  02E5                     l2366:
  1780  02E5  0352               	decf	_luz,w
  1781  02E6  1D03               	btfss	3,2
  1782  02E7  2AE9               	goto	u1841
  1783  02E8  2AEA               	goto	u1840
  1784  02E9                     u1841:
  1785  02E9  2AFF               	goto	l2372
  1786  02EA                     u1840:
  1787  02EA                     l2368:
  1788                           
  1789                           ;Master_Test.c: 253:             Lcd_Set_Cursor(2, 4);
  1790  02EA  3004               	movlw	4
  1791  02EB  00C3               	movwf	??_main
  1792  02EC  0843               	movf	??_main,w
  1793  02ED  00AB               	movwf	Lcd_Set_Cursor@b
  1794  02EE  3002               	movlw	2
  1795  02EF  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  1796  02F4                     l2370:
  1797                           
  1798                           ;Master_Test.c: 254:             Lcd_Write_String("Si");
  1799  02F4  3036               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1800  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1801  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1802  02F7  00AA               	movwf	Lcd_Write_String@a
  1803  02F8  3080               	movlw	128
  1804  02F9  00AB               	movwf	Lcd_Write_String@a+1
  1805  02FA  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  1806  02FF                     l2372:
  1807                           
  1808                           ;Master_Test.c: 257:         if((temp*400/255)>=(pot*50/255)){
  1809  02FF  30FF               	movlw	255
  1810  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0302  00AF               	movwf	___awdiv@divisor
  1813  0303  3000               	movlw	0
  1814  0304  00B0               	movwf	___awdiv@divisor+1
  1815  0305  087D               	movf	_temp,w
  1816  0306  00C3               	movwf	??_main
  1817  0307  01C4               	clrf	??_main+1
  1818  0308  0843               	movf	??_main,w
  1819  0309  00A8               	movwf	___wmul@multiplier
  1820  030A  0844               	movf	??_main+1,w
  1821  030B  00A9               	movwf	___wmul@multiplier+1
  1822  030C  3090               	movlw	144
  1823  030D  00AA               	movwf	___wmul@multiplicand
  1824  030E  3001               	movlw	1
  1825  030F  00AB               	movwf	___wmul@multiplicand+1
  1826  0310  120A  118A  27D5  120A  118A  	fcall	___wmul
  1827  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0317  0829               	movf	?___wmul+1,w
  1830  0318  00B2               	movwf	___awdiv@dividend+1
  1831  0319  0828               	movf	?___wmul,w
  1832  031A  00B1               	movwf	___awdiv@dividend
  1833  031B  120A  118A  2633  120A  118A  	fcall	___awdiv
  1834  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0322  082F               	movf	?___awdiv,w
  1837  0323  00C5               	movwf	??_main+2
  1838  0324  0830               	movf	?___awdiv+1,w
  1839  0325  00C6               	movwf	??_main+3
  1840  0326  30FF               	movlw	255
  1841  0327  00AF               	movwf	___awdiv@divisor
  1842  0328  3000               	movlw	0
  1843  0329  00B0               	movwf	___awdiv@divisor+1
  1844  032A  0857               	movf	_pot,w
  1845  032B  00C7               	movwf	??_main+4
  1846  032C  01C8               	clrf	??_main+5
  1847  032D  0847               	movf	??_main+4,w
  1848  032E  00A8               	movwf	___wmul@multiplier
  1849  032F  0848               	movf	??_main+5,w
  1850  0330  00A9               	movwf	___wmul@multiplier+1
  1851  0331  3032               	movlw	50
  1852  0332  00AA               	movwf	___wmul@multiplicand
  1853  0333  3000               	movlw	0
  1854  0334  00AB               	movwf	___wmul@multiplicand+1
  1855  0335  120A  118A  27D5  120A  118A  	fcall	___wmul
  1856  033A  1283               	bcf	3,5	;RP0=0, select bank0
  1857  033B  1303               	bcf	3,6	;RP1=0, select bank0
  1858  033C  0829               	movf	?___wmul+1,w
  1859  033D  00B2               	movwf	___awdiv@dividend+1
  1860  033E  0828               	movf	?___wmul,w
  1861  033F  00B1               	movwf	___awdiv@dividend
  1862  0340  120A  118A  2633  120A  118A  	fcall	___awdiv
  1863  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0347  0846               	movf	??_main+3,w
  1866  0348  3A80               	xorlw	128
  1867  0349  00C9               	movwf	??_main+6
  1868  034A  0830               	movf	?___awdiv+1,w
  1869  034B  3A80               	xorlw	128
  1870  034C  0249               	subwf	??_main+6,w
  1871  034D  1D03               	skipz
  1872  034E  2B51               	goto	u1855
  1873  034F  082F               	movf	?___awdiv,w
  1874  0350  0245               	subwf	??_main+2,w
  1875  0351                     u1855:
  1876  0351  1C03               	skipc
  1877  0352  2B54               	goto	u1851
  1878  0353  2B55               	goto	u1850
  1879  0354                     u1851:
  1880  0354  2B80               	goto	l2378
  1881  0355                     u1850:
  1882  0355                     l2374:
  1883                           
  1884                           ;Master_Test.c: 258:             I2C_Master_Start();
  1885  0355  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  1886                           
  1887                           ;Master_Test.c: 259:             I2C_Master_Write(0x30);
  1888  035A  3030               	movlw	48
  1889  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1890  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1891  035D  00A8               	movwf	I2C_Master_Write@d
  1892  035E  3000               	movlw	0
  1893  035F  00A9               	movwf	I2C_Master_Write@d+1
  1894  0360  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1895                           
  1896                           ;Master_Test.c: 260:             I2C_Master_Write(0xf0);
  1897  0365  30F0               	movlw	240
  1898  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0368  00A8               	movwf	I2C_Master_Write@d
  1901  0369  3000               	movlw	0
  1902  036A  00A9               	movwf	I2C_Master_Write@d+1
  1903  036B  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  1904                           
  1905                           ;Master_Test.c: 261:             I2C_Master_Stop();
  1906  0370  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  1907  0375                     l2376:
  1908                           
  1909                           ;Master_Test.c: 262:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1910  0375  3082               	movlw	130
  1911  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0378  00C4               	movwf	??_main+1
  1914  0379  30DD               	movlw	221
  1915  037A  00C3               	movwf	??_main
  1916  037B                     u1947:
  1917  037B  0BC3               	decfsz	??_main,f
  1918  037C  2B7B               	goto	u1947
  1919  037D  0BC4               	decfsz	??_main+1,f
  1920  037E  2B7B               	goto	u1947
  1921                           
  1922                           ;Master_Test.c: 263:         }
  1923  037F  2BF6               	goto	l2384
  1924  0380                     l2378:
  1925  0380  30FF               	movlw	255
  1926  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0383  00AF               	movwf	___awdiv@divisor
  1929  0384  3000               	movlw	0
  1930  0385  00B0               	movwf	___awdiv@divisor+1
  1931  0386  087D               	movf	_temp,w
  1932  0387  00C3               	movwf	??_main
  1933  0388  01C4               	clrf	??_main+1
  1934  0389  0843               	movf	??_main,w
  1935  038A  00A8               	movwf	___wmul@multiplier
  1936  038B  0844               	movf	??_main+1,w
  1937  038C  00A9               	movwf	___wmul@multiplier+1
  1938  038D  3090               	movlw	144
  1939  038E  00AA               	movwf	___wmul@multiplicand
  1940  038F  3001               	movlw	1
  1941  0390  00AB               	movwf	___wmul@multiplicand+1
  1942  0391  120A  118A  27D5  120A  118A  	fcall	___wmul
  1943  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0398  0829               	movf	?___wmul+1,w
  1946  0399  00B2               	movwf	___awdiv@dividend+1
  1947  039A  0828               	movf	?___wmul,w
  1948  039B  00B1               	movwf	___awdiv@dividend
  1949  039C  120A  118A  2633  120A  118A  	fcall	___awdiv
  1950  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03A3  082F               	movf	?___awdiv,w
  1953  03A4  00C5               	movwf	??_main+2
  1954  03A5  0830               	movf	?___awdiv+1,w
  1955  03A6  00C6               	movwf	??_main+3
  1956  03A7  30FF               	movlw	255
  1957  03A8  00AF               	movwf	___awdiv@divisor
  1958  03A9  3000               	movlw	0
  1959  03AA  00B0               	movwf	___awdiv@divisor+1
  1960  03AB  0857               	movf	_pot,w
  1961  03AC  00C7               	movwf	??_main+4
  1962  03AD  01C8               	clrf	??_main+5
  1963  03AE  0847               	movf	??_main+4,w
  1964  03AF  00A8               	movwf	___wmul@multiplier
  1965  03B0  0848               	movf	??_main+5,w
  1966  03B1  00A9               	movwf	___wmul@multiplier+1
  1967  03B2  3032               	movlw	50
  1968  03B3  00AA               	movwf	___wmul@multiplicand
  1969  03B4  3000               	movlw	0
  1970  03B5  00AB               	movwf	___wmul@multiplicand+1
  1971  03B6  120A  118A  27D5  120A  118A  	fcall	___wmul
  1972  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1973  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1974  03BD  0829               	movf	?___wmul+1,w
  1975  03BE  00B2               	movwf	___awdiv@dividend+1
  1976  03BF  0828               	movf	?___wmul,w
  1977  03C0  00B1               	movwf	___awdiv@dividend
  1978  03C1  120A  118A  2633  120A  118A  	fcall	___awdiv
  1979  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1980  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1981  03C8  0846               	movf	??_main+3,w
  1982  03C9  3A80               	xorlw	128
  1983  03CA  00C9               	movwf	??_main+6
  1984  03CB  0830               	movf	?___awdiv+1,w
  1985  03CC  3A80               	xorlw	128
  1986  03CD  0249               	subwf	??_main+6,w
  1987  03CE  1D03               	skipz
  1988  03CF  2BD2               	goto	u1865
  1989  03D0  082F               	movf	?___awdiv,w
  1990  03D1  0245               	subwf	??_main+2,w
  1991  03D2                     u1865:
  1992  03D2  1803               	skipnc
  1993  03D3  2BD5               	goto	u1861
  1994  03D4  2BD6               	goto	u1860
  1995  03D5                     u1861:
  1996  03D5  2BF6               	goto	l2384
  1997  03D6                     u1860:
  1998  03D6                     l2380:
  1999                           
  2000                           ;Master_Test.c: 265:             I2C_Master_Start();
  2001  03D6  120A  158A  24C3  120A  118A  	fcall	_I2C_Master_Start
  2002                           
  2003                           ;Master_Test.c: 266:             I2C_Master_Write(0x30);
  2004  03DB  3030               	movlw	48
  2005  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2006  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2007  03DE  00A8               	movwf	I2C_Master_Write@d
  2008  03DF  3000               	movlw	0
  2009  03E0  00A9               	movwf	I2C_Master_Write@d+1
  2010  03E1  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  2011                           
  2012                           ;Master_Test.c: 267:             I2C_Master_Write(0x00);
  2013  03E6  3000               	movlw	0
  2014  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2015  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2016  03E9  00A8               	movwf	I2C_Master_Write@d
  2017  03EA  00A9               	movwf	I2C_Master_Write@d+1
  2018  03EB  120A  158A  24D5  120A  118A  	fcall	_I2C_Master_Write
  2019                           
  2020                           ;Master_Test.c: 268:             I2C_Master_Stop();
  2021  03F0  120A  158A  24CC  120A  118A  	fcall	_I2C_Master_Stop
  2022  03F5  2B75               	goto	l2376
  2023  03F6                     l2384:
  2024                           
  2025                           ;Master_Test.c: 272:         if((presion1)>=(presion2)){
  2026  03F6  087C               	movf	_presion1+1,w
  2027  03F7  3A80               	xorlw	128
  2028  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2029  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2030  03FA  00C3               	movwf	??_main
  2031  03FB  3080               	movlw	128
  2032  03FC  0243               	subwf	??_main,w
  2033  03FD  1D03               	skipz
  2034  03FE  2C01               	goto	u1875
  2035  03FF  0851               	movf	_presion2,w
  2036  0400  027B               	subwf	_presion1,w
  2037  0401                     u1875:
  2038  0401  1C03               	skipc
  2039  0402  2C04               	goto	u1871
  2040  0403  2C05               	goto	u1870
  2041  0404                     u1871:
  2042  0404  282E               	goto	l2248
  2043  0405                     u1870:
  2044  0405                     l2386:
  2045                           
  2046                           ;Master_Test.c: 273:             Lcd_Clear();
  2047  0405  120A  158A  24EC  120A  118A  	fcall	_Lcd_Clear
  2048                           
  2049                           ;Master_Test.c: 274:             Lcd_Set_Cursor(1,1);
  2050  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2051  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2052  040C  01AB               	clrf	Lcd_Set_Cursor@b
  2053  040D  0AAB               	incf	Lcd_Set_Cursor@b,f
  2054  040E  3001               	movlw	1
  2055  040F  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  2056  0414                     l2388:
  2057                           
  2058                           ;Master_Test.c: 275:             Lcd_Write_String("PRECAUCION");
  2059  0414  3028               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2060  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0417  00AA               	movwf	Lcd_Write_String@a
  2063  0418  3080               	movlw	128
  2064  0419  00AB               	movwf	Lcd_Write_String@a+1
  2065  041A  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  2066  041F                     l2390:
  2067                           
  2068                           ;Master_Test.c: 276:             Lcd_Set_Cursor(2,1);
  2069  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0421  01AB               	clrf	Lcd_Set_Cursor@b
  2072  0422  0AAB               	incf	Lcd_Set_Cursor@b,f
  2073  0423  3002               	movlw	2
  2074  0424  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  2075                           
  2076                           ;Master_Test.c: 277:             Lcd_Write_String("PRESION ALTA");
  2077  0429  301B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2078  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2079  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2080  042C  00AA               	movwf	Lcd_Write_String@a
  2081  042D  3080               	movlw	128
  2082  042E  00AB               	movwf	Lcd_Write_String@a+1
  2083  042F  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  2084  0434                     l2392:	
  2085                           ;Master_Test.c: 278:             while((presion1)>=(presion2));
  2086                           
  2087  0434  087C               	movf	_presion1+1,w
  2088  0435  3A80               	xorlw	128
  2089  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0438  00C3               	movwf	??_main
  2092  0439  3080               	movlw	128
  2093  043A  0243               	subwf	??_main,w
  2094  043B  1D03               	skipz
  2095  043C  2C3F               	goto	u1885
  2096  043D  0851               	movf	_presion2,w
  2097  043E  027B               	subwf	_presion1,w
  2098  043F                     u1885:
  2099  043F  1803               	skipnc
  2100  0440  2C42               	goto	u1881
  2101  0441  2C43               	goto	u1880
  2102  0442                     u1881:
  2103  0442  2C34               	goto	l2392
  2104  0443                     u1880:
  2105  0443                     l2394:
  2106                           
  2107                           ;Master_Test.c: 279:             Lcd_Clear();
  2108  0443  120A  158A  24EC  120A  118A  	fcall	_Lcd_Clear
  2109                           
  2110                           ;Master_Test.c: 280:             Lcd_Set_Cursor(1,0);
  2111  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2113  044A  01AB               	clrf	Lcd_Set_Cursor@b
  2114  044B  3001               	movlw	1
  2115  044C  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  2116  0451                     l2396:
  2117                           
  2118                           ;Master_Test.c: 281:             Lcd_Write_String("Tem Luz t(s) TO");
  2119  0451  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2120  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0454  00AA               	movwf	Lcd_Write_String@a
  2123  0455  3080               	movlw	128
  2124  0456  00AB               	movwf	Lcd_Write_String@a+1
  2125  0457  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  2126  045C  282E               	goto	l2248
  2127  045D  120A  118A  280E   	ljmp	start
  2128  0460                     __end_of_main:
  2129                           
  2130                           	psect	text1
  2131  0460                     __ptext1:	
  2132 ;; *************** function _sprintf *****************
  2133 ;; Defined at:
  2134 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  sp              1    wreg     PTR unsigned char 
  2137 ;;		 -> buffer(1), 
  2138 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  2139 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  2140 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  2143 ;;		 -> buffer(1), 
  2144 ;;  tmpval          4    0        struct .
  2145 ;;  val             2   31[BANK0 ] unsigned int 
  2146 ;;  cp              2    0        PTR const unsigned char 
  2147 ;;  len             2    0        unsigned int 
  2148 ;;  c               1   34[BANK0 ] unsigned char 
  2149 ;;  prec            1   30[BANK0 ] char 
  2150 ;;  flag            1   29[BANK0 ] unsigned char 
  2151 ;;  ap              1   28[BANK0 ] PTR void [1]
  2152 ;;		 -> ?_sprintf(2), 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   22[BANK0 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       3       0       0       0
  2163 ;;      Locals:         0       7       0       0       0
  2164 ;;      Temps:          0       3       0       0       0
  2165 ;;      Totals:         0      13       0       0       0
  2166 ;;Total ram usage:       13 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    3
  2169 ;; This function calls:
  2170 ;;		___lwdiv
  2171 ;;		___lwmod
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           
  2178                           ;psect for function _sprintf
  2179  0460                     _sprintf:
  2180                           
  2181                           ;incstack = 0
  2182                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2183                           ;sprintf@sp stored from wreg
  2184  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0462  00C1               	movwf	sprintf@sp
  2187  0463                     l2076:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2190  0463  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2191  0464  00B9               	movwf	??_sprintf
  2192  0465  0839               	movf	??_sprintf,w
  2193  0466  00BC               	movwf	sprintf@ap
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2196  0467  2D33               	goto	l2128
  2197  0468                     l2078:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2200  0468  3025               	movlw	37
  2201  0469  0642               	xorwf	sprintf@c,w
  2202  046A  1903               	btfsc	3,2
  2203  046B  2C6D               	goto	u1481
  2204  046C  2C6E               	goto	u1480
  2205  046D                     u1481:
  2206  046D  2C7A               	goto	l2084
  2207  046E                     u1480:
  2208  046E                     l2080:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2211  046E  0842               	movf	sprintf@c,w
  2212  046F  00B9               	movwf	??_sprintf
  2213  0470  0841               	movf	sprintf@sp,w
  2214  0471  0084               	movwf	4
  2215  0472  0839               	movf	??_sprintf,w
  2216  0473  1383               	bcf	3,7	;select IRP bank0
  2217  0474  0080               	movwf	0
  2218  0475                     l2082:
  2219  0475  3001               	movlw	1
  2220  0476  00B9               	movwf	??_sprintf
  2221  0477  0839               	movf	??_sprintf,w
  2222  0478  07C1               	addwf	sprintf@sp,f
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2225  0479  2D33               	goto	l2128
  2226  047A                     l2084:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2229  047A  01BD               	clrf	sprintf@flag
  2230  047B                     l2088:	
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2232                           
  2233  047B  3001               	movlw	1
  2234  047C  07B6               	addwf	sprintf@f,f
  2235  047D  30FF               	movlw	-1
  2236  047E  0736               	addwf	sprintf@f,w
  2237  047F  0084               	movwf	4
  2238  0480  120A  158A  200A  120A  118A  	fcall	stringdir
  2239  0485  00C2               	movwf	sprintf@c
  2240  0486  00B9               	movwf	??_sprintf
  2241  0487  01BA               	clrf	??_sprintf+1
  2242                           
  2243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2244                           ; Switch size 1, requested type "simple"
  2245                           ; Number of cases is 1, Range of values is 0 to 0
  2246                           ; switch strategies available:
  2247                           ; Name         Instructions Cycles
  2248                           ; simple_byte            4     3 (average)
  2249                           ; direct_byte           11     8 (fixed)
  2250                           ; jumptable            260     6 (fixed)
  2251                           ;	Chosen strategy is simple_byte
  2252  0488  083A               	movf	??_sprintf+1,w
  2253  0489  3A00               	xorlw	0	; case 0
  2254  048A  1903               	skipnz
  2255  048B  2C8D               	goto	l2462
  2256  048C  2D33               	goto	l2128
  2257  048D                     l2462:
  2258                           
  2259                           ; Switch size 1, requested type "simple"
  2260                           ; Number of cases is 3, Range of values is 0 to 105
  2261                           ; switch strategies available:
  2262                           ; Name         Instructions Cycles
  2263                           ; simple_byte           10     6 (average)
  2264                           ; jumptable            260     6 (fixed)
  2265                           ;	Chosen strategy is simple_byte
  2266  048D  0839               	movf	??_sprintf,w
  2267  048E  3A00               	xorlw	0	; case 0
  2268  048F  1903               	skipnz
  2269  0490  2D45               	goto	l2130
  2270  0491  3A64               	xorlw	100	; case 100
  2271  0492  1903               	skipnz
  2272  0493  2C98               	goto	l2090
  2273  0494  3A0D               	xorlw	13	; case 105
  2274  0495  1903               	skipnz
  2275  0496  2C98               	goto	l2090
  2276  0497  2D33               	goto	l2128
  2277  0498                     l2090:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2280  0498  083C               	movf	sprintf@ap,w
  2281  0499  0084               	movwf	4
  2282  049A  1383               	bcf	3,7	;select IRP bank0
  2283  049B  0800               	movf	0,w
  2284  049C  00BF               	movwf	sprintf@val
  2285  049D  0A84               	incf	4,f
  2286  049E  0800               	movf	0,w
  2287  049F  00C0               	movwf	sprintf@val+1
  2288  04A0                     l2092:
  2289  04A0  3002               	movlw	2
  2290  04A1  00B9               	movwf	??_sprintf
  2291  04A2  0839               	movf	??_sprintf,w
  2292  04A3  07BC               	addwf	sprintf@ap,f
  2293  04A4                     l2094:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2296  04A4  1FC0               	btfss	sprintf@val+1,7
  2297  04A5  2CA7               	goto	u1491
  2298  04A6  2CA8               	goto	u1490
  2299  04A7                     u1491:
  2300  04A7  2CB1               	goto	l2100
  2301  04A8                     u1490:
  2302  04A8                     l2096:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2305  04A8  3003               	movlw	3
  2306  04A9  00B9               	movwf	??_sprintf
  2307  04AA  0839               	movf	??_sprintf,w
  2308  04AB  04BD               	iorwf	sprintf@flag,f
  2309  04AC                     l2098:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2312  04AC  09BF               	comf	sprintf@val,f
  2313  04AD  09C0               	comf	sprintf@val+1,f
  2314  04AE  0ABF               	incf	sprintf@val,f
  2315  04AF  1903               	skipnz
  2316  04B0  0AC0               	incf	sprintf@val+1,f
  2317  04B1                     l2100:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2320  04B1  01C2               	clrf	sprintf@c
  2321  04B2  0AC2               	incf	sprintf@c,f
  2322  04B3                     l2106:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2325  04B3  0842               	movf	sprintf@c,w
  2326  04B4  00B9               	movwf	??_sprintf
  2327  04B5  0739               	addwf	??_sprintf,w
  2328  04B6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2329  04B7  0084               	movwf	4
  2330  04B8  120A  158A  200A  120A  118A  	fcall	stringdir
  2331  04BD  00BA               	movwf	??_sprintf+1
  2332  04BE  120A  158A  200A  120A  118A  	fcall	stringdir
  2333  04C3  00BB               	movwf	??_sprintf+2
  2334  04C4  083B               	movf	??_sprintf+2,w
  2335  04C5  0240               	subwf	sprintf@val+1,w
  2336  04C6  1D03               	skipz
  2337  04C7  2CCA               	goto	u1505
  2338  04C8  083A               	movf	??_sprintf+1,w
  2339  04C9  023F               	subwf	sprintf@val,w
  2340  04CA                     u1505:
  2341  04CA  1803               	skipnc
  2342  04CB  2CCD               	goto	u1501
  2343  04CC  2CCE               	goto	u1500
  2344  04CD                     u1501:
  2345  04CD  2CCF               	goto	l2110
  2346  04CE                     u1500:
  2347  04CE  2CD9               	goto	l2112
  2348  04CF                     l2110:
  2349  04CF  3001               	movlw	1
  2350  04D0  00B9               	movwf	??_sprintf
  2351  04D1  0839               	movf	??_sprintf,w
  2352  04D2  07C2               	addwf	sprintf@c,f
  2353  04D3  3005               	movlw	5
  2354  04D4  0642               	xorwf	sprintf@c,w
  2355  04D5  1D03               	btfss	3,2
  2356  04D6  2CD8               	goto	u1511
  2357  04D7  2CD9               	goto	u1510
  2358  04D8                     u1511:
  2359  04D8  2CB3               	goto	l2106
  2360  04D9                     u1510:
  2361  04D9                     l2112:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2364  04D9  083D               	movf	sprintf@flag,w
  2365  04DA  3903               	andlw	3
  2366  04DB  1903               	btfsc	3,2
  2367  04DC  2CDE               	goto	u1521
  2368  04DD  2CDF               	goto	u1520
  2369  04DE                     u1521:
  2370  04DE  2CEA               	goto	l2118
  2371  04DF                     u1520:
  2372  04DF                     l2114:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2375  04DF  302D               	movlw	45
  2376  04E0  00B9               	movwf	??_sprintf
  2377  04E1  0841               	movf	sprintf@sp,w
  2378  04E2  0084               	movwf	4
  2379  04E3  0839               	movf	??_sprintf,w
  2380  04E4  1383               	bcf	3,7	;select IRP bank0
  2381  04E5  0080               	movwf	0
  2382  04E6                     l2116:
  2383  04E6  3001               	movlw	1
  2384  04E7  00B9               	movwf	??_sprintf
  2385  04E8  0839               	movf	??_sprintf,w
  2386  04E9  07C1               	addwf	sprintf@sp,f
  2387  04EA                     l2118:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2390  04EA  0842               	movf	sprintf@c,w
  2391  04EB  00B9               	movwf	??_sprintf
  2392  04EC  0839               	movf	??_sprintf,w
  2393  04ED  00BE               	movwf	sprintf@prec
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2396  04EE  2D2A               	goto	l2126
  2397  04EF                     l2120:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2400  04EF  300A               	movlw	10
  2401  04F0  00B0               	movwf	___lwmod@divisor
  2402  04F1  3000               	movlw	0
  2403  04F2  00B1               	movwf	___lwmod@divisor+1
  2404  04F3  083E               	movf	sprintf@prec,w
  2405  04F4  00B9               	movwf	??_sprintf
  2406  04F5  0739               	addwf	??_sprintf,w
  2407  04F6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2408  04F7  0084               	movwf	4
  2409  04F8  120A  158A  200A  120A  118A  	fcall	stringdir
  2410  04FD  00A8               	movwf	___lwdiv@divisor
  2411  04FE  120A  158A  200A  120A  118A  	fcall	stringdir
  2412  0503  00A9               	movwf	___lwdiv@divisor+1
  2413  0504  0840               	movf	sprintf@val+1,w
  2414  0505  00AB               	movwf	___lwdiv@dividend+1
  2415  0506  083F               	movf	sprintf@val,w
  2416  0507  00AA               	movwf	___lwdiv@dividend
  2417  0508  120A  158A  26AC  120A  118A  	fcall	___lwdiv
  2418  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2419  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2420  050F  0829               	movf	?___lwdiv+1,w
  2421  0510  00B3               	movwf	___lwmod@dividend+1
  2422  0511  0828               	movf	?___lwdiv,w
  2423  0512  00B2               	movwf	___lwmod@dividend
  2424  0513  120A  158A  262A  120A  118A  	fcall	___lwmod
  2425  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2427  051A  0830               	movf	?___lwmod,w
  2428  051B  3E30               	addlw	48
  2429  051C  00BA               	movwf	??_sprintf+1
  2430  051D  083A               	movf	??_sprintf+1,w
  2431  051E  00C2               	movwf	sprintf@c
  2432  051F                     l2122:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2435  051F  0842               	movf	sprintf@c,w
  2436  0520  00B9               	movwf	??_sprintf
  2437  0521  0841               	movf	sprintf@sp,w
  2438  0522  0084               	movwf	4
  2439  0523  0839               	movf	??_sprintf,w
  2440  0524  1383               	bcf	3,7	;select IRP bank0
  2441  0525  0080               	movwf	0
  2442  0526                     l2124:
  2443  0526  3001               	movlw	1
  2444  0527  00B9               	movwf	??_sprintf
  2445  0528  0839               	movf	??_sprintf,w
  2446  0529  07C1               	addwf	sprintf@sp,f
  2447  052A                     l2126:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2450  052A  30FF               	movlw	255
  2451  052B  00B9               	movwf	??_sprintf
  2452  052C  0839               	movf	??_sprintf,w
  2453  052D  07BE               	addwf	sprintf@prec,f
  2454  052E  0A3E               	incf	sprintf@prec,w
  2455  052F  1D03               	btfss	3,2
  2456  0530  2D32               	goto	u1531
  2457  0531  2D33               	goto	u1530
  2458  0532                     u1531:
  2459  0532  2CEF               	goto	l2120
  2460  0533                     u1530:
  2461  0533                     l2128:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2464  0533  3001               	movlw	1
  2465  0534  07B6               	addwf	sprintf@f,f
  2466  0535  30FF               	movlw	-1
  2467  0536  0736               	addwf	sprintf@f,w
  2468  0537  0084               	movwf	4
  2469  0538  120A  158A  200A  120A  118A  	fcall	stringdir
  2470  053D  00B9               	movwf	??_sprintf
  2471  053E  0839               	movf	??_sprintf,w
  2472  053F  00C2               	movwf	sprintf@c
  2473  0540  0842               	movf	sprintf@c,w
  2474  0541  1D03               	btfss	3,2
  2475  0542  2D44               	goto	u1541
  2476  0543  2D45               	goto	u1540
  2477  0544                     u1541:
  2478  0544  2C68               	goto	l2078
  2479  0545                     u1540:
  2480  0545                     l2130:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2483  0545  0841               	movf	sprintf@sp,w
  2484  0546  0084               	movwf	4
  2485  0547  1383               	bcf	3,7	;select IRP bank0
  2486  0548  0180               	clrf	0
  2487  0549                     l402:
  2488  0549  0008               	return
  2489  054A                     __end_of_sprintf:
  2490                           
  2491                           	psect	text2
  2492  0E2A                     __ptext2:	
  2493 ;; *************** function ___lwmod *****************
  2494 ;; Defined at:
  2495 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  divisor         2   16[BANK0 ] unsigned int 
  2498 ;;  dividend        2   18[BANK0 ] unsigned int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  counter         1   21[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  2   16[BANK0 ] unsigned int 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       4       0       0       0
  2511 ;;      Locals:         0       1       0       0       0
  2512 ;;      Temps:          0       1       0       0       0
  2513 ;;      Totals:         0       6       0       0       0
  2514 ;;Total ram usage:        6 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_sprintf
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function ___lwmod
  2526  0E2A                     ___lwmod:
  2527  0E2A                     l1964:	
  2528                           ;incstack = 0
  2529                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2530                           
  2531  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0E2C  0830               	movf	___lwmod@divisor,w
  2534  0E2D  0431               	iorwf	___lwmod@divisor+1,w
  2535  0E2E  1903               	btfsc	3,2
  2536  0E2F  2E31               	goto	u1391
  2537  0E30  2E32               	goto	u1390
  2538  0E31                     u1391:
  2539  0E31  2E61               	goto	l1982
  2540  0E32                     u1390:
  2541  0E32                     l1966:
  2542  0E32  01B5               	clrf	___lwmod@counter
  2543  0E33  0AB5               	incf	___lwmod@counter,f
  2544  0E34  2E40               	goto	l1972
  2545  0E35                     l1968:
  2546  0E35  3001               	movlw	1
  2547  0E36                     u1405:
  2548  0E36  1003               	clrc
  2549  0E37  0DB0               	rlf	___lwmod@divisor,f
  2550  0E38  0DB1               	rlf	___lwmod@divisor+1,f
  2551  0E39  3EFF               	addlw	-1
  2552  0E3A  1D03               	skipz
  2553  0E3B  2E36               	goto	u1405
  2554  0E3C                     l1970:
  2555  0E3C  3001               	movlw	1
  2556  0E3D  00B4               	movwf	??___lwmod
  2557  0E3E  0834               	movf	??___lwmod,w
  2558  0E3F  07B5               	addwf	___lwmod@counter,f
  2559  0E40                     l1972:
  2560  0E40  1FB1               	btfss	___lwmod@divisor+1,7
  2561  0E41  2E43               	goto	u1411
  2562  0E42  2E44               	goto	u1410
  2563  0E43                     u1411:
  2564  0E43  2E35               	goto	l1968
  2565  0E44                     u1410:
  2566  0E44                     l1974:
  2567  0E44  0831               	movf	___lwmod@divisor+1,w
  2568  0E45  0233               	subwf	___lwmod@dividend+1,w
  2569  0E46  1D03               	skipz
  2570  0E47  2E4A               	goto	u1425
  2571  0E48  0830               	movf	___lwmod@divisor,w
  2572  0E49  0232               	subwf	___lwmod@dividend,w
  2573  0E4A                     u1425:
  2574  0E4A  1C03               	skipc
  2575  0E4B  2E4D               	goto	u1421
  2576  0E4C  2E4E               	goto	u1420
  2577  0E4D                     u1421:
  2578  0E4D  2E54               	goto	l1978
  2579  0E4E                     u1420:
  2580  0E4E                     l1976:
  2581  0E4E  0830               	movf	___lwmod@divisor,w
  2582  0E4F  02B2               	subwf	___lwmod@dividend,f
  2583  0E50  0831               	movf	___lwmod@divisor+1,w
  2584  0E51  1C03               	skipc
  2585  0E52  03B3               	decf	___lwmod@dividend+1,f
  2586  0E53  02B3               	subwf	___lwmod@dividend+1,f
  2587  0E54                     l1978:
  2588  0E54  3001               	movlw	1
  2589  0E55                     u1435:
  2590  0E55  1003               	clrc
  2591  0E56  0CB1               	rrf	___lwmod@divisor+1,f
  2592  0E57  0CB0               	rrf	___lwmod@divisor,f
  2593  0E58  3EFF               	addlw	-1
  2594  0E59  1D03               	skipz
  2595  0E5A  2E55               	goto	u1435
  2596  0E5B                     l1980:
  2597  0E5B  3001               	movlw	1
  2598  0E5C  02B5               	subwf	___lwmod@counter,f
  2599  0E5D  1D03               	btfss	3,2
  2600  0E5E  2E60               	goto	u1441
  2601  0E5F  2E61               	goto	u1440
  2602  0E60                     u1441:
  2603  0E60  2E44               	goto	l1974
  2604  0E61                     u1440:
  2605  0E61                     l1982:
  2606  0E61  0833               	movf	___lwmod@dividend+1,w
  2607  0E62  00B1               	movwf	?___lwmod+1
  2608  0E63  0832               	movf	___lwmod@dividend,w
  2609  0E64  00B0               	movwf	?___lwmod
  2610  0E65                     l688:
  2611  0E65  0008               	return
  2612  0E66                     __end_of___lwmod:
  2613                           
  2614                           	psect	text3
  2615  0EAC                     __ptext3:	
  2616 ;; *************** function ___lwdiv *****************
  2617 ;; Defined at:
  2618 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  divisor         2    8[BANK0 ] unsigned int 
  2621 ;;  dividend        2   10[BANK0 ] unsigned int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  quotient        2   13[BANK0 ] unsigned int 
  2624 ;;  counter         1   15[BANK0 ] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  2    8[BANK0 ] unsigned int 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       4       0       0       0
  2635 ;;      Locals:         0       3       0       0       0
  2636 ;;      Temps:          0       1       0       0       0
  2637 ;;      Totals:         0       8       0       0       0
  2638 ;;Total ram usage:        8 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_sprintf
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function ___lwdiv
  2650  0EAC                     ___lwdiv:
  2651  0EAC                     l1938:	
  2652                           ;incstack = 0
  2653                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2654                           
  2655  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0EAE  01AD               	clrf	___lwdiv@quotient
  2658  0EAF  01AE               	clrf	___lwdiv@quotient+1
  2659  0EB0                     l1940:
  2660  0EB0  0828               	movf	___lwdiv@divisor,w
  2661  0EB1  0429               	iorwf	___lwdiv@divisor+1,w
  2662  0EB2  1903               	btfsc	3,2
  2663  0EB3  2EB5               	goto	u1321
  2664  0EB4  2EB6               	goto	u1320
  2665  0EB5                     u1321:
  2666  0EB5  2EED               	goto	l1960
  2667  0EB6                     u1320:
  2668  0EB6                     l1942:
  2669  0EB6  01AF               	clrf	___lwdiv@counter
  2670  0EB7  0AAF               	incf	___lwdiv@counter,f
  2671  0EB8  2EC4               	goto	l1948
  2672  0EB9                     l1944:
  2673  0EB9  3001               	movlw	1
  2674  0EBA                     u1335:
  2675  0EBA  1003               	clrc
  2676  0EBB  0DA8               	rlf	___lwdiv@divisor,f
  2677  0EBC  0DA9               	rlf	___lwdiv@divisor+1,f
  2678  0EBD  3EFF               	addlw	-1
  2679  0EBE  1D03               	skipz
  2680  0EBF  2EBA               	goto	u1335
  2681  0EC0                     l1946:
  2682  0EC0  3001               	movlw	1
  2683  0EC1  00AC               	movwf	??___lwdiv
  2684  0EC2  082C               	movf	??___lwdiv,w
  2685  0EC3  07AF               	addwf	___lwdiv@counter,f
  2686  0EC4                     l1948:
  2687  0EC4  1FA9               	btfss	___lwdiv@divisor+1,7
  2688  0EC5  2EC7               	goto	u1341
  2689  0EC6  2EC8               	goto	u1340
  2690  0EC7                     u1341:
  2691  0EC7  2EB9               	goto	l1944
  2692  0EC8                     u1340:
  2693  0EC8                     l1950:
  2694  0EC8  3001               	movlw	1
  2695  0EC9                     u1355:
  2696  0EC9  1003               	clrc
  2697  0ECA  0DAD               	rlf	___lwdiv@quotient,f
  2698  0ECB  0DAE               	rlf	___lwdiv@quotient+1,f
  2699  0ECC  3EFF               	addlw	-1
  2700  0ECD  1D03               	skipz
  2701  0ECE  2EC9               	goto	u1355
  2702  0ECF  0829               	movf	___lwdiv@divisor+1,w
  2703  0ED0  022B               	subwf	___lwdiv@dividend+1,w
  2704  0ED1  1D03               	skipz
  2705  0ED2  2ED5               	goto	u1365
  2706  0ED3  0828               	movf	___lwdiv@divisor,w
  2707  0ED4  022A               	subwf	___lwdiv@dividend,w
  2708  0ED5                     u1365:
  2709  0ED5  1C03               	skipc
  2710  0ED6  2ED8               	goto	u1361
  2711  0ED7  2ED9               	goto	u1360
  2712  0ED8                     u1361:
  2713  0ED8  2EE0               	goto	l1956
  2714  0ED9                     u1360:
  2715  0ED9                     l1952:
  2716  0ED9  0828               	movf	___lwdiv@divisor,w
  2717  0EDA  02AA               	subwf	___lwdiv@dividend,f
  2718  0EDB  0829               	movf	___lwdiv@divisor+1,w
  2719  0EDC  1C03               	skipc
  2720  0EDD  03AB               	decf	___lwdiv@dividend+1,f
  2721  0EDE  02AB               	subwf	___lwdiv@dividend+1,f
  2722  0EDF                     l1954:
  2723  0EDF  142D               	bsf	___lwdiv@quotient,0
  2724  0EE0                     l1956:
  2725  0EE0  3001               	movlw	1
  2726  0EE1                     u1375:
  2727  0EE1  1003               	clrc
  2728  0EE2  0CA9               	rrf	___lwdiv@divisor+1,f
  2729  0EE3  0CA8               	rrf	___lwdiv@divisor,f
  2730  0EE4  3EFF               	addlw	-1
  2731  0EE5  1D03               	skipz
  2732  0EE6  2EE1               	goto	u1375
  2733  0EE7                     l1958:
  2734  0EE7  3001               	movlw	1
  2735  0EE8  02AF               	subwf	___lwdiv@counter,f
  2736  0EE9  1D03               	btfss	3,2
  2737  0EEA  2EEC               	goto	u1381
  2738  0EEB  2EED               	goto	u1380
  2739  0EEC                     u1381:
  2740  0EEC  2EC8               	goto	l1950
  2741  0EED                     u1380:
  2742  0EED                     l1960:
  2743  0EED  082E               	movf	___lwdiv@quotient+1,w
  2744  0EEE  00A9               	movwf	?___lwdiv+1
  2745  0EEF  082D               	movf	___lwdiv@quotient,w
  2746  0EF0  00A8               	movwf	?___lwdiv
  2747  0EF1                     l678:
  2748  0EF1  0008               	return
  2749  0EF2                     __end_of___lwdiv:
  2750                           
  2751                           	psect	text4
  2752  05C3                     __ptext4:	
  2753 ;; *************** function _setup *****************
  2754 ;; Defined at:
  2755 ;;		line 123 in file "Master_Test.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          0       1       0       0       0
  2772 ;;      Totals:         0       1       0       0       0
  2773 ;;Total ram usage:        1 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    4
  2776 ;; This function calls:
  2777 ;;		_ADC_CONFIG
  2778 ;;		_I2C_Master_Init
  2779 ;;		_Lcd_Clear
  2780 ;;		_Lcd_Init
  2781 ;;		_Lcd_Set_Cursor
  2782 ;;		_Lcd_Write_String
  2783 ;;		_USART_CONFIG
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _setup
  2791  05C3                     _setup:
  2792  05C3                     l2022:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2795                           
  2796                           
  2797                           ;Master_Test.c: 124:     ANSEL = 0x01;
  2798  05C3  3001               	movlw	1
  2799  05C4  1683               	bsf	3,5	;RP0=1, select bank3
  2800  05C5  1703               	bsf	3,6	;RP1=1, select bank3
  2801  05C6  0088               	movwf	8	;volatile
  2802  05C7                     l2024:
  2803                           
  2804                           ;Master_Test.c: 125:     ANSELH = 0x00;
  2805  05C7  0189               	clrf	9	;volatile
  2806  05C8                     l2026:
  2807                           
  2808                           ;Master_Test.c: 127:     TRISA = 0x01;
  2809  05C8  3001               	movlw	1
  2810  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2811  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2812  05CB  0085               	movwf	5	;volatile
  2813  05CC                     l2028:
  2814                           
  2815                           ;Master_Test.c: 128:     TRISB = 0x03;
  2816  05CC  3003               	movlw	3
  2817  05CD  0086               	movwf	6	;volatile
  2818  05CE                     l2030:
  2819                           
  2820                           ;Master_Test.c: 129:     TRISC = 0x00;
  2821  05CE  0187               	clrf	7	;volatile
  2822  05CF                     l2032:
  2823                           
  2824                           ;Master_Test.c: 130:     TRISD = 0x00;
  2825  05CF  0188               	clrf	8	;volatile
  2826  05D0                     l2034:
  2827                           
  2828                           ;Master_Test.c: 132:     OSCCONbits.IRCF = 0B111;
  2829  05D0  3070               	movlw	112
  2830  05D1  048F               	iorwf	15,f	;volatile
  2831  05D2                     l2036:
  2832                           
  2833                           ;Master_Test.c: 133:     OSCCONbits.OSTS = 0;
  2834  05D2  118F               	bcf	15,3	;volatile
  2835  05D3                     l2038:
  2836                           
  2837                           ;Master_Test.c: 134:     OSCCONbits.SCS = 1;
  2838  05D3  140F               	bsf	15,0	;volatile
  2839  05D4                     l2040:
  2840                           
  2841                           ;Master_Test.c: 136:     ADC_CONFIG(8);
  2842  05D4  3008               	movlw	8
  2843  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2844  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2845  05D7  00A8               	movwf	ADC_CONFIG@frec
  2846  05D8  3000               	movlw	0
  2847  05D9  00A9               	movwf	ADC_CONFIG@frec+1
  2848  05DA  120A  158A  2592  120A  118A  	fcall	_ADC_CONFIG
  2849  05DF                     l2042:
  2850                           
  2851                           ;Master_Test.c: 137:     PIE1bits.ADIE = 1;
  2852  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  2853  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  2854  05E1  170C               	bsf	12,6	;volatile
  2855  05E2                     l2044:
  2856                           
  2857                           ;Master_Test.c: 138:     INTCONbits.PEIE = 1;
  2858  05E2  170B               	bsf	11,6	;volatile
  2859  05E3                     l2046:
  2860                           
  2861                           ;Master_Test.c: 139:     INTCONbits.GIE = 1;
  2862  05E3  178B               	bsf	11,7	;volatile
  2863  05E4                     l2048:
  2864                           
  2865                           ;Master_Test.c: 141:     USART_CONFIG(8 ,1, 1);
  2866  05E4  3008               	movlw	8
  2867  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2868  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2869  05E7  00A8               	movwf	USART_CONFIG@frec
  2870  05E8  3000               	movlw	0
  2871  05E9  00A9               	movwf	USART_CONFIG@frec+1
  2872  05EA  3001               	movlw	1
  2873  05EB  00AA               	movwf	USART_CONFIG@tr
  2874  05EC  3000               	movlw	0
  2875  05ED  00AB               	movwf	USART_CONFIG@tr+1
  2876  05EE  3001               	movlw	1
  2877  05EF  00AC               	movwf	USART_CONFIG@rc
  2878  05F0  3000               	movlw	0
  2879  05F1  00AD               	movwf	USART_CONFIG@rc+1
  2880  05F2  120A  158A  26F2  120A  118A  	fcall	_USART_CONFIG
  2881  05F7                     l2050:
  2882                           
  2883                           ;Master_Test.c: 143:     INTCONbits.RBIE = 1;
  2884  05F7  158B               	bsf	11,3	;volatile
  2885  05F8                     l2052:
  2886                           
  2887                           ;Master_Test.c: 144:     WPUB = 0x03;
  2888  05F8  3003               	movlw	3
  2889  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  2890  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  2891  05FB  0095               	movwf	21	;volatile
  2892  05FC                     l2054:
  2893                           
  2894                           ;Master_Test.c: 145:     IOCB = 0x03;
  2895  05FC  3003               	movlw	3
  2896  05FD  0096               	movwf	22	;volatile
  2897  05FE                     l2056:
  2898                           
  2899                           ;Master_Test.c: 146:     OPTION_REGbits.nRBPU = 0;
  2900  05FE  1381               	bcf	1,7	;volatile
  2901  05FF                     l2058:
  2902                           
  2903                           ;Master_Test.c: 148:     I2C_Master_Init(100000);
  2904  05FF  3000               	movlw	0
  2905  0600  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0601  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0602  00B9               	movwf	I2C_Master_Init@c+3
  2908  0603  3001               	movlw	1
  2909  0604  00B8               	movwf	I2C_Master_Init@c+2
  2910  0605  3086               	movlw	134
  2911  0606  00B7               	movwf	I2C_Master_Init@c+1
  2912  0607  30A0               	movlw	160
  2913  0608  00B6               	movwf	I2C_Master_Init@c
  2914  0609  120A  158A  25F0  120A  118A  	fcall	_I2C_Master_Init
  2915  060E                     l2060:
  2916                           
  2917                           ;Master_Test.c: 149:     Lcd_Init();
  2918  060E  120A  118A  2705  120A  118A  	fcall	_Lcd_Init
  2919  0613                     l2062:
  2920                           
  2921                           ;Master_Test.c: 150:     Lcd_Clear();
  2922  0613  120A  158A  24EC  120A  118A  	fcall	_Lcd_Clear
  2923  0618                     l2064:
  2924                           
  2925                           ;Master_Test.c: 151:     Lcd_Set_Cursor(1,0);
  2926  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2928  061A  01AB               	clrf	Lcd_Set_Cursor@b
  2929  061B  3001               	movlw	1
  2930  061C  120A  158A  254D  120A  118A  	fcall	_Lcd_Set_Cursor
  2931  0621                     l2066:
  2932                           
  2933                           ;Master_Test.c: 152:     Lcd_Write_String("Tem Luz t(s) TO");
  2934  0621  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2935  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0624  00AA               	movwf	Lcd_Write_String@a
  2938  0625  3080               	movlw	128
  2939  0626  00AB               	movwf	Lcd_Write_String@a+1
  2940  0627  120A  158A  2666  120A  118A  	fcall	_Lcd_Write_String
  2941  062C                     l2068:
  2942                           
  2943                           ;Master_Test.c: 154:     presion2 = 110;
  2944  062C  306E               	movlw	110
  2945  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2946  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2947  062F  00BE               	movwf	??_setup
  2948  0630  083E               	movf	??_setup,w
  2949  0631  00D1               	movwf	_presion2
  2950  0632                     l218:
  2951  0632  0008               	return
  2952  0633                     __end_of_setup:
  2953                           
  2954                           	psect	text5
  2955  0EF2                     __ptext5:	
  2956 ;; *************** function _USART_CONFIG *****************
  2957 ;; Defined at:
  2958 ;;		line 48 in file "Master_Test.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  frec            2    8[BANK0 ] int 
  2961 ;;  tr              2   10[BANK0 ] int 
  2962 ;;  rc              2   12[BANK0 ] int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2974 ;;      Params:         0       6       0       0       0
  2975 ;;      Locals:         0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0
  2977 ;;      Totals:         0       6       0       0       0
  2978 ;;Total ram usage:        6 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    2
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_setup
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _USART_CONFIG
  2990  0EF2                     _USART_CONFIG:
  2991  0EF2                     l1754:	
  2992                           ;incstack = 0
  2993                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  2994                           
  2995                           
  2996                           ;Master_Test.c: 49:     RCSTAbits.SPEN = 1;
  2997  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0EF4  1798               	bsf	24,7	;volatile
  3000                           
  3001                           ;Master_Test.c: 50:     TXSTAbits.SYNC = 0;
  3002  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0EF7  1218               	bcf	24,4	;volatile
  3005                           
  3006                           ;Master_Test.c: 51:     TXSTAbits.TX9 = 0;
  3007  0EF8  1318               	bcf	24,6	;volatile
  3008                           
  3009                           ;Master_Test.c: 52:     RCSTAbits.RX9 = 0;
  3010  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0EFB  1318               	bcf	24,6	;volatile
  3013                           
  3014                           ;Master_Test.c: 53:     switch(frec){
  3015  0EFC  2F0F               	goto	l1770
  3016  0EFD                     l1756:
  3017                           
  3018                           ;Master_Test.c: 55:             SPBRG = 25;
  3019  0EFD  3019               	movlw	25
  3020  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  3022  0F00  0099               	movwf	25	;volatile
  3023  0F01                     l1758:
  3024                           
  3025                           ;Master_Test.c: 56:             TXSTAbits.BRGH = 1;
  3026  0F01  1518               	bsf	24,2	;volatile
  3027  0F02                     l1760:
  3028                           
  3029                           ;Master_Test.c: 57:             BAUDCTLbits.BRG16 = 0;
  3030  0F02  1683               	bsf	3,5	;RP0=1, select bank3
  3031  0F03  1703               	bsf	3,6	;RP1=1, select bank3
  3032  0F04  1187               	bcf	7,3	;volatile
  3033                           
  3034                           ;Master_Test.c: 58:             break;
  3035  0F05  2F1C               	goto	l1772
  3036  0F06                     l1762:
  3037                           
  3038                           ;Master_Test.c: 60:             SPBRG = 12;
  3039  0F06  300C               	movlw	12
  3040  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  3042  0F09  0099               	movwf	25	;volatile
  3043  0F0A                     l1764:
  3044                           
  3045                           ;Master_Test.c: 61:             TXSTAbits.BRGH = 0;
  3046  0F0A  1118               	bcf	24,2	;volatile
  3047  0F0B                     l1766:
  3048                           
  3049                           ;Master_Test.c: 62:             BAUDCTLbits.BRG16 = 0;
  3050  0F0B  1683               	bsf	3,5	;RP0=1, select bank3
  3051  0F0C  1703               	bsf	3,6	;RP1=1, select bank3
  3052  0F0D  1187               	bcf	7,3	;volatile
  3053                           
  3054                           ;Master_Test.c: 63:             break;
  3055  0F0E  2F1C               	goto	l1772
  3056  0F0F                     l1770:
  3057                           
  3058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3059                           ; Switch size 1, requested type "simple"
  3060                           ; Number of cases is 1, Range of values is 0 to 0
  3061                           ; switch strategies available:
  3062                           ; Name         Instructions Cycles
  3063                           ; simple_byte            4     3 (average)
  3064                           ; direct_byte           11     8 (fixed)
  3065                           ; jumptable            260     6 (fixed)
  3066                           ;	Chosen strategy is simple_byte
  3067  0F0F  0829               	movf	USART_CONFIG@frec+1,w
  3068  0F10  3A00               	xorlw	0	; case 0
  3069  0F11  1903               	skipnz
  3070  0F12  2F14               	goto	l2464
  3071  0F13  2F1C               	goto	l1772
  3072  0F14                     l2464:
  3073                           
  3074                           ; Switch size 1, requested type "simple"
  3075                           ; Number of cases is 2, Range of values is 4 to 8
  3076                           ; switch strategies available:
  3077                           ; Name         Instructions Cycles
  3078                           ; simple_byte            7     4 (average)
  3079                           ; direct_byte           26    11 (fixed)
  3080                           ; jumptable            263     9 (fixed)
  3081                           ;	Chosen strategy is simple_byte
  3082  0F14  0828               	movf	USART_CONFIG@frec,w
  3083  0F15  3A04               	xorlw	4	; case 4
  3084  0F16  1903               	skipnz
  3085  0F17  2EFD               	goto	l1756
  3086  0F18  3A0C               	xorlw	12	; case 8
  3087  0F19  1903               	skipnz
  3088  0F1A  2F06               	goto	l1762
  3089  0F1B  2F1C               	goto	l1772
  3090  0F1C                     l1772:
  3091                           
  3092                           ;Master_Test.c: 65:     if(tr==1){
  3093  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0F1E  032A               	decf	USART_CONFIG@tr,w
  3096  0F1F  042B               	iorwf	USART_CONFIG@tr+1,w
  3097  0F20  1D03               	btfss	3,2
  3098  0F21  2F23               	goto	u1061
  3099  0F22  2F24               	goto	u1060
  3100  0F23                     u1061:
  3101  0F23  2F28               	goto	l179
  3102  0F24                     u1060:
  3103  0F24                     l1774:
  3104                           
  3105                           ;Master_Test.c: 66:         TXEN = 1;
  3106  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  3108  0F26  1698               	bsf	24,5	;volatile
  3109                           
  3110                           ;Master_Test.c: 67:     }
  3111  0F27  2F2B               	goto	l1776
  3112  0F28                     l179:	
  3113                           ;Master_Test.c: 68:     else{
  3114                           
  3115                           
  3116                           ;Master_Test.c: 69:         TXEN = 0;
  3117  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  3118  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  3119  0F2A  1298               	bcf	24,5	;volatile
  3120  0F2B                     l1776:
  3121                           
  3122                           ;Master_Test.c: 71:     if(rc == 1){
  3123  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0F2D  032C               	decf	USART_CONFIG@rc,w
  3126  0F2E  042D               	iorwf	USART_CONFIG@rc+1,w
  3127  0F2F  1D03               	btfss	3,2
  3128  0F30  2F32               	goto	u1071
  3129  0F31  2F33               	goto	u1070
  3130  0F32                     u1071:
  3131  0F32  2F3B               	goto	l181
  3132  0F33                     u1070:
  3133  0F33                     l1778:
  3134                           
  3135                           ;Master_Test.c: 72:         RCSTAbits.CREN = 1;
  3136  0F33  1618               	bsf	24,4	;volatile
  3137                           
  3138                           ;Master_Test.c: 73:         PIE1bits.RCIE = 1;
  3139  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  3141  0F36  168C               	bsf	12,5	;volatile
  3142                           
  3143                           ;Master_Test.c: 74:         PIR1bits.RCIF = 0;
  3144  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0F39  128C               	bcf	12,5	;volatile
  3147                           
  3148                           ;Master_Test.c: 75:     }
  3149  0F3A  2F3C               	goto	l183
  3150  0F3B                     l181:	
  3151                           ;Master_Test.c: 76:     else{
  3152                           
  3153                           
  3154                           ;Master_Test.c: 77:         RCSTAbits.CREN = 0;
  3155  0F3B  1218               	bcf	24,4	;volatile
  3156  0F3C                     l183:
  3157  0F3C  0008               	return
  3158  0F3D                     __end_of_USART_CONFIG:
  3159                           
  3160                           	psect	text6
  3161  0E66                     __ptext6:	
  3162 ;; *************** function _Lcd_Write_String *****************
  3163 ;; Defined at:
  3164 ;;		line 73 in file "LCD.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  a               2   10[BANK0 ] PTR unsigned char 
  3167 ;;		 -> STR_13(16), STR_12(13), STR_11(11), STR_10(3), 
  3168 ;;		 -> STR_9(3), buffer(1), STR_1(16), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  i               2   15[BANK0 ] int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       2       0       0       0
  3181 ;;      Locals:         0       2       0       0       0
  3182 ;;      Temps:          0       3       0       0       0
  3183 ;;      Totals:         0       7       0       0       0
  3184 ;;Total ram usage:        7 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    3
  3187 ;; This function calls:
  3188 ;;		_Lcd_Write_Char
  3189 ;; This function is called by:
  3190 ;;		_setup
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _Lcd_Write_String
  3197  0E66                     _Lcd_Write_String:
  3198  0E66                     l1848:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3201                           
  3202                           
  3203                           ;LCD.c: 74:     int i;;LCD.c: 75:     for (i = 0; a[i] != '\0'; i++)
  3204  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3206  0E68  01AF               	clrf	Lcd_Write_String@i
  3207  0E69  01B0               	clrf	Lcd_Write_String@i+1
  3208  0E6A  2E8F               	goto	l1854
  3209  0E6B                     l1850:
  3210                           
  3211                           ;LCD.c: 76:         Lcd_Write_Char(a[i]);
  3212  0E6B  082F               	movf	Lcd_Write_String@i,w
  3213  0E6C  072A               	addwf	Lcd_Write_String@a,w
  3214  0E6D  00AD               	movwf	??_Lcd_Write_String+1
  3215  0E6E  082B               	movf	Lcd_Write_String@a+1,w
  3216  0E6F  00AC               	movwf	??_Lcd_Write_String
  3217  0E70  1803               	skipnc
  3218  0E71  0AAC               	incf	??_Lcd_Write_String,f
  3219  0E72  1FAF               	btfss	Lcd_Write_String@i,7
  3220  0E73  2E75               	goto	u1100
  3221  0E74  03AC               	decf	??_Lcd_Write_String,f
  3222  0E75                     u1100:
  3223  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0E77  082C               	movf	??_Lcd_Write_String,w
  3226  0E78  00AE               	movwf	??_Lcd_Write_String+2
  3227  0E79  082E               	movf	??_Lcd_Write_String+2,w
  3228  0E7A  00FF               	movwf	btemp+1
  3229  0E7B  082D               	movf	??_Lcd_Write_String+1,w
  3230  0E7C  0084               	movwf	4
  3231  0E7D  120A  158A  2000  120A  158A  	fcall	stringtab
  3232  0E82  120A  158A  250A  120A  158A  	fcall	_Lcd_Write_Char
  3233  0E87                     l1852:
  3234  0E87  3001               	movlw	1
  3235  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0E8A  07AF               	addwf	Lcd_Write_String@i,f
  3238  0E8B  1803               	skipnc
  3239  0E8C  0AB0               	incf	Lcd_Write_String@i+1,f
  3240  0E8D  3000               	movlw	0
  3241  0E8E  07B0               	addwf	Lcd_Write_String@i+1,f
  3242  0E8F                     l1854:
  3243  0E8F  082F               	movf	Lcd_Write_String@i,w
  3244  0E90  072A               	addwf	Lcd_Write_String@a,w
  3245  0E91  00AD               	movwf	??_Lcd_Write_String+1
  3246  0E92  082B               	movf	Lcd_Write_String@a+1,w
  3247  0E93  00AC               	movwf	??_Lcd_Write_String
  3248  0E94  1803               	skipnc
  3249  0E95  0AAC               	incf	??_Lcd_Write_String,f
  3250  0E96  1FAF               	btfss	Lcd_Write_String@i,7
  3251  0E97  2E99               	goto	u1110
  3252  0E98  03AC               	decf	??_Lcd_Write_String,f
  3253  0E99                     u1110:
  3254  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0E9B  082C               	movf	??_Lcd_Write_String,w
  3257  0E9C  00AE               	movwf	??_Lcd_Write_String+2
  3258  0E9D  082E               	movf	??_Lcd_Write_String+2,w
  3259  0E9E  00FF               	movwf	btemp+1
  3260  0E9F  082D               	movf	??_Lcd_Write_String+1,w
  3261  0EA0  0084               	movwf	4
  3262  0EA1  120A  158A  2000  120A  158A  	fcall	stringtab
  3263  0EA6  3A00               	xorlw	0
  3264  0EA7  1D03               	skipz
  3265  0EA8  2EAA               	goto	u1121
  3266  0EA9  2EAB               	goto	u1120
  3267  0EAA                     u1121:
  3268  0EAA  2E6B               	goto	l1850
  3269  0EAB                     u1120:
  3270  0EAB                     l268:
  3271  0EAB  0008               	return
  3272  0EAC                     __end_of_Lcd_Write_String:
  3273                           
  3274                           	psect	text7
  3275  0D0A                     __ptext7:	
  3276 ;; *************** function _Lcd_Write_Char *****************
  3277 ;; Defined at:
  3278 ;;		line 59 in file "LCD.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  a               1    wreg     unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  a               1    9[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         0       0       0       0       0
  3293 ;;      Locals:         0       1       0       0       0
  3294 ;;      Temps:          0       1       0       0       0
  3295 ;;      Totals:         0       2       0       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_Lcd_Write_String
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           
  3307                           ;psect for function _Lcd_Write_Char
  3308  0D0A                     _Lcd_Write_Char:
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _Lcd_Write_Char: [wreg]
  3312                           ;Lcd_Write_Char@a stored from wreg
  3313  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0D0C  00A9               	movwf	Lcd_Write_Char@a
  3316  0D0D                     l1706:
  3317                           
  3318                           ;LCD.c: 62:     RC2 = 1;
  3319  0D0D  1507               	bsf	7,2	;volatile
  3320  0D0E                     l1708:
  3321                           
  3322                           ;LCD.c: 63:     PORTD = a;
  3323  0D0E  0829               	movf	Lcd_Write_Char@a,w
  3324  0D0F  0088               	movwf	8	;volatile
  3325  0D10                     l1710:
  3326                           
  3327                           ;LCD.c: 64:     RC1 = 1;
  3328  0D10  1487               	bsf	7,1	;volatile
  3329                           
  3330                           ;LCD.c: 65:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3331  0D11  3019               	movlw	25
  3332  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0D14  00A8               	movwf	??_Lcd_Write_Char
  3335  0D15                     u1957:
  3336  0D15  0BA8               	decfsz	??_Lcd_Write_Char,f
  3337  0D16  2D15               	goto	u1957
  3338  0D17  2D18               	nop2
  3339  0D18                     l1712:
  3340                           
  3341                           ;LCD.c: 70:     RC1 = 0;
  3342  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0D1A  1087               	bcf	7,1	;volatile
  3345  0D1B                     l262:
  3346  0D1B  0008               	return
  3347  0D1C                     __end_of_Lcd_Write_Char:
  3348                           
  3349                           	psect	text8
  3350  0D4D                     __ptext8:	
  3351 ;; *************** function _Lcd_Set_Cursor *****************
  3352 ;; Defined at:
  3353 ;;		line 30 in file "LCD.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  a               1    wreg     unsigned char 
  3356 ;;  b               1   11[BANK0 ] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  a               1   12[BANK0 ] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       1       0       0       0
  3369 ;;      Locals:         0       1       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       2       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    3
  3375 ;; This function calls:
  3376 ;;		_Lcd_Cmd
  3377 ;; This function is called by:
  3378 ;;		_setup
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _Lcd_Set_Cursor
  3385  0D4D                     _Lcd_Set_Cursor:
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3389                           ;Lcd_Set_Cursor@a stored from wreg
  3390  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0D4F  00AC               	movwf	Lcd_Set_Cursor@a
  3393  0D50                     l1840:
  3394                           
  3395                           ;LCD.c: 31:     if (a == 1){
  3396  0D50  032C               	decf	Lcd_Set_Cursor@a,w
  3397  0D51  1D03               	btfss	3,2
  3398  0D52  2D54               	goto	u1081
  3399  0D53  2D55               	goto	u1080
  3400  0D54                     u1081:
  3401  0D54  2D5E               	goto	l1844
  3402  0D55                     u1080:
  3403  0D55                     l1842:
  3404                           
  3405                           ;LCD.c: 32:         Lcd_Cmd((b & 0x0F)|0x80);
  3406  0D55  082B               	movf	Lcd_Set_Cursor@b,w
  3407  0D56  390F               	andlw	15
  3408  0D57  3880               	iorlw	128
  3409  0D58  120A  158A  251C  120A  158A  	fcall	_Lcd_Cmd
  3410                           
  3411                           ;LCD.c: 33:     }
  3412  0D5D  2D6C               	goto	l256
  3413  0D5E                     l1844:
  3414  0D5E  3002               	movlw	2
  3415  0D5F  062C               	xorwf	Lcd_Set_Cursor@a,w
  3416  0D60  1D03               	btfss	3,2
  3417  0D61  2D63               	goto	u1091
  3418  0D62  2D64               	goto	u1090
  3419  0D63                     u1091:
  3420  0D63  2D6C               	goto	l256
  3421  0D64                     u1090:
  3422  0D64                     l1846:
  3423                           
  3424                           ;LCD.c: 35:         Lcd_Cmd((b & 0x0F)|0xC0);
  3425  0D64  082B               	movf	Lcd_Set_Cursor@b,w
  3426  0D65  390F               	andlw	15
  3427  0D66  38C0               	iorlw	192
  3428  0D67  120A  158A  251C  120A  158A  	fcall	_Lcd_Cmd
  3429  0D6C                     l256:
  3430  0D6C  0008               	return
  3431  0D6D                     __end_of_Lcd_Set_Cursor:
  3432                           
  3433                           	psect	text9
  3434  0705                     __ptext9:	
  3435 ;; *************** function _Lcd_Init *****************
  3436 ;; Defined at:
  3437 ;;		line 40 in file "LCD.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0
  3453 ;;      Temps:          0       3       0       0       0
  3454 ;;      Totals:         0       3       0       0       0
  3455 ;;Total ram usage:        3 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    3
  3458 ;; This function calls:
  3459 ;;		_Lcd_Cmd
  3460 ;; This function is called by:
  3461 ;;		_setup
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _Lcd_Init
  3467  0705                     _Lcd_Init:
  3468  0705                     l1810:	
  3469                           ;incstack = 0
  3470                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3471                           
  3472                           
  3473                           ;LCD.c: 41:     PORTD = (0x00);
  3474  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0706  1303               	bcf	3,6	;RP1=0, select bank0
  3476  0707  0188               	clrf	8	;volatile
  3477  0708                     l1812:
  3478                           
  3479                           ;LCD.c: 42:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3480  0708  3034               	movlw	52
  3481  0709  1283               	bcf	3,5	;RP0=0, select bank0
  3482  070A  1303               	bcf	3,6	;RP1=0, select bank0
  3483  070B  00AC               	movwf	??_Lcd_Init+1
  3484  070C  30F1               	movlw	241
  3485  070D  00AB               	movwf	??_Lcd_Init
  3486  070E                     u1967:
  3487  070E  0BAB               	decfsz	??_Lcd_Init,f
  3488  070F  2F0E               	goto	u1967
  3489  0710  0BAC               	decfsz	??_Lcd_Init+1,f
  3490  0711  2F0E               	goto	u1967
  3491  0712                     l1814:
  3492                           
  3493                           ;LCD.c: 43:     Lcd_Cmd(0x30);
  3494  0712  3030               	movlw	48
  3495  0713  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3496  0718                     l1816:
  3497                           
  3498                           ;LCD.c: 44:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3499  0718  300D               	movlw	13
  3500  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3501  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3502  071B  00AC               	movwf	??_Lcd_Init+1
  3503  071C  30FB               	movlw	251
  3504  071D  00AB               	movwf	??_Lcd_Init
  3505  071E                     u1977:
  3506  071E  0BAB               	decfsz	??_Lcd_Init,f
  3507  071F  2F1E               	goto	u1977
  3508  0720  0BAC               	decfsz	??_Lcd_Init+1,f
  3509  0721  2F1E               	goto	u1977
  3510  0722                     l1818:
  3511                           
  3512                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  3513  0722  3030               	movlw	48
  3514  0723  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3515  0728                     l1820:
  3516                           
  3517                           ;LCD.c: 46:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3518  0728  301D               	movlw	29
  3519  0729  1283               	bcf	3,5	;RP0=0, select bank0
  3520  072A  1303               	bcf	3,6	;RP1=0, select bank0
  3521  072B  00AC               	movwf	??_Lcd_Init+1
  3522  072C  3090               	movlw	144
  3523  072D  00AB               	movwf	??_Lcd_Init
  3524  072E                     u1987:
  3525  072E  0BAB               	decfsz	??_Lcd_Init,f
  3526  072F  2F2E               	goto	u1987
  3527  0730  0BAC               	decfsz	??_Lcd_Init+1,f
  3528  0731  2F2E               	goto	u1987
  3529  0732  0000               	nop
  3530  0733                     l1822:
  3531                           
  3532                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  3533  0733  3030               	movlw	48
  3534  0734  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3535  0739                     l1824:
  3536                           
  3537                           ;LCD.c: 49:     Lcd_Cmd(0x38);
  3538  0739  3038               	movlw	56
  3539  073A  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3540  073F                     l1826:
  3541                           
  3542                           ;LCD.c: 50:     Lcd_Cmd(0x10);
  3543  073F  3010               	movlw	16
  3544  0740  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3545  0745                     l1828:
  3546                           
  3547                           ;LCD.c: 51:     Lcd_Cmd(0x01);
  3548  0745  3001               	movlw	1
  3549  0746  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3550  074B                     l1830:
  3551                           
  3552                           ;LCD.c: 52:     Lcd_Cmd(0x06);
  3553  074B  3006               	movlw	6
  3554  074C  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3555  0751                     l1832:
  3556                           
  3557                           ;LCD.c: 53:     Lcd_Cmd(0x10);
  3558  0751  3010               	movlw	16
  3559  0752  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3560  0757                     l1834:
  3561                           
  3562                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  3563  0757  300C               	movlw	12
  3564  0758  120A  158A  251C  120A  118A  	fcall	_Lcd_Cmd
  3565  075D                     l1836:
  3566                           
  3567                           ;LCD.c: 55:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3568  075D  3002               	movlw	2
  3569  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3570  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0760  00AD               	movwf	??_Lcd_Init+2
  3572  0761  3004               	movlw	4
  3573  0762  00AC               	movwf	??_Lcd_Init+1
  3574  0763  30B9               	movlw	185
  3575  0764  00AB               	movwf	??_Lcd_Init
  3576  0765                     u1997:
  3577  0765  0BAB               	decfsz	??_Lcd_Init,f
  3578  0766  2F65               	goto	u1997
  3579  0767  0BAC               	decfsz	??_Lcd_Init+1,f
  3580  0768  2F65               	goto	u1997
  3581  0769  0BAD               	decfsz	??_Lcd_Init+2,f
  3582  076A  2F65               	goto	u1997
  3583  076B  2F6C               	nop2
  3584  076C                     l259:
  3585  076C  0008               	return
  3586  076D                     __end_of_Lcd_Init:
  3587                           
  3588                           	psect	text10
  3589  0CEC                     __ptext10:	
  3590 ;; *************** function _Lcd_Clear *****************
  3591 ;; Defined at:
  3592 ;;		line 25 in file "LCD.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    3
  3613 ;; This function calls:
  3614 ;;		_Lcd_Cmd
  3615 ;; This function is called by:
  3616 ;;		_setup
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _Lcd_Clear
  3623  0CEC                     _Lcd_Clear:
  3624  0CEC                     l1838:	
  3625                           ;incstack = 0
  3626                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3627                           
  3628                           
  3629                           ;LCD.c: 26:     Lcd_Cmd(0);
  3630  0CEC  3000               	movlw	0
  3631  0CED  120A  158A  251C  120A  158A  	fcall	_Lcd_Cmd
  3632                           
  3633                           ;LCD.c: 27:     Lcd_Cmd(1);
  3634  0CF2  3001               	movlw	1
  3635  0CF3  120A  158A  251C  120A  158A  	fcall	_Lcd_Cmd
  3636  0CF8                     l250:
  3637  0CF8  0008               	return
  3638  0CF9                     __end_of_Lcd_Clear:
  3639                           
  3640                           	psect	text11
  3641  0D1C                     __ptext11:	
  3642 ;; *************** function _Lcd_Cmd *****************
  3643 ;; Defined at:
  3644 ;;		line 17 in file "LCD.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  a               1    wreg     unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  a               1   10[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       1       0       0       0
  3660 ;;      Temps:          0       2       0       0       0
  3661 ;;      Totals:         0       3       0       0       0
  3662 ;;Total ram usage:        3 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_Lcd_Clear
  3669 ;;		_Lcd_Set_Cursor
  3670 ;;		_Lcd_Init
  3671 ;;		_Lcd_Shift_Right
  3672 ;;		_Lcd_Shift_Left
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function _Lcd_Cmd
  3678  0D1C                     _Lcd_Cmd:
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _Lcd_Cmd: [wreg]
  3682                           ;Lcd_Cmd@a stored from wreg
  3683  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0D1E  00AA               	movwf	Lcd_Cmd@a
  3686  0D1F                     l1698:
  3687                           
  3688                           ;LCD.c: 18:     RC2 = 0;
  3689  0D1F  1107               	bcf	7,2	;volatile
  3690  0D20                     l1700:
  3691                           
  3692                           ;LCD.c: 19:     PORTD = a;
  3693  0D20  082A               	movf	Lcd_Cmd@a,w
  3694  0D21  0088               	movwf	8	;volatile
  3695  0D22                     l1702:
  3696                           
  3697                           ;LCD.c: 20:     RC1 = 1;
  3698  0D22  1487               	bsf	7,1	;volatile
  3699                           
  3700                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3701  0D23  300D               	movlw	13
  3702  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0D26  00A9               	movwf	??_Lcd_Cmd+1
  3705  0D27  30FB               	movlw	251
  3706  0D28  00A8               	movwf	??_Lcd_Cmd
  3707  0D29                     u2007:
  3708  0D29  0BA8               	decfsz	??_Lcd_Cmd,f
  3709  0D2A  2D29               	goto	u2007
  3710  0D2B  0BA9               	decfsz	??_Lcd_Cmd+1,f
  3711  0D2C  2D29               	goto	u2007
  3712  0D2D                     l1704:
  3713                           
  3714                           ;LCD.c: 22:     RC1 = 0;
  3715  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0D2F  1087               	bcf	7,1	;volatile
  3718  0D30                     l247:
  3719  0D30  0008               	return
  3720  0D31                     __end_of_Lcd_Cmd:
  3721                           
  3722                           	psect	text12
  3723  0DF0                     __ptext12:	
  3724 ;; *************** function _I2C_Master_Init *****************
  3725 ;; Defined at:
  3726 ;;		line 16 in file "I2C.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  c               4   22[BANK0 ] const unsigned long 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       4       0       0       0
  3741 ;;      Locals:         0       0       0       0       0
  3742 ;;      Temps:          0       4       0       0       0
  3743 ;;      Totals:         0       8       0       0       0
  3744 ;;Total ram usage:        8 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    3
  3747 ;; This function calls:
  3748 ;;		___lldiv
  3749 ;; This function is called by:
  3750 ;;		_setup
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _I2C_Master_Init
  3756  0DF0                     _I2C_Master_Init:
  3757  0DF0                     l1738:	
  3758                           ;incstack = 0
  3759                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3760                           
  3761                           
  3762                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3763  0DF0  3028               	movlw	40
  3764  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0DF3  0094               	movwf	20	;volatile
  3767  0DF4                     l1740:
  3768                           
  3769                           ;I2C.c: 19:     SSPCON2 = 0;
  3770  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  3771  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  3772  0DF6  0191               	clrf	17	;volatile
  3773  0DF7                     l1742:
  3774                           
  3775                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3776  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0DF9  0836               	movf	I2C_Master_Init@c,w
  3779  0DFA  00BA               	movwf	??_I2C_Master_Init
  3780  0DFB  0837               	movf	I2C_Master_Init@c+1,w
  3781  0DFC  00BB               	movwf	??_I2C_Master_Init+1
  3782  0DFD  0838               	movf	I2C_Master_Init@c+2,w
  3783  0DFE  00BC               	movwf	??_I2C_Master_Init+2
  3784  0DFF  0839               	movf	I2C_Master_Init@c+3,w
  3785  0E00  00BD               	movwf	??_I2C_Master_Init+3
  3786  0E01  3002               	movlw	2
  3787  0E02                     u1035:
  3788  0E02  1003               	clrc
  3789  0E03  0DBA               	rlf	??_I2C_Master_Init,f
  3790  0E04  0DBB               	rlf	??_I2C_Master_Init+1,f
  3791  0E05  0DBC               	rlf	??_I2C_Master_Init+2,f
  3792  0E06  0DBD               	rlf	??_I2C_Master_Init+3,f
  3793  0E07                     u1030:
  3794  0E07  3EFF               	addlw	-1
  3795  0E08  1D03               	skipz
  3796  0E09  2E02               	goto	u1035
  3797  0E0A  083D               	movf	??_I2C_Master_Init+3,w
  3798  0E0B  00AB               	movwf	___lldiv@divisor+3
  3799  0E0C  083C               	movf	??_I2C_Master_Init+2,w
  3800  0E0D  00AA               	movwf	___lldiv@divisor+2
  3801  0E0E  083B               	movf	??_I2C_Master_Init+1,w
  3802  0E0F  00A9               	movwf	___lldiv@divisor+1
  3803  0E10  083A               	movf	??_I2C_Master_Init,w
  3804  0E11  00A8               	movwf	___lldiv@divisor
  3805  0E12  3000               	movlw	0
  3806  0E13  00AF               	movwf	___lldiv@dividend+3
  3807  0E14  307A               	movlw	122
  3808  0E15  00AE               	movwf	___lldiv@dividend+2
  3809  0E16  3012               	movlw	18
  3810  0E17  00AD               	movwf	___lldiv@dividend+1
  3811  0E18  3000               	movlw	0
  3812  0E19  00AC               	movwf	___lldiv@dividend
  3813  0E1A  120A  118A  276D  120A  158A  	fcall	___lldiv
  3814  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0E21  0828               	movf	?___lldiv,w
  3817  0E22  3EFF               	addlw	255
  3818  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3819  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  3820  0E25  0093               	movwf	19	;volatile
  3821  0E26                     l1744:
  3822                           
  3823                           ;I2C.c: 21:     SSPSTAT = 0;
  3824  0E26  0194               	clrf	20	;volatile
  3825  0E27                     l1746:
  3826                           
  3827                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3828  0E27  1587               	bsf	7,3	;volatile
  3829  0E28                     l1748:
  3830                           
  3831                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3832  0E28  1607               	bsf	7,4	;volatile
  3833  0E29                     l29:
  3834  0E29  0008               	return
  3835  0E2A                     __end_of_I2C_Master_Init:
  3836                           
  3837                           	psect	text13
  3838  076D                     __ptext13:	
  3839 ;; *************** function ___lldiv *****************
  3840 ;; Defined at:
  3841 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  divisor         4    8[BANK0 ] unsigned long 
  3844 ;;  dividend        4   12[BANK0 ] unsigned long 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  quotient        4   17[BANK0 ] unsigned long 
  3847 ;;  counter         1   21[BANK0 ] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  4    8[BANK0 ] unsigned long 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       8       0       0       0
  3858 ;;      Locals:         0       5       0       0       0
  3859 ;;      Temps:          0       1       0       0       0
  3860 ;;      Totals:         0      14       0       0       0
  3861 ;;Total ram usage:       14 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    2
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_I2C_Master_Init
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function ___lldiv
  3873  076D                     ___lldiv:
  3874  076D                     l1714:	
  3875                           ;incstack = 0
  3876                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3877                           
  3878  076D  3000               	movlw	0
  3879  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3880  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0770  00B4               	movwf	___lldiv@quotient+3
  3882  0771  3000               	movlw	0
  3883  0772  00B3               	movwf	___lldiv@quotient+2
  3884  0773  3000               	movlw	0
  3885  0774  00B2               	movwf	___lldiv@quotient+1
  3886  0775  3000               	movlw	0
  3887  0776  00B1               	movwf	___lldiv@quotient
  3888  0777  082B               	movf	___lldiv@divisor+3,w
  3889  0778  042A               	iorwf	___lldiv@divisor+2,w
  3890  0779  0429               	iorwf	___lldiv@divisor+1,w
  3891  077A  0428               	iorwf	___lldiv@divisor,w
  3892  077B  1903               	skipnz
  3893  077C  2F7E               	goto	u961
  3894  077D  2F7F               	goto	u960
  3895  077E                     u961:
  3896  077E  2FCC               	goto	l1734
  3897  077F                     u960:
  3898  077F                     l1716:
  3899  077F  01B5               	clrf	___lldiv@counter
  3900  0780  0AB5               	incf	___lldiv@counter,f
  3901  0781  2F8F               	goto	l1720
  3902  0782                     l1718:
  3903  0782  3001               	movlw	1
  3904  0783  00B0               	movwf	??___lldiv
  3905  0784                     u975:
  3906  0784  1003               	clrc
  3907  0785  0DA8               	rlf	___lldiv@divisor,f
  3908  0786  0DA9               	rlf	___lldiv@divisor+1,f
  3909  0787  0DAA               	rlf	___lldiv@divisor+2,f
  3910  0788  0DAB               	rlf	___lldiv@divisor+3,f
  3911  0789  0BB0               	decfsz	??___lldiv,f
  3912  078A  2F84               	goto	u975
  3913  078B  3001               	movlw	1
  3914  078C  00B0               	movwf	??___lldiv
  3915  078D  0830               	movf	??___lldiv,w
  3916  078E  07B5               	addwf	___lldiv@counter,f
  3917  078F                     l1720:
  3918  078F  1FAB               	btfss	___lldiv@divisor+3,7
  3919  0790  2F92               	goto	u981
  3920  0791  2F93               	goto	u980
  3921  0792                     u981:
  3922  0792  2F82               	goto	l1718
  3923  0793                     u980:
  3924  0793                     l1722:
  3925  0793  3001               	movlw	1
  3926  0794  00B0               	movwf	??___lldiv
  3927  0795                     u995:
  3928  0795  1003               	clrc
  3929  0796  0DB1               	rlf	___lldiv@quotient,f
  3930  0797  0DB2               	rlf	___lldiv@quotient+1,f
  3931  0798  0DB3               	rlf	___lldiv@quotient+2,f
  3932  0799  0DB4               	rlf	___lldiv@quotient+3,f
  3933  079A  0BB0               	decfsz	??___lldiv,f
  3934  079B  2F95               	goto	u995
  3935  079C                     l1724:
  3936  079C  082B               	movf	___lldiv@divisor+3,w
  3937  079D  022F               	subwf	___lldiv@dividend+3,w
  3938  079E  1D03               	skipz
  3939  079F  2FAA               	goto	u1005
  3940  07A0  082A               	movf	___lldiv@divisor+2,w
  3941  07A1  022E               	subwf	___lldiv@dividend+2,w
  3942  07A2  1D03               	skipz
  3943  07A3  2FAA               	goto	u1005
  3944  07A4  0829               	movf	___lldiv@divisor+1,w
  3945  07A5  022D               	subwf	___lldiv@dividend+1,w
  3946  07A6  1D03               	skipz
  3947  07A7  2FAA               	goto	u1005
  3948  07A8  0828               	movf	___lldiv@divisor,w
  3949  07A9  022C               	subwf	___lldiv@dividend,w
  3950  07AA                     u1005:
  3951  07AA  1C03               	skipc
  3952  07AB  2FAD               	goto	u1001
  3953  07AC  2FAE               	goto	u1000
  3954  07AD                     u1001:
  3955  07AD  2FBD               	goto	l1730
  3956  07AE                     u1000:
  3957  07AE                     l1726:
  3958  07AE  0828               	movf	___lldiv@divisor,w
  3959  07AF  02AC               	subwf	___lldiv@dividend,f
  3960  07B0  0829               	movf	___lldiv@divisor+1,w
  3961  07B1  1C03               	skipc
  3962  07B2  0F29               	incfsz	___lldiv@divisor+1,w
  3963  07B3  02AD               	subwf	___lldiv@dividend+1,f
  3964  07B4  082A               	movf	___lldiv@divisor+2,w
  3965  07B5  1C03               	skipc
  3966  07B6  0F2A               	incfsz	___lldiv@divisor+2,w
  3967  07B7  02AE               	subwf	___lldiv@dividend+2,f
  3968  07B8  082B               	movf	___lldiv@divisor+3,w
  3969  07B9  1C03               	skipc
  3970  07BA  0F2B               	incfsz	___lldiv@divisor+3,w
  3971  07BB  02AF               	subwf	___lldiv@dividend+3,f
  3972  07BC                     l1728:
  3973  07BC  1431               	bsf	___lldiv@quotient,0
  3974  07BD                     l1730:
  3975  07BD  3001               	movlw	1
  3976  07BE                     u1015:
  3977  07BE  1003               	clrc
  3978  07BF  0CAB               	rrf	___lldiv@divisor+3,f
  3979  07C0  0CAA               	rrf	___lldiv@divisor+2,f
  3980  07C1  0CA9               	rrf	___lldiv@divisor+1,f
  3981  07C2  0CA8               	rrf	___lldiv@divisor,f
  3982  07C3  3EFF               	addlw	-1
  3983  07C4  1D03               	skipz
  3984  07C5  2FBE               	goto	u1015
  3985  07C6                     l1732:
  3986  07C6  3001               	movlw	1
  3987  07C7  02B5               	subwf	___lldiv@counter,f
  3988  07C8  1D03               	btfss	3,2
  3989  07C9  2FCB               	goto	u1021
  3990  07CA  2FCC               	goto	u1020
  3991  07CB                     u1021:
  3992  07CB  2F93               	goto	l1722
  3993  07CC                     u1020:
  3994  07CC                     l1734:
  3995  07CC  0834               	movf	___lldiv@quotient+3,w
  3996  07CD  00AB               	movwf	?___lldiv+3
  3997  07CE  0833               	movf	___lldiv@quotient+2,w
  3998  07CF  00AA               	movwf	?___lldiv+2
  3999  07D0  0832               	movf	___lldiv@quotient+1,w
  4000  07D1  00A9               	movwf	?___lldiv+1
  4001  07D2  0831               	movf	___lldiv@quotient,w
  4002  07D3  00A8               	movwf	?___lldiv
  4003  07D4                     l442:
  4004  07D4  0008               	return
  4005  07D5                     __end_of___lldiv:
  4006                           
  4007                           	psect	text14
  4008  0D92                     __ptext14:	
  4009 ;; *************** function _ADC_CONFIG *****************
  4010 ;; Defined at:
  4011 ;;		line 14 in file "ADC.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  frec            2    8[BANK0 ] int 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       2       0       0       0
  4026 ;;      Locals:         0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0
  4028 ;;      Totals:         0       2       0       0       0
  4029 ;;Total ram usage:        2 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    2
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_setup
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _ADC_CONFIG
  4041  0D92                     _ADC_CONFIG:
  4042  0D92                     l1784:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  4045                           
  4046                           
  4047                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  4048  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4050  0D94  141F               	bsf	31,0	;volatile
  4051  0D95                     l1786:
  4052                           
  4053                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  4054  0D95  30C3               	movlw	-61
  4055  0D96  059F               	andwf	31,f	;volatile
  4056  0D97                     l1788:
  4057                           
  4058                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  4059  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  4060  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  4061  0D99  139F               	bcf	31,7	;volatile
  4062  0D9A                     l1790:
  4063                           
  4064                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  4065  0D9A  121F               	bcf	31,4	;volatile
  4066  0D9B                     l1792:
  4067                           
  4068                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  4069  0D9B  129F               	bcf	31,5	;volatile
  4070  0D9C                     l1794:
  4071                           
  4072                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  4073  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0D9E  109F               	bcf	31,1	;volatile
  4076                           
  4077                           ;ADC.c: 23:     switch(frec){
  4078  0D9F  2DAD               	goto	l1804
  4079  0DA0                     l1796:
  4080                           
  4081                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  4082  0DA0  303F               	movlw	-193
  4083  0DA1  059F               	andwf	31,f	;volatile
  4084                           
  4085                           ;ADC.c: 26:             break;
  4086  0DA2  2DBD               	goto	l288
  4087  0DA3                     l1798:
  4088                           
  4089                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  4090  0DA3  081F               	movf	31,w	;volatile
  4091  0DA4  393F               	andlw	-193
  4092  0DA5  3840               	iorlw	64
  4093  0DA6  009F               	movwf	31	;volatile
  4094                           
  4095                           ;ADC.c: 29:             break;
  4096  0DA7  2DBD               	goto	l288
  4097  0DA8                     l1800:
  4098                           
  4099                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  4100  0DA8  081F               	movf	31,w	;volatile
  4101  0DA9  393F               	andlw	-193
  4102  0DAA  3880               	iorlw	128
  4103  0DAB  009F               	movwf	31	;volatile
  4104                           
  4105                           ;ADC.c: 32:             break;
  4106  0DAC  2DBD               	goto	l288
  4107  0DAD                     l1804:
  4108                           
  4109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4110                           ; Switch size 1, requested type "simple"
  4111                           ; Number of cases is 1, Range of values is 0 to 0
  4112                           ; switch strategies available:
  4113                           ; Name         Instructions Cycles
  4114                           ; simple_byte            4     3 (average)
  4115                           ; direct_byte           11     8 (fixed)
  4116                           ; jumptable            260     6 (fixed)
  4117                           ;	Chosen strategy is simple_byte
  4118  0DAD  0829               	movf	ADC_CONFIG@frec+1,w
  4119  0DAE  3A00               	xorlw	0	; case 0
  4120  0DAF  1903               	skipnz
  4121  0DB0  2DB2               	goto	l2466
  4122  0DB1  2DBD               	goto	l288
  4123  0DB2                     l2466:
  4124                           
  4125                           ; Switch size 1, requested type "simple"
  4126                           ; Number of cases is 3, Range of values is 1 to 8
  4127                           ; switch strategies available:
  4128                           ; Name         Instructions Cycles
  4129                           ; simple_byte           10     6 (average)
  4130                           ; direct_byte           35    11 (fixed)
  4131                           ; jumptable            263     9 (fixed)
  4132                           ;	Chosen strategy is simple_byte
  4133  0DB2  0828               	movf	ADC_CONFIG@frec,w
  4134  0DB3  3A01               	xorlw	1	; case 1
  4135  0DB4  1903               	skipnz
  4136  0DB5  2DA0               	goto	l1796
  4137  0DB6  3A05               	xorlw	5	; case 4
  4138  0DB7  1903               	skipnz
  4139  0DB8  2DA3               	goto	l1798
  4140  0DB9  3A0C               	xorlw	12	; case 8
  4141  0DBA  1903               	skipnz
  4142  0DBB  2DA8               	goto	l1800
  4143  0DBC  2DBD               	goto	l288
  4144  0DBD                     l288:
  4145  0DBD  0008               	return
  4146  0DBE                     __end_of_ADC_CONFIG:
  4147                           
  4148                           	psect	text15
  4149  0D31                     __ptext15:	
  4150 ;; *************** function _my_delay_s *****************
  4151 ;; Defined at:
  4152 ;;		line 35 in file "Master_Test.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  tiempo          1    wreg     unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  tiempo          1   11[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      unsigned char 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       1       0       0       0
  4168 ;;      Temps:          0       3       0       0       0
  4169 ;;      Totals:         0       4       0       0       0
  4170 ;;Total ram usage:        4 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _my_delay_s
  4182  0D31                     _my_delay_s:
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _my_delay_s: [wreg+status,2+status,0]
  4186                           ;my_delay_s@tiempo stored from wreg
  4187  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0D33  00AB               	movwf	my_delay_s@tiempo
  4190  0D34                     l2014:
  4191                           
  4192                           ;Master_Test.c: 36:     while(tiempo != 0){
  4193  0D34  2D45               	goto	l2018
  4194  0D35                     l2016:
  4195                           
  4196                           ;Master_Test.c: 37:         tiempo--;
  4197  0D35  3001               	movlw	1
  4198  0D36  02AB               	subwf	my_delay_s@tiempo,f
  4199                           
  4200                           ;Master_Test.c: 38:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  4201  0D37  300B               	movlw	11
  4202  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0D3A  00AA               	movwf	??_my_delay_s+2
  4205  0D3B  3026               	movlw	38
  4206  0D3C  00A9               	movwf	??_my_delay_s+1
  4207  0D3D  305D               	movlw	93
  4208  0D3E  00A8               	movwf	??_my_delay_s
  4209  0D3F                     u2017:
  4210  0D3F  0BA8               	decfsz	??_my_delay_s,f
  4211  0D40  2D3F               	goto	u2017
  4212  0D41  0BA9               	decfsz	??_my_delay_s+1,f
  4213  0D42  2D3F               	goto	u2017
  4214  0D43  0BAA               	decfsz	??_my_delay_s+2,f
  4215  0D44  2D3F               	goto	u2017
  4216  0D45                     l2018:
  4217                           
  4218                           ;Master_Test.c: 36:     while(tiempo != 0){
  4219  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0D47  082B               	movf	my_delay_s@tiempo,w
  4222  0D48  1D03               	btfss	3,2
  4223  0D49  2D4B               	goto	u1461
  4224  0D4A  2D4C               	goto	u1460
  4225  0D4B                     u1461:
  4226  0D4B  2D35               	goto	l2016
  4227  0D4C                     u1460:
  4228  0D4C                     l169:
  4229  0D4C  0008               	return
  4230  0D4D                     __end_of_my_delay_s:
  4231                           
  4232                           	psect	text16
  4233  07D5                     __ptext16:	
  4234 ;; *************** function ___wmul *****************
  4235 ;; Defined at:
  4236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  multiplier      2    8[BANK0 ] unsigned int 
  4239 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  product         2   12[BANK0 ] unsigned int 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    8[BANK0 ] unsigned int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       4       0       0       0
  4252 ;;      Locals:         0       2       0       0       0
  4253 ;;      Temps:          0       0       0       0       0
  4254 ;;      Totals:         0       6       0       0       0
  4255 ;;Total ram usage:        6 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function ___wmul
  4267  07D5                     ___wmul:
  4268  07D5                     l2138:	
  4269                           ;incstack = 0
  4270                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4271                           
  4272  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  4273  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  4274  07D7  01AC               	clrf	___wmul@product
  4275  07D8  01AD               	clrf	___wmul@product+1
  4276  07D9                     l2140:
  4277  07D9  1C28               	btfss	___wmul@multiplier,0
  4278  07DA  2FDC               	goto	u1551
  4279  07DB  2FDD               	goto	u1550
  4280  07DC                     u1551:
  4281  07DC  2FE3               	goto	l406
  4282  07DD                     u1550:
  4283  07DD                     l2142:
  4284  07DD  082A               	movf	___wmul@multiplicand,w
  4285  07DE  07AC               	addwf	___wmul@product,f
  4286  07DF  1803               	skipnc
  4287  07E0  0AAD               	incf	___wmul@product+1,f
  4288  07E1  082B               	movf	___wmul@multiplicand+1,w
  4289  07E2  07AD               	addwf	___wmul@product+1,f
  4290  07E3                     l406:
  4291  07E3  3001               	movlw	1
  4292  07E4                     u1565:
  4293  07E4  1003               	clrc
  4294  07E5  0DAA               	rlf	___wmul@multiplicand,f
  4295  07E6  0DAB               	rlf	___wmul@multiplicand+1,f
  4296  07E7  3EFF               	addlw	-1
  4297  07E8  1D03               	skipz
  4298  07E9  2FE4               	goto	u1565
  4299  07EA                     l2144:
  4300  07EA  3001               	movlw	1
  4301  07EB                     u1575:
  4302  07EB  1003               	clrc
  4303  07EC  0CA9               	rrf	___wmul@multiplier+1,f
  4304  07ED  0CA8               	rrf	___wmul@multiplier,f
  4305  07EE  3EFF               	addlw	-1
  4306  07EF  1D03               	skipz
  4307  07F0  2FEB               	goto	u1575
  4308  07F1                     l2146:
  4309  07F1  0828               	movf	___wmul@multiplier,w
  4310  07F2  0429               	iorwf	___wmul@multiplier+1,w
  4311  07F3  1D03               	btfss	3,2
  4312  07F4  2FF6               	goto	u1581
  4313  07F5  2FF7               	goto	u1580
  4314  07F6                     u1581:
  4315  07F6  2FD9               	goto	l2140
  4316  07F7                     u1580:
  4317  07F7                     l2148:
  4318  07F7  082D               	movf	___wmul@product+1,w
  4319  07F8  00A9               	movwf	?___wmul+1
  4320  07F9  082C               	movf	___wmul@product,w
  4321  07FA  00A8               	movwf	?___wmul
  4322  07FB                     l408:
  4323  07FB  0008               	return
  4324  07FC                     __end_of___wmul:
  4325                           
  4326                           	psect	text17
  4327  0CD5                     __ptext17:	
  4328 ;; *************** function _I2C_Master_Write *****************
  4329 ;; Defined at:
  4330 ;;		line 65 in file "I2C.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  d               2    8[BANK0 ] unsigned int 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0, pclath, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4344 ;;      Params:         0       2       0       0       0
  4345 ;;      Locals:         0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0
  4347 ;;      Totals:         0       2       0       0       0
  4348 ;;Total ram usage:        2 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    3
  4351 ;; This function calls:
  4352 ;;		_I2C_Master_Wait
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _I2C_Master_Write
  4360  0CD5                     _I2C_Master_Write:
  4361  0CD5                     l1994:	
  4362                           ;incstack = 0
  4363                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4364                           
  4365                           
  4366                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4367  0CD5  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4368  0CDA                     l1996:
  4369                           
  4370                           ;I2C.c: 68:     SSPBUF = d;
  4371  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0CDC  0828               	movf	I2C_Master_Write@d,w
  4374  0CDD  0093               	movwf	19	;volatile
  4375  0CDE                     l47:
  4376  0CDE  0008               	return
  4377  0CDF                     __end_of_I2C_Master_Write:
  4378                           
  4379                           	psect	text18
  4380  0CCC                     __ptext18:	
  4381 ;; *************** function _I2C_Master_Stop *****************
  4382 ;; Defined at:
  4383 ;;		line 55 in file "I2C.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    3
  4404 ;; This function calls:
  4405 ;;		_I2C_Master_Wait
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _I2C_Master_Stop
  4413  0CCC                     _I2C_Master_Stop:
  4414  0CCC                     l1990:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4417                           
  4418                           
  4419                           ;I2C.c: 57:     I2C_Master_Wait();
  4420  0CCC  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4421  0CD1                     l1992:
  4422                           
  4423                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4424  0CD1  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0CD2  1303               	bcf	3,6	;RP1=0, select bank1
  4426  0CD3  1511               	bsf	17,2	;volatile
  4427  0CD4                     l44:
  4428  0CD4  0008               	return
  4429  0CD5                     __end_of_I2C_Master_Stop:
  4430                           
  4431                           	psect	text19
  4432  0CC3                     __ptext19:	
  4433 ;; *************** function _I2C_Master_Start *****************
  4434 ;; Defined at:
  4435 ;;		line 39 in file "I2C.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, pclath, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         0       0       0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    3
  4456 ;; This function calls:
  4457 ;;		_I2C_Master_Wait
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _I2C_Master_Start
  4465  0CC3                     _I2C_Master_Start:
  4466  0CC3                     l1986:	
  4467                           ;incstack = 0
  4468                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4469                           
  4470                           
  4471                           ;I2C.c: 41:     I2C_Master_Wait();
  4472  0CC3  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4473  0CC8                     l1988:
  4474                           
  4475                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4476  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  4477  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  4478  0CCA  1411               	bsf	17,0	;volatile
  4479  0CCB                     l38:
  4480  0CCB  0008               	return
  4481  0CCC                     __end_of_I2C_Master_Start:
  4482                           
  4483                           	psect	text20
  4484  0DBE                     __ptext20:	
  4485 ;; *************** function _I2C_Master_Read *****************
  4486 ;; Defined at:
  4487 ;;		line 74 in file "I2C.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  a               2    8[BANK0 ] unsigned short 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  temp            2   12[BANK0 ] unsigned short 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  2    8[BANK0 ] unsigned short 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       2       0       0       0
  4502 ;;      Locals:         0       2       0       0       0
  4503 ;;      Temps:          0       2       0       0       0
  4504 ;;      Totals:         0       6       0       0       0
  4505 ;;Total ram usage:        6 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    3
  4508 ;; This function calls:
  4509 ;;		_I2C_Master_Wait
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _I2C_Master_Read
  4517  0DBE                     _I2C_Master_Read:
  4518  0DBE                     l1998:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4521                           
  4522                           
  4523                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4524  0DBE  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4525  0DC3                     l2000:
  4526                           
  4527                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4528  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  4529  0DC4  1303               	bcf	3,6	;RP1=0, select bank1
  4530  0DC5  1591               	bsf	17,3	;volatile
  4531                           
  4532                           ;I2C.c: 79:     I2C_Master_Wait();
  4533  0DC6  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4534  0DCB                     l2002:
  4535                           
  4536                           ;I2C.c: 80:     temp = SSPBUF;
  4537  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0DCD  0813               	movf	19,w	;volatile
  4540  0DCE  00AA               	movwf	??_I2C_Master_Read
  4541  0DCF  01AB               	clrf	??_I2C_Master_Read+1
  4542  0DD0  082A               	movf	??_I2C_Master_Read,w
  4543  0DD1  00AC               	movwf	I2C_Master_Read@temp
  4544  0DD2  082B               	movf	??_I2C_Master_Read+1,w
  4545  0DD3  00AD               	movwf	I2C_Master_Read@temp+1
  4546  0DD4                     l2004:
  4547                           
  4548                           ;I2C.c: 81:     I2C_Master_Wait();
  4549  0DD4  120A  158A  24DF  120A  158A  	fcall	_I2C_Master_Wait
  4550  0DD9                     l2006:
  4551                           
  4552                           ;I2C.c: 82:     if(a == 1){
  4553  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  4554  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  4555  0DDB  0328               	decf	I2C_Master_Read@a,w
  4556  0DDC  0429               	iorwf	I2C_Master_Read@a+1,w
  4557  0DDD  1D03               	btfss	3,2
  4558  0DDE  2DE0               	goto	u1451
  4559  0DDF  2DE1               	goto	u1450
  4560  0DE0                     u1451:
  4561  0DE0  2DE5               	goto	l50
  4562  0DE1                     u1450:
  4563  0DE1                     l2008:
  4564                           
  4565                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4566  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  4568  0DE3  1291               	bcf	17,5	;volatile
  4569                           
  4570                           ;I2C.c: 84:     }else{
  4571  0DE4  2DE8               	goto	l51
  4572  0DE5                     l50:
  4573                           
  4574                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4575  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0DE7  1691               	bsf	17,5	;volatile
  4578  0DE8                     l51:	
  4579                           ;I2C.c: 86:     }
  4580                           
  4581                           
  4582                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4583  0DE8  1611               	bsf	17,4	;volatile
  4584  0DE9                     l2010:
  4585                           
  4586                           ;I2C.c: 88:     return temp;
  4587  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0DEB  082D               	movf	I2C_Master_Read@temp+1,w
  4590  0DEC  00A9               	movwf	?_I2C_Master_Read+1
  4591  0DED  082C               	movf	I2C_Master_Read@temp,w
  4592  0DEE  00A8               	movwf	?_I2C_Master_Read
  4593  0DEF                     l52:
  4594  0DEF  0008               	return
  4595  0DF0                     __end_of_I2C_Master_Read:
  4596                           
  4597                           	psect	text21
  4598  0CDF                     __ptext21:	
  4599 ;; *************** function _I2C_Master_Wait *****************
  4600 ;; Defined at:
  4601 ;;		line 32 in file "I2C.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0
  4618 ;;      Totals:         0       0       0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    2
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_I2C_Master_Start
  4626 ;;		_I2C_Master_Stop
  4627 ;;		_I2C_Master_Write
  4628 ;;		_I2C_Master_Read
  4629 ;;		_I2C_Master_RepeatedStart
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _I2C_Master_Wait
  4635  0CDF                     _I2C_Master_Wait:
  4636  0CDF                     l1750:	
  4637                           ;incstack = 0
  4638                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4639                           
  4640  0CDF                     l32:	
  4641                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4642                           
  4643  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  4644  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  4645  0CE1  1914               	btfsc	20,2	;volatile
  4646  0CE2  2CE4               	goto	u1041
  4647  0CE3  2CE5               	goto	u1040
  4648  0CE4                     u1041:
  4649  0CE4  2CDF               	goto	l32
  4650  0CE5                     u1040:
  4651  0CE5                     l1752:
  4652  0CE5  0811               	movf	17,w	;volatile
  4653  0CE6  391F               	andlw	31
  4654  0CE7  1D03               	btfss	3,2
  4655  0CE8  2CEA               	goto	u1051
  4656  0CE9  2CEB               	goto	u1050
  4657  0CEA                     u1051:
  4658  0CEA  2CDF               	goto	l32
  4659  0CEB                     u1050:
  4660  0CEB                     l35:
  4661  0CEB  0008               	return
  4662  0CEC                     __end_of_I2C_Master_Wait:
  4663                           
  4664                           	psect	text22
  4665  0F98                     __ptext22:	
  4666 ;; *************** function _Division *****************
  4667 ;; Defined at:
  4668 ;;		line 42 in file "Master_Test.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  y               1    wreg     unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  y               1   29[BANK0 ] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       0       0       0       0
  4683 ;;      Locals:         0       3       0       0       0
  4684 ;;      Temps:          0       3       0       0       0
  4685 ;;      Totals:         0       6       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    3
  4689 ;; This function calls:
  4690 ;;		___awdiv
  4691 ;;		___awmod
  4692 ;; This function is called by:
  4693 ;;		_main
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _Division
  4699  0F98                     _Division:
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  4703                           ;Division@y stored from wreg
  4704  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0F9A  00BD               	movwf	Division@y
  4707  0F9B                     l2020:
  4708                           
  4709                           ;Master_Test.c: 43:         cen = (y/100);
  4710  0F9B  3064               	movlw	100
  4711  0F9C  00AF               	movwf	___awdiv@divisor
  4712  0F9D  3000               	movlw	0
  4713  0F9E  00B0               	movwf	___awdiv@divisor+1
  4714  0F9F  083D               	movf	Division@y,w
  4715  0FA0  00B8               	movwf	??_Division
  4716  0FA1  01B9               	clrf	??_Division+1
  4717  0FA2  0838               	movf	??_Division,w
  4718  0FA3  00B1               	movwf	___awdiv@dividend
  4719  0FA4  0839               	movf	??_Division+1,w
  4720  0FA5  00B2               	movwf	___awdiv@dividend+1
  4721  0FA6  120A  118A  2633  120A  158A  	fcall	___awdiv
  4722  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0FAD  082F               	movf	?___awdiv,w
  4725  0FAE  00BA               	movwf	??_Division+2
  4726  0FAF  083A               	movf	??_Division+2,w
  4727  0FB0  00D5               	movwf	_cen
  4728                           
  4729                           ;Master_Test.c: 44:         dec = ((y%100)/10);
  4730  0FB1  300A               	movlw	10
  4731  0FB2  00AF               	movwf	___awdiv@divisor
  4732  0FB3  3000               	movlw	0
  4733  0FB4  00B0               	movwf	___awdiv@divisor+1
  4734  0FB5  083D               	movf	Division@y,w
  4735  0FB6  00B8               	movwf	??_Division
  4736  0FB7  01B9               	clrf	??_Division+1
  4737  0FB8  0838               	movf	??_Division,w
  4738  0FB9  00AA               	movwf	___awmod@dividend
  4739  0FBA  0839               	movf	??_Division+1,w
  4740  0FBB  00AB               	movwf	___awmod@dividend+1
  4741  0FBC  3064               	movlw	100
  4742  0FBD  00A8               	movwf	___awmod@divisor
  4743  0FBE  3000               	movlw	0
  4744  0FBF  00A9               	movwf	___awmod@divisor+1
  4745  0FC0  120A  158A  273D  120A  158A  	fcall	___awmod
  4746  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0FC7  0829               	movf	?___awmod+1,w
  4749  0FC8  00B2               	movwf	___awdiv@dividend+1
  4750  0FC9  0828               	movf	?___awmod,w
  4751  0FCA  00B1               	movwf	___awdiv@dividend
  4752  0FCB  120A  118A  2633  120A  158A  	fcall	___awdiv
  4753  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0FD2  082F               	movf	?___awdiv,w
  4756  0FD3  00BA               	movwf	??_Division+2
  4757  0FD4  083A               	movf	??_Division+2,w
  4758  0FD5  00D4               	movwf	_dec
  4759                           
  4760                           ;Master_Test.c: 45:         uni = ((y%100)%10);
  4761  0FD6  083D               	movf	Division@y,w
  4762  0FD7  00B8               	movwf	??_Division
  4763  0FD8  01B9               	clrf	??_Division+1
  4764  0FD9  0838               	movf	??_Division,w
  4765  0FDA  00AA               	movwf	___awmod@dividend
  4766  0FDB  0839               	movf	??_Division+1,w
  4767  0FDC  00AB               	movwf	___awmod@dividend+1
  4768  0FDD  3064               	movlw	100
  4769  0FDE  00A8               	movwf	___awmod@divisor
  4770  0FDF  3000               	movlw	0
  4771  0FE0  00A9               	movwf	___awmod@divisor+1
  4772  0FE1  120A  158A  273D  120A  158A  	fcall	___awmod
  4773  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0FE8  0829               	movf	?___awmod+1,w
  4776  0FE9  00BC               	movwf	_Division$1282+1
  4777  0FEA  0828               	movf	?___awmod,w
  4778  0FEB  00BB               	movwf	_Division$1282
  4779                           
  4780                           ;Master_Test.c: 45:         uni = ((y%100)%10);
  4781  0FEC  300A               	movlw	10
  4782  0FED  00A8               	movwf	___awmod@divisor
  4783  0FEE  3000               	movlw	0
  4784  0FEF  00A9               	movwf	___awmod@divisor+1
  4785  0FF0  083C               	movf	_Division$1282+1,w
  4786  0FF1  00AB               	movwf	___awmod@dividend+1
  4787  0FF2  083B               	movf	_Division$1282,w
  4788  0FF3  00AA               	movwf	___awmod@dividend
  4789  0FF4  120A  158A  273D  120A  158A  	fcall	___awmod
  4790  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0FFB  0828               	movf	?___awmod,w
  4793  0FFC  00B8               	movwf	??_Division
  4794  0FFD  0838               	movf	??_Division,w
  4795  0FFE  00D3               	movwf	_uni
  4796  0FFF                     l172:
  4797  0FFF  0008               	return
  4798  1000                     __end_of_Division:
  4799                           
  4800                           	psect	text23
  4801  0F3D                     __ptext23:	
  4802 ;; *************** function ___awmod *****************
  4803 ;; Defined at:
  4804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  divisor         2    8[BANK0 ] int 
  4807 ;;  dividend        2   10[BANK0 ] int 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  sign            1   14[BANK0 ] unsigned char 
  4810 ;;  counter         1   13[BANK0 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  2    8[BANK0 ] int 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       4       0       0       0
  4821 ;;      Locals:         0       2       0       0       0
  4822 ;;      Temps:          0       1       0       0       0
  4823 ;;      Totals:         0       7       0       0       0
  4824 ;;Total ram usage:        7 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    2
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_Division
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function ___awmod
  4836  0F3D                     ___awmod:
  4837  0F3D                     l1900:	
  4838                           ;incstack = 0
  4839                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4840                           
  4841  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  4842  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  4843  0F3F  01AE               	clrf	___awmod@sign
  4844  0F40                     l1902:
  4845  0F40  1FAB               	btfss	___awmod@dividend+1,7
  4846  0F41  2F43               	goto	u1231
  4847  0F42  2F44               	goto	u1230
  4848  0F43                     u1231:
  4849  0F43  2F4B               	goto	l1908
  4850  0F44                     u1230:
  4851  0F44                     l1904:
  4852  0F44  09AA               	comf	___awmod@dividend,f
  4853  0F45  09AB               	comf	___awmod@dividend+1,f
  4854  0F46  0AAA               	incf	___awmod@dividend,f
  4855  0F47  1903               	skipnz
  4856  0F48  0AAB               	incf	___awmod@dividend+1,f
  4857  0F49                     l1906:
  4858  0F49  01AE               	clrf	___awmod@sign
  4859  0F4A  0AAE               	incf	___awmod@sign,f
  4860  0F4B                     l1908:
  4861  0F4B  1FA9               	btfss	___awmod@divisor+1,7
  4862  0F4C  2F4E               	goto	u1241
  4863  0F4D  2F4F               	goto	u1240
  4864  0F4E                     u1241:
  4865  0F4E  2F54               	goto	l1912
  4866  0F4F                     u1240:
  4867  0F4F                     l1910:
  4868  0F4F  09A8               	comf	___awmod@divisor,f
  4869  0F50  09A9               	comf	___awmod@divisor+1,f
  4870  0F51  0AA8               	incf	___awmod@divisor,f
  4871  0F52  1903               	skipnz
  4872  0F53  0AA9               	incf	___awmod@divisor+1,f
  4873  0F54                     l1912:
  4874  0F54  0828               	movf	___awmod@divisor,w
  4875  0F55  0429               	iorwf	___awmod@divisor+1,w
  4876  0F56  1903               	btfsc	3,2
  4877  0F57  2F59               	goto	u1251
  4878  0F58  2F5A               	goto	u1250
  4879  0F59                     u1251:
  4880  0F59  2F89               	goto	l1930
  4881  0F5A                     u1250:
  4882  0F5A                     l1914:
  4883  0F5A  01AD               	clrf	___awmod@counter
  4884  0F5B  0AAD               	incf	___awmod@counter,f
  4885  0F5C  2F68               	goto	l1920
  4886  0F5D                     l1916:
  4887  0F5D  3001               	movlw	1
  4888  0F5E                     u1265:
  4889  0F5E  1003               	clrc
  4890  0F5F  0DA8               	rlf	___awmod@divisor,f
  4891  0F60  0DA9               	rlf	___awmod@divisor+1,f
  4892  0F61  3EFF               	addlw	-1
  4893  0F62  1D03               	skipz
  4894  0F63  2F5E               	goto	u1265
  4895  0F64                     l1918:
  4896  0F64  3001               	movlw	1
  4897  0F65  00AC               	movwf	??___awmod
  4898  0F66  082C               	movf	??___awmod,w
  4899  0F67  07AD               	addwf	___awmod@counter,f
  4900  0F68                     l1920:
  4901  0F68  1FA9               	btfss	___awmod@divisor+1,7
  4902  0F69  2F6B               	goto	u1271
  4903  0F6A  2F6C               	goto	u1270
  4904  0F6B                     u1271:
  4905  0F6B  2F5D               	goto	l1916
  4906  0F6C                     u1270:
  4907  0F6C                     l1922:
  4908  0F6C  0829               	movf	___awmod@divisor+1,w
  4909  0F6D  022B               	subwf	___awmod@dividend+1,w
  4910  0F6E  1D03               	skipz
  4911  0F6F  2F72               	goto	u1285
  4912  0F70  0828               	movf	___awmod@divisor,w
  4913  0F71  022A               	subwf	___awmod@dividend,w
  4914  0F72                     u1285:
  4915  0F72  1C03               	skipc
  4916  0F73  2F75               	goto	u1281
  4917  0F74  2F76               	goto	u1280
  4918  0F75                     u1281:
  4919  0F75  2F7C               	goto	l1926
  4920  0F76                     u1280:
  4921  0F76                     l1924:
  4922  0F76  0828               	movf	___awmod@divisor,w
  4923  0F77  02AA               	subwf	___awmod@dividend,f
  4924  0F78  0829               	movf	___awmod@divisor+1,w
  4925  0F79  1C03               	skipc
  4926  0F7A  03AB               	decf	___awmod@dividend+1,f
  4927  0F7B  02AB               	subwf	___awmod@dividend+1,f
  4928  0F7C                     l1926:
  4929  0F7C  3001               	movlw	1
  4930  0F7D                     u1295:
  4931  0F7D  1003               	clrc
  4932  0F7E  0CA9               	rrf	___awmod@divisor+1,f
  4933  0F7F  0CA8               	rrf	___awmod@divisor,f
  4934  0F80  3EFF               	addlw	-1
  4935  0F81  1D03               	skipz
  4936  0F82  2F7D               	goto	u1295
  4937  0F83                     l1928:
  4938  0F83  3001               	movlw	1
  4939  0F84  02AD               	subwf	___awmod@counter,f
  4940  0F85  1D03               	btfss	3,2
  4941  0F86  2F88               	goto	u1301
  4942  0F87  2F89               	goto	u1300
  4943  0F88                     u1301:
  4944  0F88  2F6C               	goto	l1922
  4945  0F89                     u1300:
  4946  0F89                     l1930:
  4947  0F89  082E               	movf	___awmod@sign,w
  4948  0F8A  1903               	btfsc	3,2
  4949  0F8B  2F8D               	goto	u1311
  4950  0F8C  2F8E               	goto	u1310
  4951  0F8D                     u1311:
  4952  0F8D  2F93               	goto	l1934
  4953  0F8E                     u1310:
  4954  0F8E                     l1932:
  4955  0F8E  09AA               	comf	___awmod@dividend,f
  4956  0F8F  09AB               	comf	___awmod@dividend+1,f
  4957  0F90  0AAA               	incf	___awmod@dividend,f
  4958  0F91  1903               	skipnz
  4959  0F92  0AAB               	incf	___awmod@dividend+1,f
  4960  0F93                     l1934:
  4961  0F93  082B               	movf	___awmod@dividend+1,w
  4962  0F94  00A9               	movwf	?___awmod+1
  4963  0F95  082A               	movf	___awmod@dividend,w
  4964  0F96  00A8               	movwf	?___awmod
  4965  0F97                     l572:
  4966  0F97  0008               	return
  4967  0F98                     __end_of___awmod:
  4968                           
  4969                           	psect	text24
  4970  0633                     __ptext24:	
  4971 ;; *************** function ___awdiv *****************
  4972 ;; Defined at:
  4973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  divisor         2   15[BANK0 ] int 
  4976 ;;  dividend        2   17[BANK0 ] int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  quotient        2   22[BANK0 ] int 
  4979 ;;  sign            1   21[BANK0 ] unsigned char 
  4980 ;;  counter         1   20[BANK0 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2   15[BANK0 ] int 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4990 ;;      Params:         0       4       0       0       0
  4991 ;;      Locals:         0       4       0       0       0
  4992 ;;      Temps:          0       1       0       0       0
  4993 ;;      Totals:         0       9       0       0       0
  4994 ;;Total ram usage:        9 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    2
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_Division
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function ___awdiv
  5007  0633                     ___awdiv:
  5008  0633                     l1856:	
  5009                           ;incstack = 0
  5010                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5011                           
  5012  0633  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0634  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0635  01B5               	clrf	___awdiv@sign
  5015  0636                     l1858:
  5016  0636  1FB0               	btfss	___awdiv@divisor+1,7
  5017  0637  2E39               	goto	u1131
  5018  0638  2E3A               	goto	u1130
  5019  0639                     u1131:
  5020  0639  2E41               	goto	l1864
  5021  063A                     u1130:
  5022  063A                     l1860:
  5023  063A  09AF               	comf	___awdiv@divisor,f
  5024  063B  09B0               	comf	___awdiv@divisor+1,f
  5025  063C  0AAF               	incf	___awdiv@divisor,f
  5026  063D  1903               	skipnz
  5027  063E  0AB0               	incf	___awdiv@divisor+1,f
  5028  063F                     l1862:
  5029  063F  01B5               	clrf	___awdiv@sign
  5030  0640  0AB5               	incf	___awdiv@sign,f
  5031  0641                     l1864:
  5032  0641  1FB2               	btfss	___awdiv@dividend+1,7
  5033  0642  2E44               	goto	u1141
  5034  0643  2E45               	goto	u1140
  5035  0644                     u1141:
  5036  0644  2E4E               	goto	l1870
  5037  0645                     u1140:
  5038  0645                     l1866:
  5039  0645  09B1               	comf	___awdiv@dividend,f
  5040  0646  09B2               	comf	___awdiv@dividend+1,f
  5041  0647  0AB1               	incf	___awdiv@dividend,f
  5042  0648  1903               	skipnz
  5043  0649  0AB2               	incf	___awdiv@dividend+1,f
  5044  064A                     l1868:
  5045  064A  3001               	movlw	1
  5046  064B  00B3               	movwf	??___awdiv
  5047  064C  0833               	movf	??___awdiv,w
  5048  064D  06B5               	xorwf	___awdiv@sign,f
  5049  064E                     l1870:
  5050  064E  01B6               	clrf	___awdiv@quotient
  5051  064F  01B7               	clrf	___awdiv@quotient+1
  5052  0650                     l1872:
  5053  0650  082F               	movf	___awdiv@divisor,w
  5054  0651  0430               	iorwf	___awdiv@divisor+1,w
  5055  0652  1903               	btfsc	3,2
  5056  0653  2E55               	goto	u1151
  5057  0654  2E56               	goto	u1150
  5058  0655                     u1151:
  5059  0655  2E8D               	goto	l1892
  5060  0656                     u1150:
  5061  0656                     l1874:
  5062  0656  01B4               	clrf	___awdiv@counter
  5063  0657  0AB4               	incf	___awdiv@counter,f
  5064  0658  2E64               	goto	l1880
  5065  0659                     l1876:
  5066  0659  3001               	movlw	1
  5067  065A                     u1165:
  5068  065A  1003               	clrc
  5069  065B  0DAF               	rlf	___awdiv@divisor,f
  5070  065C  0DB0               	rlf	___awdiv@divisor+1,f
  5071  065D  3EFF               	addlw	-1
  5072  065E  1D03               	skipz
  5073  065F  2E5A               	goto	u1165
  5074  0660                     l1878:
  5075  0660  3001               	movlw	1
  5076  0661  00B3               	movwf	??___awdiv
  5077  0662  0833               	movf	??___awdiv,w
  5078  0663  07B4               	addwf	___awdiv@counter,f
  5079  0664                     l1880:
  5080  0664  1FB0               	btfss	___awdiv@divisor+1,7
  5081  0665  2E67               	goto	u1171
  5082  0666  2E68               	goto	u1170
  5083  0667                     u1171:
  5084  0667  2E59               	goto	l1876
  5085  0668                     u1170:
  5086  0668                     l1882:
  5087  0668  3001               	movlw	1
  5088  0669                     u1185:
  5089  0669  1003               	clrc
  5090  066A  0DB6               	rlf	___awdiv@quotient,f
  5091  066B  0DB7               	rlf	___awdiv@quotient+1,f
  5092  066C  3EFF               	addlw	-1
  5093  066D  1D03               	skipz
  5094  066E  2E69               	goto	u1185
  5095  066F  0830               	movf	___awdiv@divisor+1,w
  5096  0670  0232               	subwf	___awdiv@dividend+1,w
  5097  0671  1D03               	skipz
  5098  0672  2E75               	goto	u1195
  5099  0673  082F               	movf	___awdiv@divisor,w
  5100  0674  0231               	subwf	___awdiv@dividend,w
  5101  0675                     u1195:
  5102  0675  1C03               	skipc
  5103  0676  2E78               	goto	u1191
  5104  0677  2E79               	goto	u1190
  5105  0678                     u1191:
  5106  0678  2E80               	goto	l1888
  5107  0679                     u1190:
  5108  0679                     l1884:
  5109  0679  082F               	movf	___awdiv@divisor,w
  5110  067A  02B1               	subwf	___awdiv@dividend,f
  5111  067B  0830               	movf	___awdiv@divisor+1,w
  5112  067C  1C03               	skipc
  5113  067D  03B2               	decf	___awdiv@dividend+1,f
  5114  067E  02B2               	subwf	___awdiv@dividend+1,f
  5115  067F                     l1886:
  5116  067F  1436               	bsf	___awdiv@quotient,0
  5117  0680                     l1888:
  5118  0680  3001               	movlw	1
  5119  0681                     u1205:
  5120  0681  1003               	clrc
  5121  0682  0CB0               	rrf	___awdiv@divisor+1,f
  5122  0683  0CAF               	rrf	___awdiv@divisor,f
  5123  0684  3EFF               	addlw	-1
  5124  0685  1D03               	skipz
  5125  0686  2E81               	goto	u1205
  5126  0687                     l1890:
  5127  0687  3001               	movlw	1
  5128  0688  02B4               	subwf	___awdiv@counter,f
  5129  0689  1D03               	btfss	3,2
  5130  068A  2E8C               	goto	u1211
  5131  068B  2E8D               	goto	u1210
  5132  068C                     u1211:
  5133  068C  2E68               	goto	l1882
  5134  068D                     u1210:
  5135  068D                     l1892:
  5136  068D  0835               	movf	___awdiv@sign,w
  5137  068E  1903               	btfsc	3,2
  5138  068F  2E91               	goto	u1221
  5139  0690  2E92               	goto	u1220
  5140  0691                     u1221:
  5141  0691  2E97               	goto	l1896
  5142  0692                     u1220:
  5143  0692                     l1894:
  5144  0692  09B6               	comf	___awdiv@quotient,f
  5145  0693  09B7               	comf	___awdiv@quotient+1,f
  5146  0694  0AB6               	incf	___awdiv@quotient,f
  5147  0695  1903               	skipnz
  5148  0696  0AB7               	incf	___awdiv@quotient+1,f
  5149  0697                     l1896:
  5150  0697  0837               	movf	___awdiv@quotient+1,w
  5151  0698  00B0               	movwf	?___awdiv+1
  5152  0699  0836               	movf	___awdiv@quotient,w
  5153  069A  00AF               	movwf	?___awdiv
  5154  069B                     l559:
  5155  069B  0008               	return
  5156  069C                     __end_of___awdiv:
  5157                           
  5158                           	psect	text25
  5159  0CF9                     __ptext25:	
  5160 ;; *************** function _ADC_IF *****************
  5161 ;; Defined at:
  5162 ;;		line 36 in file "ADC.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5176 ;;      Params:         0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0
  5178 ;;      Temps:          0       1       0       0       0
  5179 ;;      Totals:         0       1       0       0       0
  5180 ;;Total ram usage:        1 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    2
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _ADC_IF
  5192  0CF9                     _ADC_IF:
  5193  0CF9                     l2070:	
  5194                           ;incstack = 0
  5195                           ; Regs used in _ADC_IF: [wreg]
  5196                           
  5197                           
  5198                           ;ADC.c: 37:     if(ADCON0bits.GO == 0){
  5199  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0CFB  189F               	btfsc	31,1	;volatile
  5202  0CFC  2CFE               	goto	u1471
  5203  0CFD  2CFF               	goto	u1470
  5204  0CFE                     u1471:
  5205  0CFE  2D09               	goto	l292
  5206  0CFF                     u1470:
  5207  0CFF                     l2072:
  5208                           
  5209                           ;ADC.c: 38:             _delay((unsigned long)((50)*(8000000/4000000.0)));
  5210  0CFF  3020               	movlw	32
  5211  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0D02  00A8               	movwf	??_ADC_IF
  5214  0D03                     u2027:
  5215  0D03  0BA8               	decfsz	??_ADC_IF,f
  5216  0D04  2D03               	goto	u2027
  5217  0D05  0000               	nop
  5218  0D06                     l2074:
  5219                           
  5220                           ;ADC.c: 39:             ADCON0bits.GO = 1;
  5221  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0D08  149F               	bsf	31,1	;volatile
  5224  0D09                     l292:
  5225  0D09  0008               	return
  5226  0D0A                     __end_of_ADC_IF:
  5227                           
  5228                           	psect	text26
  5229  054A                     __ptext26:	
  5230 ;; *************** function _isr *****************
  5231 ;; Defined at:
  5232 ;;		line 90 in file "Master_Test.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0
  5248 ;;      Temps:          0       4       0       0       0
  5249 ;;      Totals:         0       4       0       0       0
  5250 ;;Total ram usage:        4 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    1
  5253 ;; This function calls:
  5254 ;;		i1___awdiv
  5255 ;;		i1___wmul
  5256 ;; This function is called by:
  5257 ;;		Interrupt level 1
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _isr
  5263  054A                     _isr:
  5264  054A                     i1l2214:
  5265                           
  5266                           ;Master_Test.c: 91:     if(ADIF){
  5267  054A  1F0C               	btfss	12,6	;volatile
  5268  054B  2D4D               	goto	u173_21
  5269  054C  2D4E               	goto	u173_20
  5270  054D                     u173_21:
  5271  054D  2D5C               	goto	i1l2222
  5272  054E                     u173_20:
  5273  054E                     i1l2216:
  5274                           
  5275                           ;Master_Test.c: 92:         if(ADCON0bits.CHS == 0){
  5276  054E  0C1F               	rrf	31,w	;volatile
  5277  054F  00A4               	movwf	??_isr
  5278  0550  0C24               	rrf	??_isr,w
  5279  0551  390F               	andlw	15
  5280  0552  3A00               	xorlw	0
  5281  0553  1D03               	skipz
  5282  0554  2D56               	goto	u174_21
  5283  0555  2D57               	goto	u174_20
  5284  0556                     u174_21:
  5285  0556  2D5B               	goto	i1l2220
  5286  0557                     u174_20:
  5287  0557                     i1l2218:
  5288                           
  5289                           ;Master_Test.c: 93:             pot = ADRESH;
  5290  0557  081E               	movf	30,w	;volatile
  5291  0558  00A4               	movwf	??_isr
  5292  0559  0824               	movf	??_isr,w
  5293  055A  00D7               	movwf	_pot
  5294  055B                     i1l2220:
  5295                           
  5296                           ;Master_Test.c: 95:         ADIF = 0;
  5297  055B  130C               	bcf	12,6	;volatile
  5298  055C                     i1l2222:
  5299                           
  5300                           ;Master_Test.c: 97:     if(RBIF){
  5301  055C  1C0B               	btfss	11,0	;volatile
  5302  055D  2D5F               	goto	u175_21
  5303  055E  2D60               	goto	u175_20
  5304  055F                     u175_21:
  5305  055F  2D70               	goto	i1l2232
  5306  0560                     u175_20:
  5307  0560                     i1l2224:
  5308                           
  5309                           ;Master_Test.c: 98:         if(RB0==1){
  5310  0560  1C06               	btfss	6,0	;volatile
  5311  0561  2D63               	goto	u176_21
  5312  0562  2D64               	goto	u176_20
  5313  0563                     u176_21:
  5314  0563  2D69               	goto	i1l200
  5315  0564                     u176_20:
  5316  0564                     i1l2226:
  5317                           
  5318                           ;Master_Test.c: 99:             con++;
  5319  0564  3001               	movlw	1
  5320  0565  00A4               	movwf	??_isr
  5321  0566  0824               	movf	??_isr,w
  5322  0567  07D6               	addwf	_con,f
  5323                           
  5324                           ;Master_Test.c: 100:         }
  5325  0568  2D6F               	goto	i1l2230
  5326  0569                     i1l200:	
  5327                           ;Master_Test.c: 101:         else if(RB1==1){
  5328                           
  5329  0569  1C86               	btfss	6,1	;volatile
  5330  056A  2D6C               	goto	u177_21
  5331  056B  2D6D               	goto	u177_20
  5332  056C                     u177_21:
  5333  056C  2D6F               	goto	i1l2230
  5334  056D                     u177_20:
  5335  056D                     i1l2228:
  5336                           
  5337                           ;Master_Test.c: 102:             con--;
  5338  056D  3001               	movlw	1
  5339  056E  02D6               	subwf	_con,f
  5340  056F                     i1l2230:
  5341                           
  5342                           ;Master_Test.c: 104:         RBIF = 0;
  5343  056F  100B               	bcf	11,0	;volatile
  5344  0570                     i1l2232:
  5345                           
  5346                           ;Master_Test.c: 106:     if(RCIF){
  5347  0570  1E8C               	btfss	12,5	;volatile
  5348  0571  2D73               	goto	u178_21
  5349  0572  2D74               	goto	u178_20
  5350  0573                     u178_21:
  5351  0573  2DBC               	goto	i1l215
  5352  0574                     u178_20:
  5353  0574                     i1l2234:
  5354                           
  5355                           ;Master_Test.c: 107:         if(RCREG == '1'){
  5356  0574  3031               	movlw	49
  5357  0575  061A               	xorwf	26,w	;volatile
  5358  0576  1D03               	btfss	3,2
  5359  0577  2D79               	goto	u179_21
  5360  0578  2D7A               	goto	u179_20
  5361  0579                     u179_21:
  5362  0579  2DB6               	goto	i1l2242
  5363  057A                     u179_20:
  5364  057A                     i1l2236:
  5365                           
  5366                           ;Master_Test.c: 108:             TXREG = (presion1);
  5367  057A  087B               	movf	_presion1,w
  5368  057B  0099               	movwf	25	;volatile
  5369  057C                     i1l205:	
  5370                           ;Master_Test.c: 109:             while(!TXSTAbits.TRMT);
  5371                           
  5372  057C  1683               	bsf	3,5	;RP0=1, select bank1
  5373  057D  1303               	bcf	3,6	;RP1=0, select bank1
  5374  057E  1C98               	btfss	24,1	;volatile
  5375  057F  2D81               	goto	u180_21
  5376  0580  2D82               	goto	u180_20
  5377  0581                     u180_21:
  5378  0581  2D7C               	goto	i1l205
  5379  0582                     u180_20:
  5380  0582                     i1l2238:
  5381                           
  5382                           ;Master_Test.c: 110:             TXREG = temp*397/255;
  5383  0582  30FF               	movlw	255
  5384  0583  00F6               	movwf	i1___awdiv@divisor
  5385  0584  3000               	movlw	0
  5386  0585  00F7               	movwf	i1___awdiv@divisor+1
  5387  0586  087D               	movf	_temp,w
  5388  0587  1283               	bcf	3,5	;RP0=0, select bank0
  5389  0588  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0589  00A4               	movwf	??_isr
  5391  058A  01A5               	clrf	??_isr+1
  5392  058B  0824               	movf	??_isr,w
  5393  058C  00F0               	movwf	i1___wmul@multiplier
  5394  058D  0825               	movf	??_isr+1,w
  5395  058E  00F1               	movwf	i1___wmul@multiplier+1
  5396  058F  308D               	movlw	141
  5397  0590  00F2               	movwf	i1___wmul@multiplicand
  5398  0591  3001               	movlw	1
  5399  0592  00F3               	movwf	i1___wmul@multiplicand+1
  5400  0593  120A  158A  256D  120A  118A  	fcall	i1___wmul
  5401  0598  0871               	movf	?i1___wmul+1,w
  5402  0599  00F9               	movwf	i1___awdiv@dividend+1
  5403  059A  0870               	movf	?i1___wmul,w
  5404  059B  00F8               	movwf	i1___awdiv@dividend
  5405  059C  120A  118A  269C  120A  118A  	fcall	i1___awdiv
  5406  05A1  0876               	movf	?i1___awdiv,w
  5407  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  5408  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  5409  05A4  0099               	movwf	25	;volatile
  5410  05A5                     i1l208:	
  5411                           ;Master_Test.c: 111:             while(!TXSTAbits.TRMT);
  5412                           
  5413  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  5414  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  5415  05A7  1C98               	btfss	24,1	;volatile
  5416  05A8  2DAA               	goto	u181_21
  5417  05A9  2DAB               	goto	u181_20
  5418  05AA                     u181_21:
  5419  05AA  2DA5               	goto	i1l208
  5420  05AB                     u181_20:
  5421  05AB                     i1l2240:
  5422                           
  5423                           ;Master_Test.c: 112:             TXREG = luz;
  5424  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  5425  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  5426  05AD  0852               	movf	_luz,w
  5427  05AE  0099               	movwf	25	;volatile
  5428  05AF                     i1l211:	
  5429                           ;Master_Test.c: 113:             while(!TXSTAbits.TRMT);
  5430                           
  5431  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  5432  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  5433  05B1  1C98               	btfss	24,1	;volatile
  5434  05B2  2DB4               	goto	u182_21
  5435  05B3  2DB5               	goto	u182_20
  5436  05B4                     u182_21:
  5437  05B4  2DAF               	goto	i1l211
  5438  05B5                     u182_20:
  5439  05B5  2DBA               	goto	i1l2244
  5440  05B6                     i1l2242:
  5441                           
  5442                           ;Master_Test.c: 116:             presion2 = RCREG;
  5443  05B6  081A               	movf	26,w	;volatile
  5444  05B7  00A4               	movwf	??_isr
  5445  05B8  0824               	movf	??_isr,w
  5446  05B9  00D1               	movwf	_presion2
  5447  05BA                     i1l2244:
  5448                           
  5449                           ;Master_Test.c: 119:         RCIF = 0;
  5450  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  5451  05BB  128C               	bcf	12,5	;volatile
  5452  05BC                     i1l215:
  5453  05BC  0827               	movf	??_isr+3,w
  5454  05BD  008A               	movwf	10
  5455  05BE  0E26               	swapf	??_isr+2,w
  5456  05BF  0083               	movwf	3
  5457  05C0  0EFE               	swapf	btemp,f
  5458  05C1  0E7E               	swapf	btemp,w
  5459  05C2  0009               	retfie
  5460  05C3                     __end_of_isr:
  5461                           
  5462                           	psect	intentry
  5463  0004                     __pintentry:	
  5464                           ;incstack = 0
  5465                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5466                           
  5467  0004                     interrupt_function:
  5468  007E                     saved_w	set	btemp
  5469  0004  00FE               	movwf	btemp
  5470  0005  0E03               	swapf	3,w
  5471  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0008  00A6               	movwf	??_isr+2
  5474  0009  080A               	movf	10,w
  5475  000A  00A7               	movwf	??_isr+3
  5476  000B  120A  118A  2D4A   	ljmp	_isr
  5477                           
  5478                           	psect	text27
  5479  0D6D                     __ptext27:	
  5480 ;; *************** function i1___wmul *****************
  5481 ;; Defined at:
  5482 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  multiplier      2    0[COMMON] unsigned int 
  5485 ;;  multiplicand    2    2[COMMON] unsigned int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  product         2    4[COMMON] unsigned int 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    0[COMMON] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         4       0       0       0       0
  5498 ;;      Locals:         2       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0
  5500 ;;      Totals:         6       0       0       0       0
  5501 ;;Total ram usage:        6 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_isr
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function i1___wmul
  5512  0D6D                     i1___wmul:
  5513  0D6D                     i1l2152:	
  5514                           ;incstack = 0
  5515                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5516                           
  5517  0D6D  01F4               	clrf	i1___wmul@product
  5518  0D6E  01F5               	clrf	i1___wmul@product+1
  5519  0D6F                     i1l2154:
  5520  0D6F  1C70               	btfss	i1___wmul@multiplier,0
  5521  0D70  2D72               	goto	u159_21
  5522  0D71  2D73               	goto	u159_20
  5523  0D72                     u159_21:
  5524  0D72  2D79               	goto	i1l406
  5525  0D73                     u159_20:
  5526  0D73                     i1l2156:
  5527  0D73  0872               	movf	i1___wmul@multiplicand,w
  5528  0D74  07F4               	addwf	i1___wmul@product,f
  5529  0D75  1803               	skipnc
  5530  0D76  0AF5               	incf	i1___wmul@product+1,f
  5531  0D77  0873               	movf	i1___wmul@multiplicand+1,w
  5532  0D78  07F5               	addwf	i1___wmul@product+1,f
  5533  0D79                     i1l406:
  5534  0D79  3001               	movlw	1
  5535  0D7A                     u160_25:
  5536  0D7A  1003               	clrc
  5537  0D7B  0DF2               	rlf	i1___wmul@multiplicand,f
  5538  0D7C  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5539  0D7D  3EFF               	addlw	-1
  5540  0D7E  1D03               	skipz
  5541  0D7F  2D7A               	goto	u160_25
  5542  0D80                     i1l2158:
  5543  0D80  3001               	movlw	1
  5544  0D81                     u161_25:
  5545  0D81  1003               	clrc
  5546  0D82  0CF1               	rrf	i1___wmul@multiplier+1,f
  5547  0D83  0CF0               	rrf	i1___wmul@multiplier,f
  5548  0D84  3EFF               	addlw	-1
  5549  0D85  1D03               	skipz
  5550  0D86  2D81               	goto	u161_25
  5551  0D87                     i1l2160:
  5552  0D87  0870               	movf	i1___wmul@multiplier,w
  5553  0D88  0471               	iorwf	i1___wmul@multiplier+1,w
  5554  0D89  1D03               	btfss	3,2
  5555  0D8A  2D8C               	goto	u162_21
  5556  0D8B  2D8D               	goto	u162_20
  5557  0D8C                     u162_21:
  5558  0D8C  2D6F               	goto	i1l2154
  5559  0D8D                     u162_20:
  5560  0D8D                     i1l2162:
  5561  0D8D  0875               	movf	i1___wmul@product+1,w
  5562  0D8E  00F1               	movwf	?i1___wmul+1
  5563  0D8F  0874               	movf	i1___wmul@product,w
  5564  0D90  00F0               	movwf	?i1___wmul
  5565  0D91                     i1l408:
  5566  0D91  0008               	return
  5567  0D92                     __end_ofi1___wmul:
  5568                           
  5569                           	psect	text28
  5570  069C                     __ptext28:	
  5571 ;; *************** function i1___awdiv *****************
  5572 ;; Defined at:
  5573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  divisor         2    6[COMMON] int 
  5576 ;;  dividend        2    8[COMMON] int 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  quotient        2    2[BANK0 ] int 
  5579 ;;  sign            1    1[BANK0 ] unsigned char 
  5580 ;;  counter         1    0[BANK0 ] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  2    6[COMMON] int 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         4       0       0       0       0
  5591 ;;      Locals:         0       4       0       0       0
  5592 ;;      Temps:          1       0       0       0       0
  5593 ;;      Totals:         5       4       0       0       0
  5594 ;;Total ram usage:        9 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_isr
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function i1___awdiv
  5605  069C                     i1___awdiv:
  5606  069C                     i1l2166:	
  5607                           ;incstack = 0
  5608                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  5609                           
  5610  069C  1283               	bcf	3,5	;RP0=0, select bank0
  5611  069D  1303               	bcf	3,6	;RP1=0, select bank0
  5612  069E  01A1               	clrf	i1___awdiv@sign
  5613  069F                     i1l2168:
  5614  069F  1FF7               	btfss	i1___awdiv@divisor+1,7
  5615  06A0  2EA2               	goto	u163_21
  5616  06A1  2EA3               	goto	u163_20
  5617  06A2                     u163_21:
  5618  06A2  2EAA               	goto	i1l2174
  5619  06A3                     u163_20:
  5620  06A3                     i1l2170:
  5621  06A3  09F6               	comf	i1___awdiv@divisor,f
  5622  06A4  09F7               	comf	i1___awdiv@divisor+1,f
  5623  06A5  0AF6               	incf	i1___awdiv@divisor,f
  5624  06A6  1903               	skipnz
  5625  06A7  0AF7               	incf	i1___awdiv@divisor+1,f
  5626  06A8                     i1l2172:
  5627  06A8  01A1               	clrf	i1___awdiv@sign
  5628  06A9  0AA1               	incf	i1___awdiv@sign,f
  5629  06AA                     i1l2174:
  5630  06AA  1FF9               	btfss	i1___awdiv@dividend+1,7
  5631  06AB  2EAD               	goto	u164_21
  5632  06AC  2EAE               	goto	u164_20
  5633  06AD                     u164_21:
  5634  06AD  2EB7               	goto	i1l2180
  5635  06AE                     u164_20:
  5636  06AE                     i1l2176:
  5637  06AE  09F8               	comf	i1___awdiv@dividend,f
  5638  06AF  09F9               	comf	i1___awdiv@dividend+1,f
  5639  06B0  0AF8               	incf	i1___awdiv@dividend,f
  5640  06B1  1903               	skipnz
  5641  06B2  0AF9               	incf	i1___awdiv@dividend+1,f
  5642  06B3                     i1l2178:
  5643  06B3  3001               	movlw	1
  5644  06B4  00FA               	movwf	??i1___awdiv
  5645  06B5  087A               	movf	??i1___awdiv,w
  5646  06B6  06A1               	xorwf	i1___awdiv@sign,f
  5647  06B7                     i1l2180:
  5648  06B7  01A2               	clrf	i1___awdiv@quotient
  5649  06B8  01A3               	clrf	i1___awdiv@quotient+1
  5650  06B9                     i1l2182:
  5651  06B9  0876               	movf	i1___awdiv@divisor,w
  5652  06BA  0477               	iorwf	i1___awdiv@divisor+1,w
  5653  06BB  1903               	btfsc	3,2
  5654  06BC  2EBE               	goto	u165_21
  5655  06BD  2EBF               	goto	u165_20
  5656  06BE                     u165_21:
  5657  06BE  2EF6               	goto	i1l2202
  5658  06BF                     u165_20:
  5659  06BF                     i1l2184:
  5660  06BF  01A0               	clrf	i1___awdiv@counter
  5661  06C0  0AA0               	incf	i1___awdiv@counter,f
  5662  06C1  2ECD               	goto	i1l2190
  5663  06C2                     i1l2186:
  5664  06C2  3001               	movlw	1
  5665  06C3                     u166_25:
  5666  06C3  1003               	clrc
  5667  06C4  0DF6               	rlf	i1___awdiv@divisor,f
  5668  06C5  0DF7               	rlf	i1___awdiv@divisor+1,f
  5669  06C6  3EFF               	addlw	-1
  5670  06C7  1D03               	skipz
  5671  06C8  2EC3               	goto	u166_25
  5672  06C9                     i1l2188:
  5673  06C9  3001               	movlw	1
  5674  06CA  00FA               	movwf	??i1___awdiv
  5675  06CB  087A               	movf	??i1___awdiv,w
  5676  06CC  07A0               	addwf	i1___awdiv@counter,f
  5677  06CD                     i1l2190:
  5678  06CD  1FF7               	btfss	i1___awdiv@divisor+1,7
  5679  06CE  2ED0               	goto	u167_21
  5680  06CF  2ED1               	goto	u167_20
  5681  06D0                     u167_21:
  5682  06D0  2EC2               	goto	i1l2186
  5683  06D1                     u167_20:
  5684  06D1                     i1l2192:
  5685  06D1  3001               	movlw	1
  5686  06D2                     u168_25:
  5687  06D2  1003               	clrc
  5688  06D3  0DA2               	rlf	i1___awdiv@quotient,f
  5689  06D4  0DA3               	rlf	i1___awdiv@quotient+1,f
  5690  06D5  3EFF               	addlw	-1
  5691  06D6  1D03               	skipz
  5692  06D7  2ED2               	goto	u168_25
  5693  06D8  0877               	movf	i1___awdiv@divisor+1,w
  5694  06D9  0279               	subwf	i1___awdiv@dividend+1,w
  5695  06DA  1D03               	skipz
  5696  06DB  2EDE               	goto	u169_25
  5697  06DC  0876               	movf	i1___awdiv@divisor,w
  5698  06DD  0278               	subwf	i1___awdiv@dividend,w
  5699  06DE                     u169_25:
  5700  06DE  1C03               	skipc
  5701  06DF  2EE1               	goto	u169_21
  5702  06E0  2EE2               	goto	u169_20
  5703  06E1                     u169_21:
  5704  06E1  2EE9               	goto	i1l2198
  5705  06E2                     u169_20:
  5706  06E2                     i1l2194:
  5707  06E2  0876               	movf	i1___awdiv@divisor,w
  5708  06E3  02F8               	subwf	i1___awdiv@dividend,f
  5709  06E4  0877               	movf	i1___awdiv@divisor+1,w
  5710  06E5  1C03               	skipc
  5711  06E6  03F9               	decf	i1___awdiv@dividend+1,f
  5712  06E7  02F9               	subwf	i1___awdiv@dividend+1,f
  5713  06E8                     i1l2196:
  5714  06E8  1422               	bsf	i1___awdiv@quotient,0
  5715  06E9                     i1l2198:
  5716  06E9  3001               	movlw	1
  5717  06EA                     u170_25:
  5718  06EA  1003               	clrc
  5719  06EB  0CF7               	rrf	i1___awdiv@divisor+1,f
  5720  06EC  0CF6               	rrf	i1___awdiv@divisor,f
  5721  06ED  3EFF               	addlw	-1
  5722  06EE  1D03               	skipz
  5723  06EF  2EEA               	goto	u170_25
  5724  06F0                     i1l2200:
  5725  06F0  3001               	movlw	1
  5726  06F1  02A0               	subwf	i1___awdiv@counter,f
  5727  06F2  1D03               	btfss	3,2
  5728  06F3  2EF5               	goto	u171_21
  5729  06F4  2EF6               	goto	u171_20
  5730  06F5                     u171_21:
  5731  06F5  2ED1               	goto	i1l2192
  5732  06F6                     u171_20:
  5733  06F6                     i1l2202:
  5734  06F6  0821               	movf	i1___awdiv@sign,w
  5735  06F7  1903               	btfsc	3,2
  5736  06F8  2EFA               	goto	u172_21
  5737  06F9  2EFB               	goto	u172_20
  5738  06FA                     u172_21:
  5739  06FA  2F00               	goto	i1l2206
  5740  06FB                     u172_20:
  5741  06FB                     i1l2204:
  5742  06FB  09A2               	comf	i1___awdiv@quotient,f
  5743  06FC  09A3               	comf	i1___awdiv@quotient+1,f
  5744  06FD  0AA2               	incf	i1___awdiv@quotient,f
  5745  06FE  1903               	skipnz
  5746  06FF  0AA3               	incf	i1___awdiv@quotient+1,f
  5747  0700                     i1l2206:
  5748  0700  0823               	movf	i1___awdiv@quotient+1,w
  5749  0701  00F7               	movwf	?i1___awdiv+1
  5750  0702  0822               	movf	i1___awdiv@quotient,w
  5751  0703  00F6               	movwf	?i1___awdiv
  5752  0704                     i1l559:
  5753  0704  0008               	return
  5754  0705                     __end_ofi1___awdiv:
  5755  007E                     btemp	set	126	;btemp
  5756  007E                     wtemp0	set	126
  5757                           
  5758                           	psect	config
  5759                           
  5760                           ;Config register CONFIG1 @ 0x2007
  5761                           ;	Oscillator Selection bits
  5762                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5763                           ;	Watchdog Timer Enable bit
  5764                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5765                           ;	Power-up Timer Enable bit
  5766                           ;	PWRTE = ON, PWRT enabled
  5767                           ;	RE3/MCLR pin function select bit
  5768                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5769                           ;	Code Protection bit
  5770                           ;	CP = OFF, Program memory code protection is disabled
  5771                           ;	Data Code Protection bit
  5772                           ;	CPD = OFF, Data memory code protection is disabled
  5773                           ;	Brown Out Reset Selection bits
  5774                           ;	BOREN = OFF, BOR disabled
  5775                           ;	Internal External Switchover bit
  5776                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5777                           ;	Fail-Safe Clock Monitor Enabled bit
  5778                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5779                           ;	Low Voltage Programming Enable bit
  5780                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5781                           ;	In-Circuit Debugger Mode bit
  5782                           ;	DEBUG = 0x1, unprogrammed default
  5783  2007                     	org	8199
  5784  2007  20C4               	dw	8388
  5785                           
  5786                           ;Config register CONFIG2 @ 0x2008
  5787                           ;	Brown-out Reset Selection bit
  5788                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5789                           ;	Flash Program Memory Self Write Enable bits
  5790                           ;	WRT = OFF, Write protection off
  5791  2008                     	org	8200
  5792  2008  3FFF               	dw	16383

Data Sizes:
    Strings     49
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     42      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[11]), STR_10(CODE[3]), 
		 -> STR_9(CODE[3]), buffer(BANK0[1]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___awdiv
    i1___awdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    _isr->i1___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   13386
                                             35 BANK0      7     7      0
                             _ADC_IF
                           _Division
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                         _my_delay_s
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1865
                                             22 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             16 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    2742
                                             30 BANK0      1     1      0
                         _ADC_CONFIG
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _USART_CONFIG
 ---------------------------------------------------------------------------------
 (2) _USART_CONFIG                                         6     0      6     294
                                              8 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1100
                                             10 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     794
                                             11 BANK0      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0      22
                                             11 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             22 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              8 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _my_delay_s                                           4     4      0      23
                                              8 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1104
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              8 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              8 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    2609
                                             24 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1768
                                             15 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0     496
                                              4 BANK0      4     4      0
                          i1___awdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___awdiv                                            9     5      4     352
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _Division
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___wmul
   _my_delay_s
   _setup
     _ADC_CONFIG
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     _USART_CONFIG
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   i1___awdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      47       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      39       5       71.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      47      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 08 09:48:22 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0028                          pc 0002  
                       l32 0CDF                         l50 0DE5                         l35 0CEB  
                       l51 0DE8                         l52 0DEF                         l44 0CD4  
                       l29 0E29                         l38 0CCB                         l47 0CDE  
             ___awdiv@sign 0035                         _rc 004A                         _tr 004C  
                       fsr 0004        ___wmul@multiplicand 002A           i1___wmul@product 0074  
                      l250 0CF8                        l218 0632                        l402 0549  
                      l172 0FFF                        l181 0F3B                        l406 07E3  
                      l262 0D1B                        l247 0D30                        l183 0F3C  
                      l408 07FB                        l256 0D6C                        l169 0D4C  
                      l442 07D4                        l259 076C                        l179 0F28  
                      l292 0D09                        l268 0EAB                        l288 0DBD  
                      l572 0F97                        l559 069B                        l678 0EF1  
                      l688 0E65                        _GIE 005F                        _RB0 0030  
                      _RB1 0031                        _RC1 0039                        _RC2 003A  
                      u960 077F                        u961 077E                        u980 0793  
                      u981 0792                        u975 0784                        u995 0795  
                      _dec 0054                        _cen 0055                        _con 0056  
                      _isr 054A                        _var 0050                        _pot 0057  
                      _luz 0052                        fsr0 0004                        _uni 0053  
                      indf 0000               ___awmod@sign 002E                       l2000 0DC3  
                     l2010 0DE9                       l2002 0DCB                       l2020 0F9B  
                     l2004 0DD4                       l2100 04B1                       l2006 0DD9  
                     l2014 0D34                       l2030 05CE                       l2022 05C3  
                     l2110 04CF                       l2008 0DE1                       l2016 0D35  
                     l2040 05D4                       l2032 05CF                       l2024 05C7  
                     l2120 04EF                       l2112 04D9                       l2018 0D45  
                     l2050 05F7                       l2042 05DF                       l2034 05D0  
                     l2026 05C8                       l2122 051F                       l2114 04DF  
                     l2106 04B3                       l2130 0545                       l2140 07D9  
                     l2060 060E                       l2052 05F8                       l2044 05E2  
                     l2036 05D2                       l2028 05CC                       l2124 0526  
                     l2116 04E6                       l2300 019C                       l2070 0CF9  
                     l2142 07DD                       l2062 0613                       l2054 05FC  
                     l2046 05E3                       l2038 05D3                       l2126 052A  
                     l2118 04EA                       l2310 01E3                       l2302 01A7  
                     l2072 0CFF                       l2144 07EA                       l2064 0618  
                     l2056 05FE                       l2048 05E4                       l2080 046E  
                     l2128 0533                       l2320 020D                       l2312 01E8  
                     l2304 01BA                       l2074 0D06                       l2146 07F1  
                     l2138 07D5                       l2066 0621                       l2058 05FF  
                     l2090 0498                       l2082 0475                       l2330 0245  
                     l2322 0212                       l2314 01F3                       l2306 01C5  
                     l2250 0033                       l2148 07F7                       l1700 0D20  
                     l2068 062C                       l2092 04A0                       l2084 047A  
                     l2076 0463                       l2340 0279                       l2332 024A  
                     l2324 021D                       l2316 01FE                       l2308 01D8  
                     l2260 0066                       l2252 0038                       l1702 0D22  
                     l1710 0D10                       l2094 04A4                       l2078 0468  
                     l2350 02A3                       l2342 027E                       l2334 0254  
                     l2326 022D                       l2318 0203                       l2270 00CC  
                     l2262 008F                       l2254 0043                       l2246 0029  
                     l1800 0DA8                       l1720 078F                       l1704 0D2D  
                     l1712 0D18                       l2096 04A8                       l2088 047B  
                     l2360 02CB                       l2352 02AE                       l2344 0288  
                     l2336 025E                       l2328 0237                       l2280 0128  
                     l2272 00D7                       l2264 009B                       l2256 0053  
                     l2248 002E                       l1730 07BD                       l1722 0793  
                     l1714 076D                       l1810 0705                       l1706 0D0D  
                     l2098 04AC                       l2370 02F4                       l2362 02D5  
                     l2354 02B3                       l2346 0293                       l2338 0266  
                     l2290 0166                       l2282 013B                       l2274 0100  
                     l2266 00AE                       l2258 0058                       l1900 0F3D  
                     l1804 0DAD                       l1732 07C6                       l1724 079C  
                     l1716 077F                       l1740 0DF4                       l1820 0728  
                     l1812 0708                       l1708 0D0E                       l2380 03D6  
                     l2372 02FF                       l2364 02DA                       l2356 02BB  
                     l2348 0298                       l2292 016B                       l2284 0146  
                     l2276 010A                       l2268 00B9                       l1910 0F4F  
                     l1902 0F40                       l1750 0CDF                       l1726 07AE  
                     l1718 0782                       l1734 07CC                       l1742 0DF7  
                     l1830 074B                       l1822 0733                       l1814 0712  
                     l2462 048D                       l2390 041F                       l2374 0355  
                     l2358 02C0                       l2366 02E5                       l2294 0175  
                     l2286 014B                       l2278 011D                       l1920 0F68  
                     l1912 0F54                       l1904 0F44                       l1752 0CE5  
                     l1728 07BC                       l1744 0E26                       l1832 0751  
                     l1824 0739                       l1816 0718                       l1840 0D50  
                     l2464 0F14                       l1760 0F02                       l2392 0434  
                     l2384 03F6                       l2376 0375                       l2368 02EA  
                     l2296 017D                       l2288 0156                       l1922 0F6C  
                     l1914 0F5A                       l1930 0F89                       l1906 0F49  
                     l2466 0DB2                       l1746 0E27                       l1738 0DF0  
                     l1834 0757                       l1826 073F                       l1818 0722  
                     l1842 0D55                       l1850 0E6B                       l1762 0F06  
                     l1770 0F0F                       l1754 0EF2                       l2394 0443  
                     l2386 0405                       l2378 0380                       l2298 0189  
                     l1860 063A                       l1932 0F8E                       l1924 0F76  
                     l1916 0F5D                       l1908 0F4B                       l1748 0E28  
                     l1836 075D                       l1828 0745                       l1844 0D5E  
                     l1852 0E87                       l1764 0F0A                       l1772 0F1C  
                     l1756 0EFD                       l1940 0EB0                       l2396 0451  
                     l2388 0414                       l1870 064E                       l1862 063F  
                     l1934 0F93                       l1926 0F7C                       l1918 0F64  
                     l1790 0D9A                       l1838 0CEC                       l1846 0D64  
                     l1854 0E8F                       l1774 0F24                       l1766 0F0B  
                     l1758 0F01                       l1950 0EC8                       l1942 0EB6  
                     l1880 0664                       l1872 0650                       l1864 0641  
                     l1856 0633                       l1928 0F83                       l1792 0D9B  
                     l1784 0D92                       l1848 0E66                       l1776 0F2B  
                     l1952 0ED9                       l1944 0EB9                       l1960 0EED  
                     l1890 0687                       l1882 0668                       l1874 0656  
                     l1866 0645                       l1858 0636                       l1794 0D9C  
                     l1786 0D95                       l1698 0D1F                       l1778 0F33  
                     l1954 0EDF                       l1946 0EC0                       l1938 0EAC  
                     l1970 0E3C                       l1884 0679                       l1876 0659  
                     l1892 068D                       l1868 064A                       l1796 0DA0  
                     l1788 0D97                       l1956 0EE0                       l1948 0EC4  
                     l1980 0E5B                       l1972 0E40                       l1964 0E2A  
                     l1894 0692                       l1886 067F                       l1878 0660  
                     l1990 0CCC                       l1798 0DA3                       l1958 0EE7  
                     l1974 0E44                       l1966 0E32                       l1982 0E61  
                     l1896 0697                       l1888 0680                       l1992 0CD1  
                     l1976 0E4E                       l1968 0E35                       l1986 0CC3  
                     l1994 0CD5                       l1978 0E54                       l1988 0CC8  
                     l1996 0CDA                       l1998 0DBE                       _ADIF 0066  
                     ?_isr 0070                       STR_1 081A                       STR_2 0842  
                     STR_3 0842                       STR_4 0842                       STR_5 0842  
                     STR_6 0842                       STR_7 0842                       STR_8 0842  
                     STR_9 0848                       u1000 07AE                       u1001 07AD  
                     u1020 07CC                       u1100 0E75                       u1021 07CB  
                     u1005 07AA                       u1030 0E07                       u1110 0E99  
                     u1015 07BE                       u1040 0CE5                       u1120 0EAB  
                     u1041 0CE4                       u1121 0EAA                       u1210 068D  
                     u1130 063A                       u1050 0CEB                       u1211 068C  
                     u1131 0639                       u1051 0CEA                       u1035 0E02  
                     u1220 0692                       u1140 0645                       u1300 0F89  
                     u1060 0F24                       u1221 0691                       u1205 0681  
                     u1141 0644                       u1301 0F88                       u1061 0F23  
                     u1150 0656                       u1310 0F8E                       u1230 0F44  
                     u1070 0F33                       u1151 0655                       u1311 0F8D  
                     u1231 0F43                       u2007 0D29                       u1071 0F32  
                     u1240 0F4F                       u1080 0D55                       u1320 0EB6  
                     u1241 0F4E                       u2017 0D3F                       u1081 0D54  
                     u1321 0EB5                       u1170 0668                       u1250 0F5A  
                     u1090 0D64                       u1410 0E44                       u2027 0D03  
                     u1171 0667                       u1251 0F59                       u1091 0D63  
                     u1411 0E43                       u1340 0EC8                       u1420 0E4E  
                     u1500 04CE                       _IOCB 0096                       u1165 065A  
                     u1341 0EC7                       u1421 0E4D                       u1405 0E36  
                     u1501 04CD                       u1190 0679                       u1270 0F6C  
                     u1510 04D9                       u1191 0678                       u1271 0F6B  
                     u1335 0EBA                       u1511 04D8                       u1280 0F76  
                     u1360 0ED9                       u1440 0E61                       u1520 04DF  
                     u1185 0669                       u1281 0F75                       u1265 0F5E  
                     u1361 0ED8                       u1441 0E60                       u1425 0E4A  
                     u1521 04DE                       u1505 04CA                       u1450 0DE1  
                     u1530 0533                       u1195 0675                       u1451 0DE0  
                     u1355 0EC9                       u1435 0E55                       u1531 0532  
                     u1460 0D4C                       u1380 0EED                       u1540 0545  
                     u1285 0F72                       u1461 0D4B                       u1381 0EEC  
                     u1365 0ED5                       u1541 0544                       u1470 0CFF  
                     u1550 07DD                       u1390 0E32                       u1471 0CFE  
                     u1295 0F7D                       u1551 07DC                       u1375 0EE1  
                     u1391 0E31                       u1480 046E                       u1481 046D  
                     u1490 04A8                       u1491 04A7                       u1580 07F7  
                     u1581 07F6                       u1565 07E4                       u1830 027E  
                     u1575 07EB                       u1831 027D                       u1840 02EA  
                     u1841 02E9                       u1850 0355                       u1851 0354  
                     u1907 0171                       u1860 03D6                       u1861 03D5  
                     u1917 0209                       u1870 0405                       u1871 0404  
                     u1855 0351                       u1927 0250                       u1880 0443  
                     u1881 0442                       u1865 03D2                       u1937 02E0  
                     u1875 0401                       u1947 037B                       _PEIE 005E  
                     u1957 0D15                       u1885 043F                       u1967 070E  
                     _RBIF 0058                       u1977 071E                       u1897 0060  
                     u1987 072E                       _RCIF 0065                       u1997 0765  
                     _TXEN 04C5                       _WPUB 0095          ?_Lcd_Write_String 002A  
                     _frec 004E                       _main 0029                       _temp 007D  
                     btemp 007E                       start 000E         ??_Lcd_Write_String 002C  
          __end_of_Lcd_Cmd 0D31                      ??_isr 0024           ?_I2C_Master_Init 0036  
         ?_I2C_Master_Read 0028           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070             i1___awdiv@sign 0021            __end_of___awdiv 069C  
                    STR_10 0845                      STR_11 0837                      STR_12 082A  
                    STR_13 081A            __end_of___awmod 0F98                      _ANSEL 0188  
          __end_of___lldiv 07D5            ___awdiv@divisor 002F            __end_of___lwdiv 0EF2  
                    i1l200 0569                      i1l211 05AF                      i1l205 057C  
                    i1l215 05BC                      i1l208 05A5                      i1l406 0D79  
                    i1l408 0D91            __end_of___lwmod 0E66                      i1l559 0704  
          ___awdiv@counter 0034                      _RCREG 001A                      _SPBRG 0099  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0020                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
         USART_CONFIG@frec 0028            __end_of_dpowers 081A                      _setup 05C3  
                    pclath 000A           __end_ofi1___wmul 0D92                      status 0003  
      i1___wmul@multiplier 0070                      wtemp0 007E            __end_of_sprintf 054A  
       __size_ofi1___awdiv 0069           __end_of_Lcd_Init 076D            __initialization 0011  
         __end_of_Division 1000               __end_of_main 0460                     ??_main 0043  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070               ??_ADC_CONFIG 002A  
        ?_I2C_Master_Write 0028         ??_I2C_Master_Start 0028         ??_I2C_Master_Write 002A  
                   _ADC_IF 0CF9                     _ADRESH 001E           ___awdiv@dividend 0031  
                   ?_setup 0070                     _ANSELH 0189                     i1l2200 06F0  
                   i1l2202 06F6                     i1l2204 06FB                     i1l2220 055B  
                   i1l2206 0700                     i1l2230 056F                     i1l2222 055C  
                   i1l2214 054A                     i1l2160 0D87                     i1l2152 0D6D  
                   i1l2240 05AB                     i1l2224 0560                     i1l2232 0570  
                   i1l2216 054E                     i1l2170 06A3                     i1l2162 0D8D  
                   i1l2154 0D6F                     i1l2242 05B6                     i1l2234 0574  
                   i1l2226 0564                     i1l2218 0557                     i1l2180 06B7  
                   i1l2172 06A8                     i1l2156 0D73                     i1l2244 05BA  
                   i1l2236 057A                     i1l2228 056D                     i1l2190 06CD  
                   i1l2182 06B9                     i1l2174 06AA                     i1l2166 069C  
                   i1l2158 0D80                     i1l2238 0582                     i1l2192 06D1  
                   i1l2184 06BF                     i1l2176 06AE                     i1l2168 069F  
                   i1l2194 06E2                     i1l2186 06C2                     i1l2178 06B3  
                   i1l2196 06E8                     i1l2188 06C9                     i1l2198 06E9  
                   u160_25 0D7A                     u161_25 0D81                     u162_20 0D8D  
                   u162_21 0D8C                     u170_25 06EA                     u171_20 06F6  
                   u163_20 06A3                     u171_21 06F5                     u163_21 06A2  
                   u172_20 06FB                     u164_20 06AE                     u180_20 0582  
                   u172_21 06FA                     u164_21 06AD                     u180_21 0581  
                   u165_20 06BF                     u181_20 05AB                     u173_20 054E  
                   u165_21 06BE                     u181_21 05AA                     u173_21 054D  
                   u182_20 05B5                     u174_20 0557                     u182_21 05B4  
                   u174_21 0556                     u166_25 06C3                     u167_20 06D1  
                   u159_20 0D73                     u175_20 0560                     u167_21 06D0  
                   u159_21 0D72                     u175_21 055F                     u176_20 0564  
                   u176_21 0563                     u168_25 06D2                     u169_20 06E2  
                   u177_20 056D                     u169_21 06E1                     u177_21 056C  
                   u169_25 06DE                     u178_20 0574                     u178_21 0573  
                   u179_20 057A                     u179_21 0579                  ??_Lcd_Cmd 0028  
  __size_of_Lcd_Write_Char 0012                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
       __end_of_ADC_CONFIG 0DBE                     ___wmul 07D5                  ??___awdiv 0033  
                ??___awmod 002C                  ??___lldiv 0030                  ??___lwdiv 002C  
                ??___lwmod 0034                     _buffer 0058           ___awdiv@quotient 0036  
          ___awmod@divisor 0028            ___awmod@counter 002D          __end_ofi1___awdiv 0705  
                   saved_w 007E                  ??_sprintf 0039            Lcd_Set_Cursor@a 002C  
          Lcd_Set_Cursor@b 002B    __end_of__initialization 0025          __end_of_Lcd_Clear 0CF9  
           __pcstackCOMMON 0070             USART_CONFIG@rc 002C             USART_CONFIG@tr 002A  
            __end_of_setup 0633                  ?i1___wmul 0070             _Lcd_Set_Cursor 0D4D  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                    ?_ADC_IF 0070  
                  ??_setup 003E                  ?_Division 0070                 __pbssBANK0 004A  
               __pmaintext 0029                    ?___wmul 0028                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0D6D                 ??i1___wmul 0074  
       i1___awdiv@dividend 0078                 ??_Lcd_Init 002B                    _SSPCON2 0091  
          __size_of_ADC_IF 0011                    _SSPSTAT 0094                 ??_Division 0038  
               __stringtab 0800             _Lcd_Write_Char 0D0A                    _Lcd_Cmd 0D1C  
       i1___awdiv@quotient 0022                    ___awdiv 0633                    ___awmod 0F3D  
                  ___lldiv 076D            __size_of___wmul 0027                    ___lwdiv 0EAC  
                  ___lwmod 0E2A            ?_Lcd_Set_Cursor 002B                    __ptext1 0460  
                  __ptext2 0E2A                    __ptext3 0EAC                    __ptext4 05C3  
                  __ptext5 0EF2                    __ptext6 0E66                    __ptext7 0D0A  
                  __ptext8 0D4D                    __ptext9 0705                    _dpowers 0810  
             __size_of_isr 0079           ___awmod@dividend 002A   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0032   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0460     __end_of_Lcd_Write_Char 0D1C       end_of_initialization 0025  
               _my_delay_s 0D31  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0028            ___lldiv@counter 0035                  _RCSTAbits 0018  
         I2C_Master_Init@c 0036           I2C_Master_Read@a 0028      i1___wmul@multiplicand 0072  
                Division@y 003D              ?_USART_CONFIG 0028                  _TRISCbits 0087  
                i1___awdiv 069C            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 002A  
        Lcd_Write_String@i 002F             __end_of_ADC_IF 0D0A                  _TXSTAbits 0098  
                _Lcd_Clear 0CEC             __end_of___wmul 07FC           _Lcd_Write_String 0E66  
              _BAUDCTLbits 0187             ??_USART_CONFIG 002E        start_initialization 0011  
        __size_ofi1___wmul 0025                __end_of_isr 05C3                 ?i1___awdiv 0076  
                 ??_ADC_IF 0028          __size_of_Lcd_Init 0068          ??_I2C_Master_Init 003A  
        ??_I2C_Master_Read 002A          ??_I2C_Master_Wait 0028          ??_I2C_Master_Stop 0028  
        __size_of_Division 0068                ?_my_delay_s 0070                 ?_Lcd_Clear 0070  
                 ??___wmul 002C            Lcd_Write_Char@a 0029                __pbssCOMMON 007B  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 003D                sprintf@prec 003E           _I2C_Master_Start 0CC3  
         _I2C_Master_Write 0CD5           ___lwdiv@dividend 002A           ??_Lcd_Set_Cursor 002C  
                 ?___awdiv 002F                   ?___awmod 0028                   ?___lldiv 0028  
                 ?___lwdiv 0028                   ?___lwmod 0030          i1___awdiv@divisor 0076  
        i1___awdiv@counter 0020                  __pstrings 0800        __size_of_my_delay_s 001C  
              ??i1___awdiv 007A           ___lwdiv@quotient 002D                   ?_sprintf 0036  
           __size_of_setup 0070          interrupt_function 0004             ___wmul@product 002C  
                 _PIE1bits 008C                   Lcd_Cmd@a 002A       __end_of_USART_CONFIG 0F3D  
                 _PIR1bits 000C                ??_Lcd_Clear 002B                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F          ___wmul@multiplier 0028  
                 i1___wmul 0D6D           ??_Lcd_Write_Char 0028                 _ADC_CONFIG 0D92  
                 _Lcd_Init 0705        I2C_Master_Read@temp 002C                   _Division 0F98  
 __end_of_Lcd_Write_String 0EAC           __size_of_Lcd_Cmd 0015           __size_of___awdiv 0069  
         __size_of___awmod 005B           __size_of___lldiv 0068           __size_of___lwdiv 0046  
         __size_of___lwmod 003C              _Division$1282 003B         __end_of__stringtab 0810  
               sprintf@val 003F            _I2C_Master_Init 0DF0            _I2C_Master_Read 0DBE  
          _I2C_Master_Wait 0CDF            _I2C_Master_Stop 0CCC            ___lwdiv@divisor 0028  
          ___lwdiv@counter 002F                   __ptext10 0CEC                   __ptext11 0D1C  
                 __ptext20 0DBE                   __ptext12 0DF0                   __ptext21 0CDF  
                 __ptext13 076D                   __ptext22 0F98                   __ptext14 0D92  
                 __ptext23 0F3D                   __ptext15 0D31                   __ptext24 0633  
                 __ptext16 07D5                   __ptext25 0CF9                   __ptext17 0CD5  
                 __ptext26 054A                   __ptext18 0CCC                   __ptext27 0D6D  
                 __ptext19 0CC3                   __ptext28 069C           __size_of_sprintf 00EA  
            __size_of_main 0437               ??_my_delay_s 0028                   _presion1 007B  
                 _presion2 0051   __end_of_I2C_Master_Start 0CCC           my_delay_s@tiempo 002B  
 __end_of_I2C_Master_Write 0CDF                 _INTCONbits 000B                ?_ADC_CONFIG 0028  
       __end_of_my_delay_s 0D4D                   intlevel1 0000                  sprintf@ap 003C  
                sprintf@sp 0041      __size_of_USART_CONFIG 004B           ___lwmod@dividend 0032  
         ___lldiv@dividend 002C                  stringcode 080A                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 0E2A    __end_of_I2C_Master_Read 0DF0    __end_of_I2C_Master_Wait 0CEC  
  __end_of_I2C_Master_Stop 0CD5                   sprintf@c 0042                   sprintf@f 0036  
         ___lldiv@quotient 0031          I2C_Master_Write@d 0028            ___lwmod@divisor 0030  
          ___lwmod@counter 0035                   stringdir 080A                   stringtab 0800  
             _USART_CONFIG 0EF2                _SSPCON2bits 0091  
