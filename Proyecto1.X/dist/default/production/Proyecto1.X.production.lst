

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 29 14:01:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  0788                     __pidataBANK0:
   388                           
   389                           ;initializer for _u_flag
   390  0788  3401               	retlw	1
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCON	set	20
   393  0018                     _RCSTAbits	set	24
   394  0012                     _T2CONbits	set	18
   395  0017                     _CCP1CONbits	set	23
   396  0006                     _PORTB	set	6
   397  0009                     _PORTE	set	9
   398  0008                     _PORTD	set	8
   399  0007                     _PORTC	set	7
   400  001A                     _RCREG	set	26
   401  0006                     _PORTBbits	set	6
   402  0001                     _TMR0	set	1
   403  000B                     _INTCONbits	set	11
   404  0019                     _TXREG	set	25
   405  000C                     _PIR1bits	set	12
   406  0005                     _PORTA	set	5
   407  0015                     _CCPR1L	set	21
   408  0063                     _SSPIF	set	99
   409  005E                     _PEIE	set	94
   410  005F                     _GIE	set	95
   411  0049                     _RE1	set	73
   412  0048                     _RE0	set	72
   413  0091                     _SSPCON2bits	set	145
   414  0087                     _TRISCbits	set	135
   415  0094                     _SSPSTAT	set	148
   416  0093                     _SSPADD	set	147
   417  0091                     _SSPCON2	set	145
   418  009A                     _SPBRGH	set	154
   419  0099                     _SPBRG	set	153
   420  0098                     _TXSTAbits	set	152
   421  0092                     _PR2	set	146
   422  0096                     _IOCB	set	150
   423  008C                     _PIE1bits	set	140
   424  0095                     _WPUB	set	149
   425  0081                     _OPTION_REGbits	set	129
   426  0089                     _TRISE	set	137
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0086                     _TRISB	set	134
   430  0085                     _TRISA	set	133
   431  008F                     _OSCCONbits	set	143
   432  0463                     _SSPIE	set	1123
   433  043C                     _TRISC4	set	1084
   434  043B                     _TRISC3	set	1083
   435  0187                     _BAUDCTLbits	set	391
   436  0188                     _ANSEL	set	392
   437  0189                     _ANSELH	set	393
   438                           
   439                           	psect	strings
   440  0700                     __pstrings:
   441  0700                     stringtab:
   442  0700                     __stringtab:
   443  0700                     stringcode:	
   444                           ;	String table - string pointers are 1 byte each
   445                           
   446  0700                     stringdir:
   447  0700  3007               	movlw	high stringdir
   448  0701  008A               	movwf	10
   449  0702  0804               	movf	4,w
   450  0703  0A84               	incf	4,f
   451  0704  0782               	addwf	2,f
   452  0705                     __stringbase:
   453  0705  3400               	retlw	0
   454  0706                     __end_of__stringtab:
   455  0706                     STR_5:
   456  0706  344F               	retlw	79	;'O'
   457  0707  3450               	retlw	80	;'P'
   458  0708  3431               	retlw	49	;'1'
   459  0709  3400               	retlw	0
   460  070A                     STR_7:
   461  070A  344F               	retlw	79	;'O'
   462  070B  3450               	retlw	80	;'P'
   463  070C  3432               	retlw	50	;'2'
   464  070D  3400               	retlw	0
   465  070E                     STR_1:
   466  070E  3453               	retlw	83	;'S'
   467  070F  3431               	retlw	49	;'1'
   468  0710  343A               	retlw	58	;':'
   469  0711  3400               	retlw	0
   470  0712                     STR_3:
   471  0712  3453               	retlw	83	;'S'
   472  0713  3432               	retlw	50	;'2'
   473  0714  343A               	retlw	58	;':'
   474  0715  3400               	retlw	0
   475  0716                     STR_2:
   476  0716  3420               	retlw	32	;' '
   477  0717  3400               	retlw	0
   478  0716                     
   479                           	psect	cinit
   480  000F                     start_initialization:	
   481                           ; #config settings
   482                           
   483  000F                     __initialization:
   484                           
   485                           ; Initialize objects allocated to BANK0
   486  000F  120A  118A  2788  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   487  0014  00D3               	movwf	__pdataBANK0& (0+127)
   488                           
   489                           ; Clear objects allocated to BANK0
   490  0015  1383               	bcf	3,7	;select IRP bank0
   491  0016  3020               	movlw	low __pbssBANK0
   492  0017  0084               	movwf	4
   493  0018  303A               	movlw	low (__pbssBANK0+26)
   494  0019  120A  118A  277A  120A  118A  	fcall	clear_ram0
   495                           
   496                           ; Clear objects allocated to COMMON
   497  001E  01FC               	clrf	__pbssCOMMON& (0+127)
   498  001F  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   499  0020                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  0020                     __end_of__initialization:
   503  0020  0183               	clrf	3
   504  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507  007C                     __pbssCOMMON:
   508  007C                     _cont_temp:
   509  007C                     	ds	1
   510  007D                     _var_temp:
   511  007D                     	ds	1
   512                           
   513                           	psect	bssBANK0
   514  0020                     __pbssBANK0:
   515  0020                     _cont:
   516  0020                     	ds	2
   517  0022                     _flag:
   518  0022                     	ds	1
   519  0023                     _val:
   520  0023                     	ds	1
   521  0024                     _valor:
   522  0024                     	ds	1
   523  0025                     _decena:
   524  0025                     	ds	1
   525  0026                     _unidad:
   526  0026                     	ds	1
   527  0027                     _c_flag:
   528  0027                     	ds	1
   529  0028                     _d_flag:
   530  0028                     	ds	1
   531  0029                     _sensor3_unidades:
   532  0029                     	ds	1
   533  002A                     _sensor3_decenas:
   534  002A                     	ds	1
   535  002B                     _sensor3_centenas:
   536  002B                     	ds	1
   537  002C                     _sensor2_unidades:
   538  002C                     	ds	1
   539  002D                     _sensor2_decenas:
   540  002D                     	ds	1
   541  002E                     _sensor2_centenas:
   542  002E                     	ds	1
   543  002F                     _sensor1_unidades:
   544  002F                     	ds	1
   545  0030                     _sensor1_decenas:
   546  0030                     	ds	1
   547  0031                     _sensor1_centenas:
   548  0031                     	ds	1
   549  0032                     _sensor3:
   550  0032                     	ds	1
   551  0033                     _sensor2:
   552  0033                     	ds	1
   553  0034                     _sensor1:
   554  0034                     	ds	1
   555  0035                     _slave2:
   556  0035                     	ds	1
   557  0036                     _slave1:
   558  0036                     	ds	1
   559  0037                     _Tercer_digito:
   560  0037                     	ds	1
   561  0038                     _Segundo_digito:
   562  0038                     	ds	1
   563  0039                     _Primer_digito:
   564  0039                     	ds	1
   565                           
   566                           	psect	dataBANK0
   567  0053                     __pdataBANK0:
   568  0053                     _u_flag:
   569  0053                     	ds	1
   570                           
   571                           	psect	clrtext
   572  077A                     clear_ram0:	
   573                           ;	Called with FSR containing the base address, and
   574                           ;	W with the last address+1
   575                           
   576  077A  0064               	clrwdt	;clear the watchdog before getting into this loop
   577  077B                     clrloop0:
   578  077B  0180               	clrf	0	;clear RAM location pointed to by FSR
   579  077C  0A84               	incf	4,f	;increment pointer
   580  077D  0604               	xorwf	4,w	;XOR with final address
   581  077E  1903               	btfsc	3,2	;have we reached the end yet?
   582  077F  3400               	retlw	0	;all done for this memory range, return
   583  0780  0604               	xorwf	4,w	;XOR again to restore value
   584  0781  2F7B               	goto	clrloop0	;do the next byte
   585                           
   586                           	psect	cstackCOMMON
   587  0070                     __pcstackCOMMON:
   588  0070                     ?_setup:
   589  0070                     ?_Lcd_Init:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_I2C_Master_Start:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_I2C_Master_Stop:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Decimal:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Lcd_Clear:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Lcd_Write_String:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Lcd_Write_Char:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_main:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_isr:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_Lcd_Port:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_Lcd_Cmd:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Master_Wait:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?i1___bmul:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?___wmul:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     i1___bmul@multiplicand:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0070                     ___wmul@multiplier:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 2 bytes @ 0x0
   639  0070                     	ds	1
   640  0071                     ??i1___bmul:
   641                           
   642                           ; 1 bytes @ 0x1
   643  0071                     	ds	1
   644  0072                     i1___bmul@product:
   645  0072                     ___wmul@multiplicand:	
   646                           ; 1 bytes @ 0x2
   647                           
   648                           
   649                           ; 2 bytes @ 0x2
   650  0072                     	ds	1
   651  0073                     i1___bmul@multiplier:
   652                           
   653                           ; 1 bytes @ 0x3
   654  0073                     	ds	1
   655  0074                     ??___wmul:
   656  0074                     ___wmul@product:	
   657                           ; 1 bytes @ 0x4
   658                           
   659                           
   660                           ; 2 bytes @ 0x4
   661  0074                     	ds	2
   662  0076                     ??_isr:
   663                           
   664                           ; 1 bytes @ 0x6
   665  0076                     	ds	6
   666                           
   667                           	psect	cstackBANK0
   668  003A                     __pcstackBANK0:
   669  003A                     ??_I2C_Master_Start:
   670  003A                     ?_I2C_Master_Write:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  003A                     ??_I2C_Master_Stop:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  003A                     ??_Lcd_Port:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  003A                     ??_I2C_Master_Wait:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  003A                     ?___bmul:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  003A                     ?_I2C_Master_Read:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  003A                     ?___awdiv:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  003A                     ?___lldiv:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  003A                     Lcd_Port@a:	
   695                           ; 4 bytes @ 0x0
   696                           
   697  003A                     ___bmul@multiplicand:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  003A                     I2C_Master_Write@d:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  003A                     I2C_Master_Read@a:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  003A                     ___awdiv@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709  003A                     ___lldiv@divisor:	
   710                           ; 2 bytes @ 0x0
   711                           
   712                           
   713                           ; 4 bytes @ 0x0
   714  003A                     	ds	1
   715  003B                     ??_Lcd_Write_Char:
   716  003B                     ??_Lcd_Cmd:	
   717                           ; 1 bytes @ 0x1
   718                           
   719  003B                     ??___bmul:	
   720                           ; 1 bytes @ 0x1
   721                           
   722                           
   723                           ; 1 bytes @ 0x1
   724  003B                     	ds	1
   725  003C                     ??_I2C_Master_Write:
   726  003C                     ??_I2C_Master_Read:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  003C                     Lcd_Write_Char@a:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  003C                     ___bmul@product:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  003C                     ___awdiv@dividend:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740  003C                     	ds	1
   741  003D                     Lcd_Cmd@a:
   742  003D                     Lcd_Write_Char@temp:	
   743                           ; 1 bytes @ 0x3
   744                           
   745  003D                     ___bmul@multiplier:	
   746                           ; 1 bytes @ 0x3
   747                           
   748                           
   749                           ; 1 bytes @ 0x3
   750  003D                     	ds	1
   751  003E                     ??_Lcd_Init:
   752  003E                     ??_Lcd_Clear:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  003E                     ?_Lcd_Set_Cursor:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  003E                     ??___awdiv:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  003E                     Lcd_Set_Cursor@b:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  003E                     Lcd_Write_Char@y:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  003E                     I2C_Master_Read@temp:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  003E                     ___lldiv@dividend:	
   771                           ; 2 bytes @ 0x4
   772                           
   773                           
   774                           ; 4 bytes @ 0x4
   775  003E                     	ds	1
   776  003F                     ??_Lcd_Set_Cursor:
   777  003F                     ??_Lcd_Write_String:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  003F                     ___awdiv@counter:	
   781                           ; 1 bytes @ 0x5
   782                           
   783  003F                     Lcd_Write_String@i:	
   784                           ; 1 bytes @ 0x5
   785                           
   786                           
   787                           ; 2 bytes @ 0x5
   788  003F                     	ds	1
   789  0040                     ___awdiv@sign:
   790                           
   791                           ; 1 bytes @ 0x6
   792  0040                     	ds	1
   793  0041                     Lcd_Set_Cursor@a:
   794  0041                     Lcd_Write_String@a:	
   795                           ; 1 bytes @ 0x7
   796                           
   797  0041                     ___awdiv@quotient:	
   798                           ; 1 bytes @ 0x7
   799                           
   800                           
   801                           ; 2 bytes @ 0x7
   802  0041                     	ds	1
   803  0042                     ??___lldiv:
   804  0042                     Lcd_Set_Cursor@z:	
   805                           ; 1 bytes @ 0x8
   806                           
   807                           
   808                           ; 1 bytes @ 0x8
   809  0042                     	ds	1
   810  0043                     ??_Decimal:
   811  0043                     Lcd_Set_Cursor@y:	
   812                           ; 1 bytes @ 0x9
   813                           
   814  0043                     ___lldiv@quotient:	
   815                           ; 1 bytes @ 0x9
   816                           
   817                           
   818                           ; 4 bytes @ 0x9
   819  0043                     	ds	1
   820  0044                     Lcd_Set_Cursor@temp:
   821                           
   822                           ; 1 bytes @ 0xA
   823  0044                     	ds	2
   824  0046                     Decimal@variable:
   825                           
   826                           ; 1 bytes @ 0xC
   827  0046                     	ds	1
   828  0047                     Decimal@valor:
   829  0047                     ___lldiv@counter:	
   830                           ; 1 bytes @ 0xD
   831                           
   832                           
   833                           ; 1 bytes @ 0xD
   834  0047                     	ds	1
   835  0048                     ?_I2C_Master_Init:
   836  0048                     I2C_Master_Init@c:	
   837                           ; 1 bytes @ 0xE
   838                           
   839                           
   840                           ; 4 bytes @ 0xE
   841  0048                     	ds	4
   842  004C                     ??_I2C_Master_Init:
   843                           
   844                           ; 1 bytes @ 0x12
   845  004C                     	ds	4
   846  0050                     ??_setup:
   847  0050                     ??_main:	
   848                           ; 1 bytes @ 0x16
   849                           
   850                           
   851                           ; 1 bytes @ 0x16
   852  0050                     	ds	3
   853                           
   854                           	psect	maintext
   855  0024                     __pmaintext:	
   856 ;;
   857 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   858 ;;
   859 ;; *************** function _main *****************
   860 ;; Defined at:
   861 ;;		line 103 in file "master_main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : B00/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0
   877 ;;      Temps:          0       3       0       0       0
   878 ;;      Totals:         0       3       0       0       0
   879 ;;Total ram usage:        3 bytes
   880 ;; Hardware stack levels required when called:    5
   881 ;; This function calls:
   882 ;;		_Decimal
   883 ;;		_I2C_Master_Read
   884 ;;		_I2C_Master_Start
   885 ;;		_I2C_Master_Stop
   886 ;;		_I2C_Master_Write
   887 ;;		_Lcd_Clear
   888 ;;		_Lcd_Init
   889 ;;		_Lcd_Set_Cursor
   890 ;;		_Lcd_Write_Char
   891 ;;		_Lcd_Write_String
   892 ;;		_setup
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _main
   900  0024                     _main:
   901  0024                     l1747:	
   902                           ;incstack = 0
   903                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   904                           
   905  0024  120A  118A  23B2  120A  118A  	fcall	_setup
   906  0029  120A  118A  25B0  120A  118A  	fcall	_Lcd_Init
   907  002E                     l151:
   908  002E  120A  118A  2771  120A  118A  	fcall	_I2C_Master_Start
   909  0033  3051               	movlw	81
   910  0034  1283               	bcf	3,5	;RP0=0, select bank0
   911  0035  1303               	bcf	3,6	;RP1=0, select bank0
   912  0036  00BA               	movwf	I2C_Master_Write@d
   913  0037  3000               	movlw	0
   914  0038  00BB               	movwf	I2C_Master_Write@d+1
   915  0039  120A  118A  275E  120A  118A  	fcall	_I2C_Master_Write
   916  003E  3000               	movlw	0
   917  003F  1283               	bcf	3,5	;RP0=0, select bank0
   918  0040  1303               	bcf	3,6	;RP1=0, select bank0
   919  0041  00BA               	movwf	I2C_Master_Read@a
   920  0042  00BB               	movwf	I2C_Master_Read@a+1
   921  0043  120A  118A  2638  120A  118A  	fcall	_I2C_Master_Read
   922  0048  1283               	bcf	3,5	;RP0=0, select bank0
   923  0049  1303               	bcf	3,6	;RP1=0, select bank0
   924  004A  083A               	movf	?_I2C_Master_Read,w
   925  004B  00D0               	movwf	??_main
   926  004C  0850               	movf	??_main,w
   927  004D  00B6               	movwf	_slave1
   928  004E  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Stop
   929  0053                     l1749:
   930  0053  3003               	movlw	3
   931  0054  1283               	bcf	3,5	;RP0=0, select bank0
   932  0055  1303               	bcf	3,6	;RP1=0, select bank0
   933  0056  00D2               	movwf	??_main+2
   934  0057  3008               	movlw	8
   935  0058  00D1               	movwf	??_main+1
   936  0059  3076               	movlw	118
   937  005A  00D0               	movwf	??_main
   938  005B                     u1237:
   939  005B  0BD0               	decfsz	??_main,f
   940  005C  285B               	goto	u1237
   941  005D  0BD1               	decfsz	??_main+1,f
   942  005E  285B               	goto	u1237
   943  005F  0BD2               	decfsz	??_main+2,f
   944  0060  285B               	goto	u1237
   945  0061  0000               	nop
   946  0062                     l1751:
   947  0062  120A  118A  2771  120A  118A  	fcall	_I2C_Master_Start
   948  0067                     l1753:
   949  0067  3031               	movlw	49
   950  0068  1283               	bcf	3,5	;RP0=0, select bank0
   951  0069  1303               	bcf	3,6	;RP1=0, select bank0
   952  006A  00BA               	movwf	I2C_Master_Write@d
   953  006B  3000               	movlw	0
   954  006C  00BB               	movwf	I2C_Master_Write@d+1
   955  006D  120A  118A  275E  120A  118A  	fcall	_I2C_Master_Write
   956  0072                     l1755:
   957  0072  3000               	movlw	0
   958  0073  1283               	bcf	3,5	;RP0=0, select bank0
   959  0074  1303               	bcf	3,6	;RP1=0, select bank0
   960  0075  00BA               	movwf	I2C_Master_Read@a
   961  0076  00BB               	movwf	I2C_Master_Read@a+1
   962  0077  120A  118A  2638  120A  118A  	fcall	_I2C_Master_Read
   963  007C  1283               	bcf	3,5	;RP0=0, select bank0
   964  007D  1303               	bcf	3,6	;RP1=0, select bank0
   965  007E  083A               	movf	?_I2C_Master_Read,w
   966  007F  00D0               	movwf	??_main
   967  0080  0850               	movf	??_main,w
   968  0081  00B5               	movwf	_slave2
   969  0082                     l1757:
   970  0082  120A  118A  2768  120A  118A  	fcall	_I2C_Master_Stop
   971  0087                     l1759:
   972  0087  3003               	movlw	3
   973  0088  1283               	bcf	3,5	;RP0=0, select bank0
   974  0089  1303               	bcf	3,6	;RP1=0, select bank0
   975  008A  00D2               	movwf	??_main+2
   976  008B  3008               	movlw	8
   977  008C  00D1               	movwf	??_main+1
   978  008D  3076               	movlw	118
   979  008E  00D0               	movwf	??_main
   980  008F                     u1247:
   981  008F  0BD0               	decfsz	??_main,f
   982  0090  288F               	goto	u1247
   983  0091  0BD1               	decfsz	??_main+1,f
   984  0092  288F               	goto	u1247
   985  0093  0BD2               	decfsz	??_main+2,f
   986  0094  288F               	goto	u1247
   987  0095  0000               	nop
   988  0096                     l1761:
   989                           
   990                           ;master_main.c: 135:         if(val == 0){
   991  0096  1283               	bcf	3,5	;RP0=0, select bank0
   992  0097  1303               	bcf	3,6	;RP1=0, select bank0
   993  0098  0823               	movf	_val,w
   994  0099  1D03               	btfss	3,2
   995  009A  289C               	goto	u971
   996  009B  289D               	goto	u970
   997  009C                     u971:
   998  009C  28A9               	goto	l1765
   999  009D                     u970:
  1000  009D                     l1763:
  1001                           
  1002                           ;master_main.c: 136:             CCPR1L = (0x00>>1) + 128;
  1003  009D  3080               	movlw	128
  1004  009E  0095               	movwf	21	;volatile
  1005                           
  1006                           ;master_main.c: 137:             _delay((unsigned long)((18)*(8000000/4000.0)));
  1007  009F  302F               	movlw	47
  1008  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00A2  00D1               	movwf	??_main+1
  1011  00A3  30BF               	movlw	191
  1012  00A4  00D0               	movwf	??_main
  1013  00A5                     u1257:
  1014  00A5  0BD0               	decfsz	??_main,f
  1015  00A6  28A5               	goto	u1257
  1016  00A7  0BD1               	decfsz	??_main+1,f
  1017  00A8  28A5               	goto	u1257
  1018  00A9                     l1765:
  1019                           
  1020                           ;master_main.c: 140:         if(val == 1){
  1021  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1022  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1023  00AB  0323               	decf	_val,w
  1024  00AC  1D03               	btfss	3,2
  1025  00AD  28AF               	goto	u981
  1026  00AE  28B0               	goto	u980
  1027  00AF                     u981:
  1028  00AF  28BC               	goto	l1769
  1029  00B0                     u980:
  1030  00B0                     l1767:
  1031                           
  1032                           ;master_main.c: 141:             CCPR1L = (0x7f>>1) + 128;
  1033  00B0  30BF               	movlw	191
  1034  00B1  0095               	movwf	21	;volatile
  1035                           
  1036                           ;master_main.c: 142:             _delay((unsigned long)((18)*(8000000/4000.0)));
  1037  00B2  302F               	movlw	47
  1038  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1039  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1040  00B5  00D1               	movwf	??_main+1
  1041  00B6  30BF               	movlw	191
  1042  00B7  00D0               	movwf	??_main
  1043  00B8                     u1267:
  1044  00B8  0BD0               	decfsz	??_main,f
  1045  00B9  28B8               	goto	u1267
  1046  00BA  0BD1               	decfsz	??_main+1,f
  1047  00BB  28B8               	goto	u1267
  1048  00BC                     l1769:
  1049                           
  1050                           ;master_main.c: 145:         Decimal(255);
  1051  00BC  30FF               	movlw	255
  1052  00BD  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1053  00C2                     l1771:
  1054                           
  1055                           ;master_main.c: 146:         sensor1_centenas= Primer_digito;
  1056  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00C4  0839               	movf	_Primer_digito,w
  1059  00C5  00D0               	movwf	??_main
  1060  00C6  0850               	movf	??_main,w
  1061  00C7  00B1               	movwf	_sensor1_centenas
  1062  00C8                     l1773:
  1063                           
  1064                           ;master_main.c: 147:         sensor1_decenas= Segundo_digito;
  1065  00C8  0838               	movf	_Segundo_digito,w
  1066  00C9  00D0               	movwf	??_main
  1067  00CA  0850               	movf	??_main,w
  1068  00CB  00B0               	movwf	_sensor1_decenas
  1069  00CC                     l1775:
  1070                           
  1071                           ;master_main.c: 148:         sensor1_unidades= Tercer_digito;
  1072  00CC  0837               	movf	_Tercer_digito,w
  1073  00CD  00D0               	movwf	??_main
  1074  00CE  0850               	movf	??_main,w
  1075  00CF  00AF               	movwf	_sensor1_unidades
  1076                           
  1077                           ;master_main.c: 149:         Decimal(80);
  1078  00D0  3050               	movlw	80
  1079  00D1  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1080  00D6                     l1777:
  1081                           
  1082                           ;master_main.c: 150:         sensor2_centenas= Primer_digito;
  1083  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1084  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1085  00D8  0839               	movf	_Primer_digito,w
  1086  00D9  00D0               	movwf	??_main
  1087  00DA  0850               	movf	??_main,w
  1088  00DB  00AE               	movwf	_sensor2_centenas
  1089  00DC                     l1779:
  1090                           
  1091                           ;master_main.c: 151:         sensor2_decenas= Segundo_digito;
  1092  00DC  0838               	movf	_Segundo_digito,w
  1093  00DD  00D0               	movwf	??_main
  1094  00DE  0850               	movf	??_main,w
  1095  00DF  00AD               	movwf	_sensor2_decenas
  1096  00E0                     l1781:
  1097                           
  1098                           ;master_main.c: 152:         sensor2_unidades= Tercer_digito;
  1099  00E0  0837               	movf	_Tercer_digito,w
  1100  00E1  00D0               	movwf	??_main
  1101  00E2  0850               	movf	??_main,w
  1102  00E3  00AC               	movwf	_sensor2_unidades
  1103  00E4                     l1783:
  1104                           
  1105                           ;master_main.c: 153:         Decimal(100);
  1106  00E4  3064               	movlw	100
  1107  00E5  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1108                           
  1109                           ;master_main.c: 154:         sensor3_centenas= Primer_digito;
  1110  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00EC  0839               	movf	_Primer_digito,w
  1113  00ED  00D0               	movwf	??_main
  1114  00EE  0850               	movf	??_main,w
  1115  00EF  00AB               	movwf	_sensor3_centenas
  1116                           
  1117                           ;master_main.c: 155:         sensor3_decenas= Segundo_digito;
  1118  00F0  0838               	movf	_Segundo_digito,w
  1119  00F1  00D0               	movwf	??_main
  1120  00F2  0850               	movf	??_main,w
  1121  00F3  00AA               	movwf	_sensor3_decenas
  1122                           
  1123                           ;master_main.c: 156:         sensor3_unidades= Tercer_digito;
  1124  00F4  0837               	movf	_Tercer_digito,w
  1125  00F5  00D0               	movwf	??_main
  1126  00F6  0850               	movf	??_main,w
  1127  00F7  00A9               	movwf	_sensor3_unidades
  1128  00F8                     l1785:
  1129                           
  1130                           ;master_main.c: 158:         Lcd_Clear();
  1131  00F8  120A  118A  2744  120A  118A  	fcall	_Lcd_Clear
  1132  00FD                     l1787:
  1133                           
  1134                           ;master_main.c: 159:         Lcd_Set_Cursor(1,1);
  1135  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00FF  01BE               	clrf	Lcd_Set_Cursor@b
  1138  0100  0ABE               	incf	Lcd_Set_Cursor@b,f
  1139  0101  3001               	movlw	1
  1140  0102  120A  118A  2558  120A  118A  	fcall	_Lcd_Set_Cursor
  1141  0107                     l1789:
  1142                           
  1143                           ;master_main.c: 160:         Lcd_Write_String("S1:");
  1144  0107  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145  0108  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1146  010D                     l1791:
  1147                           
  1148                           ;master_main.c: 161:         Lcd_Write_String(" ");
  1149  010D  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1150  010E  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1151  0113                     l1793:
  1152                           
  1153                           ;master_main.c: 162:         Lcd_Write_String("S2:");
  1154  0113  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1155  0114  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1156  0119                     l1795:
  1157                           
  1158                           ;master_main.c: 163:         Lcd_Write_String(" ");
  1159  0119  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1160  011A  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1161  011F                     l1797:
  1162                           
  1163                           ;master_main.c: 164:         Lcd_Write_String("OP1");
  1164  011F  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1165  0120  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1166  0125                     l1799:
  1167                           
  1168                           ;master_main.c: 165:         Lcd_Write_String(" ");
  1169  0125  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1170  0126  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1171  012B                     l1801:
  1172                           
  1173                           ;master_main.c: 166:         Lcd_Write_String("OP2");
  1174  012B  3005               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1175  012C  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1176  0131                     l1803:
  1177                           
  1178                           ;master_main.c: 168:         Lcd_Set_Cursor(2,1);
  1179  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0133  01BE               	clrf	Lcd_Set_Cursor@b
  1182  0134  0ABE               	incf	Lcd_Set_Cursor@b,f
  1183  0135  3002               	movlw	2
  1184  0136  120A  118A  2558  120A  118A  	fcall	_Lcd_Set_Cursor
  1185  013B                     l1805:
  1186                           
  1187                           ;master_main.c: 169:         Lcd_Write_Char(sensor1_centenas);
  1188  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1189  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1190  013D  0831               	movf	_sensor1_centenas,w
  1191  013E  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1192  0143                     l1807:
  1193                           
  1194                           ;master_main.c: 170:         Lcd_Write_Char(sensor1_decenas);
  1195  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0145  0830               	movf	_sensor1_decenas,w
  1198  0146  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1199  014B                     l1809:
  1200                           
  1201                           ;master_main.c: 171:         Lcd_Write_Char(sensor1_unidades);
  1202  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1203  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1204  014D  082F               	movf	_sensor1_unidades,w
  1205  014E  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1206  0153                     l1811:
  1207                           
  1208                           ;master_main.c: 172:         Lcd_Write_String(" ");
  1209  0153  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1210  0154  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1211  0159                     l1813:
  1212                           
  1213                           ;master_main.c: 173:         Lcd_Write_Char(sensor2_centenas);
  1214  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1215  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1216  015B  082E               	movf	_sensor2_centenas,w
  1217  015C  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1218  0161                     l1815:
  1219                           
  1220                           ;master_main.c: 174:         Lcd_Write_Char(sensor2_decenas);
  1221  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0163  082D               	movf	_sensor2_decenas,w
  1224  0164  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1225  0169                     l1817:
  1226                           
  1227                           ;master_main.c: 175:         Lcd_Write_Char(sensor2_unidades);
  1228  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1229  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1230  016B  082C               	movf	_sensor2_unidades,w
  1231  016C  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1232  0171                     l1819:
  1233                           
  1234                           ;master_main.c: 176:         Lcd_Write_String(" ");
  1235  0171  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1236  0172  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1237  0177                     l1821:
  1238                           
  1239                           ;master_main.c: 177:         Decimal(50);
  1240  0177  3032               	movlw	50
  1241  0178  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1242  017D                     l1823:
  1243                           
  1244                           ;master_main.c: 178:         Lcd_Write_Char(Primer_digito);
  1245  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1246  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1247  017F  0839               	movf	_Primer_digito,w
  1248  0180  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1249  0185                     l1825:
  1250                           
  1251                           ;master_main.c: 179:         Lcd_Write_Char(Segundo_digito);
  1252  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0187  0838               	movf	_Segundo_digito,w
  1255  0188  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1256  018D                     l1827:
  1257                           
  1258                           ;master_main.c: 180:         Lcd_Write_Char(Tercer_digito);
  1259  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1260  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1261  018F  0837               	movf	_Tercer_digito,w
  1262  0190  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1263  0195                     l1829:
  1264                           
  1265                           ;master_main.c: 181:         Lcd_Write_String(" ");
  1266  0195  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1267  0196  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_String
  1268  019B                     l1831:
  1269                           
  1270                           ;master_main.c: 182:         if(flag){
  1271  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1272  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1273  019D  0822               	movf	_flag,w
  1274  019E  1903               	btfsc	3,2
  1275  019F  29A1               	goto	u991
  1276  01A0  29A2               	goto	u990
  1277  01A1                     u991:
  1278  01A1  29A9               	goto	l1835
  1279  01A2                     u990:
  1280  01A2                     l1833:
  1281                           
  1282                           ;master_main.c: 183:             Decimal(PORTA);
  1283  01A2  0805               	movf	5,w	;volatile
  1284  01A3  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1285                           
  1286                           ;master_main.c: 184:         }
  1287  01A8  29AF               	goto	l155
  1288  01A9                     l1835:
  1289                           
  1290                           ;master_main.c: 186:             Decimal(40);
  1291  01A9  3028               	movlw	40
  1292  01AA  120A  118A  24F1  120A  118A  	fcall	_Decimal
  1293  01AF                     l155:	
  1294                           ;master_main.c: 187:         }
  1295                           
  1296                           
  1297                           ;master_main.c: 188:         Lcd_Write_Char(Primer_digito);
  1298  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1299  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1300  01B1  0839               	movf	_Primer_digito,w
  1301  01B2  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1302                           
  1303                           ;master_main.c: 189:         Lcd_Write_Char(Segundo_digito);
  1304  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1305  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1306  01B9  0838               	movf	_Segundo_digito,w
  1307  01BA  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1308                           
  1309                           ;master_main.c: 190:         Lcd_Write_Char(Tercer_digito);
  1310  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1311  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1312  01C1  0837               	movf	_Tercer_digito,w
  1313  01C2  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  1314  01C7                     l1837:
  1315                           
  1316                           ;master_main.c: 193:         if (PIR1bits.TXIF){
  1317  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1318  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1319  01C9  1E0C               	btfss	12,4	;volatile
  1320  01CA  29CC               	goto	u1001
  1321  01CB  29CD               	goto	u1000
  1322  01CC                     u1001:
  1323  01CC  2A7F               	goto	l1841
  1324  01CD                     u1000:
  1325  01CD                     l1839:
  1326                           
  1327                           ;master_main.c: 194:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1328  01CD  3034               	movlw	52
  1329  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1330  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1331  01D0  00D1               	movwf	??_main+1
  1332  01D1  30F1               	movlw	241
  1333  01D2  00D0               	movwf	??_main
  1334  01D3                     u1277:
  1335  01D3  0BD0               	decfsz	??_main,f
  1336  01D4  29D3               	goto	u1277
  1337  01D5  0BD1               	decfsz	??_main+1,f
  1338  01D6  29D3               	goto	u1277
  1339                           
  1340                           ;master_main.c: 195:                     TXREG = sensor1_centenas;
  1341  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1342  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1343  01D9  0831               	movf	_sensor1_centenas,w
  1344  01DA  0099               	movwf	25	;volatile
  1345                           
  1346                           ;master_main.c: 196:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1347  01DB  3034               	movlw	52
  1348  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1350  01DE  00D1               	movwf	??_main+1
  1351  01DF  30F1               	movlw	241
  1352  01E0  00D0               	movwf	??_main
  1353  01E1                     u1287:
  1354  01E1  0BD0               	decfsz	??_main,f
  1355  01E2  29E1               	goto	u1287
  1356  01E3  0BD1               	decfsz	??_main+1,f
  1357  01E4  29E1               	goto	u1287
  1358                           
  1359                           ;master_main.c: 197:                     TXREG = sensor1_decenas;
  1360  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1361  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1362  01E7  0830               	movf	_sensor1_decenas,w
  1363  01E8  0099               	movwf	25	;volatile
  1364                           
  1365                           ;master_main.c: 198:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1366  01E9  3034               	movlw	52
  1367  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1368  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1369  01EC  00D1               	movwf	??_main+1
  1370  01ED  30F1               	movlw	241
  1371  01EE  00D0               	movwf	??_main
  1372  01EF                     u1297:
  1373  01EF  0BD0               	decfsz	??_main,f
  1374  01F0  29EF               	goto	u1297
  1375  01F1  0BD1               	decfsz	??_main+1,f
  1376  01F2  29EF               	goto	u1297
  1377                           
  1378                           ;master_main.c: 199:                     TXREG = sensor1_unidades;
  1379  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1381  01F5  082F               	movf	_sensor1_unidades,w
  1382  01F6  0099               	movwf	25	;volatile
  1383                           
  1384                           ;master_main.c: 200:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1385  01F7  3034               	movlw	52
  1386  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1387  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1388  01FA  00D1               	movwf	??_main+1
  1389  01FB  30F1               	movlw	241
  1390  01FC  00D0               	movwf	??_main
  1391  01FD                     u1307:
  1392  01FD  0BD0               	decfsz	??_main,f
  1393  01FE  29FD               	goto	u1307
  1394  01FF  0BD1               	decfsz	??_main+1,f
  1395  0200  29FD               	goto	u1307
  1396                           
  1397                           ;master_main.c: 201:                     TXREG = 0x2C;
  1398  0201  302C               	movlw	44
  1399  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0204  0099               	movwf	25	;volatile
  1402                           
  1403                           ;master_main.c: 202:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1404  0205  3034               	movlw	52
  1405  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0208  00D1               	movwf	??_main+1
  1408  0209  30F1               	movlw	241
  1409  020A  00D0               	movwf	??_main
  1410  020B                     u1317:
  1411  020B  0BD0               	decfsz	??_main,f
  1412  020C  2A0B               	goto	u1317
  1413  020D  0BD1               	decfsz	??_main+1,f
  1414  020E  2A0B               	goto	u1317
  1415                           
  1416                           ;master_main.c: 203:                     TXREG = sensor2_centenas;
  1417  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0211  082E               	movf	_sensor2_centenas,w
  1420  0212  0099               	movwf	25	;volatile
  1421                           
  1422                           ;master_main.c: 204:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1423  0213  3034               	movlw	52
  1424  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0216  00D1               	movwf	??_main+1
  1427  0217  30F1               	movlw	241
  1428  0218  00D0               	movwf	??_main
  1429  0219                     u1327:
  1430  0219  0BD0               	decfsz	??_main,f
  1431  021A  2A19               	goto	u1327
  1432  021B  0BD1               	decfsz	??_main+1,f
  1433  021C  2A19               	goto	u1327
  1434                           
  1435                           ;master_main.c: 205:                     TXREG = sensor2_decenas;
  1436  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1437  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1438  021F  082D               	movf	_sensor2_decenas,w
  1439  0220  0099               	movwf	25	;volatile
  1440                           
  1441                           ;master_main.c: 206:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1442  0221  3034               	movlw	52
  1443  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0224  00D1               	movwf	??_main+1
  1446  0225  30F1               	movlw	241
  1447  0226  00D0               	movwf	??_main
  1448  0227                     u1337:
  1449  0227  0BD0               	decfsz	??_main,f
  1450  0228  2A27               	goto	u1337
  1451  0229  0BD1               	decfsz	??_main+1,f
  1452  022A  2A27               	goto	u1337
  1453                           
  1454                           ;master_main.c: 207:                     TXREG = sensor2_unidades;
  1455  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1456  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1457  022D  082C               	movf	_sensor2_unidades,w
  1458  022E  0099               	movwf	25	;volatile
  1459                           
  1460                           ;master_main.c: 208:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1461  022F  3034               	movlw	52
  1462  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0232  00D1               	movwf	??_main+1
  1465  0233  30F1               	movlw	241
  1466  0234  00D0               	movwf	??_main
  1467  0235                     u1347:
  1468  0235  0BD0               	decfsz	??_main,f
  1469  0236  2A35               	goto	u1347
  1470  0237  0BD1               	decfsz	??_main+1,f
  1471  0238  2A35               	goto	u1347
  1472                           
  1473                           ;master_main.c: 209:                     TXREG = 0x2C;
  1474  0239  302C               	movlw	44
  1475  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1476  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1477  023C  0099               	movwf	25	;volatile
  1478                           
  1479                           ;master_main.c: 210:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1480  023D  3034               	movlw	52
  1481  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1482  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0240  00D1               	movwf	??_main+1
  1484  0241  30F1               	movlw	241
  1485  0242  00D0               	movwf	??_main
  1486  0243                     u1357:
  1487  0243  0BD0               	decfsz	??_main,f
  1488  0244  2A43               	goto	u1357
  1489  0245  0BD1               	decfsz	??_main+1,f
  1490  0246  2A43               	goto	u1357
  1491                           
  1492                           ;master_main.c: 211:                     TXREG = sensor3_centenas;
  1493  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0249  082B               	movf	_sensor3_centenas,w
  1496  024A  0099               	movwf	25	;volatile
  1497                           
  1498                           ;master_main.c: 212:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1499  024B  3034               	movlw	52
  1500  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1501  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1502  024E  00D1               	movwf	??_main+1
  1503  024F  30F1               	movlw	241
  1504  0250  00D0               	movwf	??_main
  1505  0251                     u1367:
  1506  0251  0BD0               	decfsz	??_main,f
  1507  0252  2A51               	goto	u1367
  1508  0253  0BD1               	decfsz	??_main+1,f
  1509  0254  2A51               	goto	u1367
  1510                           
  1511                           ;master_main.c: 213:                     TXREG = sensor3_decenas;
  1512  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0257  082A               	movf	_sensor3_decenas,w
  1515  0258  0099               	movwf	25	;volatile
  1516                           
  1517                           ;master_main.c: 214:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1518  0259  3034               	movlw	52
  1519  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1520  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1521  025C  00D1               	movwf	??_main+1
  1522  025D  30F1               	movlw	241
  1523  025E  00D0               	movwf	??_main
  1524  025F                     u1377:
  1525  025F  0BD0               	decfsz	??_main,f
  1526  0260  2A5F               	goto	u1377
  1527  0261  0BD1               	decfsz	??_main+1,f
  1528  0262  2A5F               	goto	u1377
  1529                           
  1530                           ;master_main.c: 215:                     TXREG = sensor3_unidades;
  1531  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0265  0829               	movf	_sensor3_unidades,w
  1534  0266  0099               	movwf	25	;volatile
  1535                           
  1536                           ;master_main.c: 216:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1537  0267  3034               	movlw	52
  1538  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1540  026A  00D1               	movwf	??_main+1
  1541  026B  30F1               	movlw	241
  1542  026C  00D0               	movwf	??_main
  1543  026D                     u1387:
  1544  026D  0BD0               	decfsz	??_main,f
  1545  026E  2A6D               	goto	u1387
  1546  026F  0BD1               	decfsz	??_main+1,f
  1547  0270  2A6D               	goto	u1387
  1548                           
  1549                           ;master_main.c: 217:                     TXREG = 0x0D;
  1550  0271  300D               	movlw	13
  1551  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0274  0099               	movwf	25	;volatile
  1554                           
  1555                           ;master_main.c: 218:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1556  0275  3034               	movlw	52
  1557  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0278  00D1               	movwf	??_main+1
  1560  0279  30F1               	movlw	241
  1561  027A  00D0               	movwf	??_main
  1562  027B                     u1397:
  1563  027B  0BD0               	decfsz	??_main,f
  1564  027C  2A7B               	goto	u1397
  1565  027D  0BD1               	decfsz	??_main+1,f
  1566  027E  2A7B               	goto	u1397
  1567  027F                     l1841:
  1568                           
  1569                           ;master_main.c: 220:         PIR1bits.TXIF = 0;
  1570  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0281  120C               	bcf	12,4	;volatile
  1573  0282  282E               	goto	l151
  1574  0283  120A  118A  280C   	ljmp	start
  1575  0286                     __end_of_main:
  1576                           
  1577                           	psect	text1
  1578  03B2                     __ptext1:	
  1579 ;; *************** function _setup *****************
  1580 ;; Defined at:
  1581 ;;		line 331 in file "master_main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    4
  1602 ;; This function calls:
  1603 ;;		_I2C_Master_Init
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _setup
  1611  03B2                     _setup:
  1612  03B2                     l1559:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1615                           
  1616                           
  1617                           ;master_main.c: 333:     OSCCONbits.IRCF2 = 1;
  1618  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1619  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1620  03B4  170F               	bsf	15,6	;volatile
  1621                           
  1622                           ;master_main.c: 334:     OSCCONbits.IRCF1 = 1;
  1623  03B5  168F               	bsf	15,5	;volatile
  1624                           
  1625                           ;master_main.c: 335:     OSCCONbits.IRCF0 = 1;
  1626  03B6  160F               	bsf	15,4	;volatile
  1627                           
  1628                           ;master_main.c: 336:     OSCCONbits.SCS = 1;
  1629  03B7  140F               	bsf	15,0	;volatile
  1630  03B8                     l1561:
  1631                           
  1632                           ;master_main.c: 339:     ANSELH = 0x00;
  1633  03B8  1683               	bsf	3,5	;RP0=1, select bank3
  1634  03B9  1703               	bsf	3,6	;RP1=1, select bank3
  1635  03BA  0189               	clrf	9	;volatile
  1636                           
  1637                           ;master_main.c: 340:     ANSEL = 0x00;
  1638  03BB  0188               	clrf	8	;volatile
  1639                           
  1640                           ;master_main.c: 342:     TRISA = 0x00;
  1641  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1642  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1643  03BE  0185               	clrf	5	;volatile
  1644  03BF                     l1563:
  1645                           
  1646                           ;master_main.c: 343:     TRISB = 0x03;
  1647  03BF  3003               	movlw	3
  1648  03C0  0086               	movwf	6	;volatile
  1649  03C1                     l1565:
  1650                           
  1651                           ;master_main.c: 344:     TRISC = 0x80;
  1652  03C1  3080               	movlw	128
  1653  03C2  0087               	movwf	7	;volatile
  1654                           
  1655                           ;master_main.c: 345:     TRISD = 0x00;
  1656  03C3  0188               	clrf	8	;volatile
  1657                           
  1658                           ;master_main.c: 346:     TRISE = 0x00;
  1659  03C4  0189               	clrf	9	;volatile
  1660  03C5                     l1567:
  1661                           
  1662                           ;master_main.c: 348:     OPTION_REGbits.nRBPU = 0 ;
  1663  03C5  1381               	bcf	1,7	;volatile
  1664  03C6                     l1569:
  1665                           
  1666                           ;master_main.c: 349:     WPUB = 0x03;
  1667  03C6  3003               	movlw	3
  1668  03C7  0095               	movwf	21	;volatile
  1669  03C8                     l1571:
  1670                           
  1671                           ;master_main.c: 351:     PORTA = 0x00;
  1672  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1673  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1674  03CA  0185               	clrf	5	;volatile
  1675  03CB                     l1573:
  1676                           
  1677                           ;master_main.c: 352:     PORTC = 0x00;
  1678  03CB  0187               	clrf	7	;volatile
  1679  03CC                     l1575:
  1680                           
  1681                           ;master_main.c: 353:     PORTD = 0x00;
  1682  03CC  0188               	clrf	8	;volatile
  1683  03CD                     l1577:
  1684                           
  1685                           ;master_main.c: 354:     PORTE = 0x00;
  1686  03CD  0189               	clrf	9	;volatile
  1687  03CE                     l1579:
  1688                           
  1689                           ;master_main.c: 357:     INTCONbits.GIE = 1;
  1690  03CE  178B               	bsf	11,7	;volatile
  1691  03CF                     l1581:
  1692                           
  1693                           ;master_main.c: 358:     INTCONbits.PEIE = 1;
  1694  03CF  170B               	bsf	11,6	;volatile
  1695  03D0                     l1583:
  1696                           
  1697                           ;master_main.c: 359:     INTCONbits.T0IE = 1;
  1698  03D0  168B               	bsf	11,5	;volatile
  1699  03D1                     l1585:
  1700                           
  1701                           ;master_main.c: 360:     INTCONbits.T0IF = 0;
  1702  03D1  110B               	bcf	11,2	;volatile
  1703  03D2                     l1587:
  1704                           
  1705                           ;master_main.c: 361:     PIE1bits.RCIE = 1;
  1706  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1707  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1708  03D4  168C               	bsf	12,5	;volatile
  1709  03D5                     l1589:
  1710                           
  1711                           ;master_main.c: 362:     PIR1bits.RCIF = 0;
  1712  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1713  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1714  03D7  128C               	bcf	12,5	;volatile
  1715  03D8                     l1591:
  1716                           
  1717                           ;master_main.c: 365:     PORTB = 0x00;
  1718  03D8  0186               	clrf	6	;volatile
  1719                           
  1720                           ;master_main.c: 366:     IOCB = 0x03;
  1721  03D9  3003               	movlw	3
  1722  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1723  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1724  03DC  0096               	movwf	22	;volatile
  1725  03DD                     l1593:
  1726                           
  1727                           ;master_main.c: 367:     INTCONbits.RBIF = 0;
  1728  03DD  100B               	bcf	11,0	;volatile
  1729                           
  1730                           ;master_main.c: 370:     PR2 = 250;
  1731  03DE  30FA               	movlw	250
  1732  03DF  0092               	movwf	18	;volatile
  1733  03E0                     l1595:
  1734                           
  1735                           ;master_main.c: 371:     CCP1CONbits.P1M = 0;
  1736  03E0  303F               	movlw	-193
  1737  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1738  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1739  03E3  0597               	andwf	23,f	;volatile
  1740  03E4                     l1597:
  1741                           
  1742                           ;master_main.c: 372:     CCP1CONbits.CCP1M = 0b00001100;
  1743  03E4  0817               	movf	23,w	;volatile
  1744  03E5  39F0               	andlw	-16
  1745  03E6  380C               	iorlw	12
  1746  03E7  0097               	movwf	23	;volatile
  1747                           
  1748                           ;master_main.c: 374:     CCPR1L = 0x0F;
  1749  03E8  300F               	movlw	15
  1750  03E9  0095               	movwf	21	;volatile
  1751  03EA                     l1599:
  1752                           
  1753                           ;master_main.c: 375:     CCP1CONbits.DC1B = 0;
  1754  03EA  30CF               	movlw	-49
  1755  03EB  0597               	andwf	23,f	;volatile
  1756  03EC                     l1601:
  1757                           
  1758                           ;master_main.c: 377:     PIR1bits.TMR2IF = 0;
  1759  03EC  108C               	bcf	12,1	;volatile
  1760  03ED                     l1603:
  1761                           
  1762                           ;master_main.c: 378:     T2CONbits.T2CKPS1 = 1;
  1763  03ED  1492               	bsf	18,1	;volatile
  1764  03EE                     l1605:
  1765                           
  1766                           ;master_main.c: 379:     T2CONbits.T2CKPS0 = 1;
  1767  03EE  1412               	bsf	18,0	;volatile
  1768  03EF                     l1607:
  1769                           
  1770                           ;master_main.c: 380:     T2CONbits.TMR2ON = 1;
  1771  03EF  1512               	bsf	18,2	;volatile
  1772  03F0                     l204:	
  1773                           ;master_main.c: 382:     while (!PIR1bits.TMR2IF);
  1774                           
  1775  03F0  1C8C               	btfss	12,1	;volatile
  1776  03F1  2BF3               	goto	u841
  1777  03F2  2BF4               	goto	u840
  1778  03F3                     u841:
  1779  03F3  2BF0               	goto	l204
  1780  03F4                     u840:
  1781  03F4                     l206:
  1782                           
  1783                           ;master_main.c: 383:     PIR1bits.TMR2IF = 0;
  1784  03F4  108C               	bcf	12,1	;volatile
  1785                           
  1786                           ;master_main.c: 386:     TXSTAbits.SYNC = 0;
  1787  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1788  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1789  03F7  1218               	bcf	24,4	;volatile
  1790                           
  1791                           ;master_main.c: 387:     TXSTAbits.BRGH = 1;
  1792  03F8  1518               	bsf	24,2	;volatile
  1793                           
  1794                           ;master_main.c: 389:     BAUDCTLbits.BRG16 = 1;
  1795  03F9  1683               	bsf	3,5	;RP0=1, select bank3
  1796  03FA  1703               	bsf	3,6	;RP1=1, select bank3
  1797  03FB  1587               	bsf	7,3	;volatile
  1798  03FC                     l1609:
  1799                           
  1800                           ;master_main.c: 391:     SPBRG = 207;
  1801  03FC  30CF               	movlw	207
  1802  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  1803  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  1804  03FF  0099               	movwf	25	;volatile
  1805  0400                     l1611:
  1806                           
  1807                           ;master_main.c: 392:     SPBRGH = 0;
  1808  0400  019A               	clrf	26	;volatile
  1809  0401                     l1613:
  1810                           
  1811                           ;master_main.c: 394:     RCSTAbits.SPEN = 1;
  1812  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0403  1798               	bsf	24,7	;volatile
  1815  0404                     l1615:
  1816                           
  1817                           ;master_main.c: 395:     RCSTAbits.RX9 = 0;
  1818  0404  1318               	bcf	24,6	;volatile
  1819  0405                     l1617:
  1820                           
  1821                           ;master_main.c: 396:     RCSTAbits.CREN = 1;
  1822  0405  1618               	bsf	24,4	;volatile
  1823  0406                     l1619:
  1824                           
  1825                           ;master_main.c: 398:     TXSTAbits.TXEN = 1;
  1826  0406  1683               	bsf	3,5	;RP0=1, select bank1
  1827  0407  1303               	bcf	3,6	;RP1=0, select bank1
  1828  0408  1698               	bsf	24,5	;volatile
  1829  0409                     l1621:
  1830                           
  1831                           ;master_main.c: 401:     OPTION_REGbits.T0CS = 0;
  1832  0409  1281               	bcf	1,5	;volatile
  1833  040A                     l1623:
  1834                           
  1835                           ;master_main.c: 402:     OPTION_REGbits.PSA = 0;
  1836  040A  1181               	bcf	1,3	;volatile
  1837  040B                     l1625:
  1838                           
  1839                           ;master_main.c: 403:     OPTION_REGbits.PS2 = 1;
  1840  040B  1501               	bsf	1,2	;volatile
  1841  040C                     l1627:
  1842                           
  1843                           ;master_main.c: 404:     OPTION_REGbits.PS1 = 1;
  1844  040C  1481               	bsf	1,1	;volatile
  1845  040D                     l1629:
  1846                           
  1847                           ;master_main.c: 405:     OPTION_REGbits.PS0 = 1;
  1848  040D  1401               	bsf	1,0	;volatile
  1849  040E                     l1631:
  1850                           
  1851                           ;master_main.c: 406:     TMR0 = 248;
  1852  040E  30F8               	movlw	248
  1853  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0411  0081               	movwf	1	;volatile
  1856  0412                     l1633:
  1857                           
  1858                           ;master_main.c: 408:    I2C_Master_Init(100000);
  1859  0412  3000               	movlw	0
  1860  0413  00CB               	movwf	I2C_Master_Init@c+3
  1861  0414  3001               	movlw	1
  1862  0415  00CA               	movwf	I2C_Master_Init@c+2
  1863  0416  3086               	movlw	134
  1864  0417  00C9               	movwf	I2C_Master_Init@c+1
  1865  0418  30A0               	movlw	160
  1866  0419  00C8               	movwf	I2C_Master_Init@c
  1867  041A  120A  118A  25FE  120A  118A  	fcall	_I2C_Master_Init
  1868  041F                     l207:
  1869  041F  0008               	return
  1870  0420                     __end_of_setup:
  1871                           
  1872                           	psect	text2
  1873  05FE                     __ptext2:	
  1874 ;; *************** function _I2C_Master_Init *****************
  1875 ;; Defined at:
  1876 ;;		line 16 in file "I2C.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  c               4   14[BANK0 ] const unsigned long 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       4       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       4       0       0       0
  1893 ;;      Totals:         0       8       0       0       0
  1894 ;;Total ram usage:        8 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    3
  1897 ;; This function calls:
  1898 ;;		___lldiv
  1899 ;; This function is called by:
  1900 ;;		_setup
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _I2C_Master_Init
  1906  05FE                     _I2C_Master_Init:
  1907  05FE                     l1475:	
  1908                           ;incstack = 0
  1909                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1910                           
  1911                           
  1912                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1913  05FE  3028               	movlw	40
  1914  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0601  0094               	movwf	20	;volatile
  1917  0602                     l1477:
  1918                           
  1919                           ;I2C.c: 19:     SSPCON2 = 0;
  1920  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1922  0604  0191               	clrf	17	;volatile
  1923  0605                     l1479:
  1924                           
  1925                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1926  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0607  0848               	movf	I2C_Master_Init@c,w
  1929  0608  00CC               	movwf	??_I2C_Master_Init
  1930  0609  0849               	movf	I2C_Master_Init@c+1,w
  1931  060A  00CD               	movwf	??_I2C_Master_Init+1
  1932  060B  084A               	movf	I2C_Master_Init@c+2,w
  1933  060C  00CE               	movwf	??_I2C_Master_Init+2
  1934  060D  084B               	movf	I2C_Master_Init@c+3,w
  1935  060E  00CF               	movwf	??_I2C_Master_Init+3
  1936  060F  3002               	movlw	2
  1937  0610                     u695:
  1938  0610  1003               	clrc
  1939  0611  0DCC               	rlf	??_I2C_Master_Init,f
  1940  0612  0DCD               	rlf	??_I2C_Master_Init+1,f
  1941  0613  0DCE               	rlf	??_I2C_Master_Init+2,f
  1942  0614  0DCF               	rlf	??_I2C_Master_Init+3,f
  1943  0615                     u690:
  1944  0615  3EFF               	addlw	-1
  1945  0616  1D03               	skipz
  1946  0617  2E10               	goto	u695
  1947  0618  084F               	movf	??_I2C_Master_Init+3,w
  1948  0619  00BD               	movwf	___lldiv@divisor+3
  1949  061A  084E               	movf	??_I2C_Master_Init+2,w
  1950  061B  00BC               	movwf	___lldiv@divisor+2
  1951  061C  084D               	movf	??_I2C_Master_Init+1,w
  1952  061D  00BB               	movwf	___lldiv@divisor+1
  1953  061E  084C               	movf	??_I2C_Master_Init,w
  1954  061F  00BA               	movwf	___lldiv@divisor
  1955  0620  3000               	movlw	0
  1956  0621  00C1               	movwf	___lldiv@dividend+3
  1957  0622  307A               	movlw	122
  1958  0623  00C0               	movwf	___lldiv@dividend+2
  1959  0624  3012               	movlw	18
  1960  0625  00BF               	movwf	___lldiv@dividend+1
  1961  0626  3000               	movlw	0
  1962  0627  00BE               	movwf	___lldiv@dividend
  1963  0628  120A  118A  2489  120A  118A  	fcall	___lldiv
  1964  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1965  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1966  062F  083A               	movf	?___lldiv,w
  1967  0630  3EFF               	addlw	255
  1968  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0633  0093               	movwf	19	;volatile
  1971  0634                     l1481:
  1972                           
  1973                           ;I2C.c: 21:     SSPSTAT = 0;
  1974  0634  0194               	clrf	20	;volatile
  1975  0635                     l1483:
  1976                           
  1977                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1978  0635  1587               	bsf	7,3	;volatile
  1979  0636                     l1485:
  1980                           
  1981                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1982  0636  1607               	bsf	7,4	;volatile
  1983  0637                     l277:
  1984  0637  0008               	return
  1985  0638                     __end_of_I2C_Master_Init:
  1986                           
  1987                           	psect	text3
  1988  0489                     __ptext3:	
  1989 ;; *************** function ___lldiv *****************
  1990 ;; Defined at:
  1991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  divisor         4    0[BANK0 ] unsigned long 
  1994 ;;  dividend        4    4[BANK0 ] unsigned long 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  quotient        4    9[BANK0 ] unsigned long 
  1997 ;;  counter         1   13[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  4    0[BANK0 ] unsigned long 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       8       0       0       0
  2008 ;;      Locals:         0       5       0       0       0
  2009 ;;      Temps:          0       1       0       0       0
  2010 ;;      Totals:         0      14       0       0       0
  2011 ;;Total ram usage:       14 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    2
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_I2C_Master_Init
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function ___lldiv
  2023  0489                     ___lldiv:
  2024  0489                     l1439:	
  2025                           ;incstack = 0
  2026                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2027                           
  2028  0489  3000               	movlw	0
  2029  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2030  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2031  048C  00C6               	movwf	___lldiv@quotient+3
  2032  048D  3000               	movlw	0
  2033  048E  00C5               	movwf	___lldiv@quotient+2
  2034  048F  3000               	movlw	0
  2035  0490  00C4               	movwf	___lldiv@quotient+1
  2036  0491  3000               	movlw	0
  2037  0492  00C3               	movwf	___lldiv@quotient
  2038  0493  083D               	movf	___lldiv@divisor+3,w
  2039  0494  043C               	iorwf	___lldiv@divisor+2,w
  2040  0495  043B               	iorwf	___lldiv@divisor+1,w
  2041  0496  043A               	iorwf	___lldiv@divisor,w
  2042  0497  1903               	skipnz
  2043  0498  2C9A               	goto	u621
  2044  0499  2C9B               	goto	u620
  2045  049A                     u621:
  2046  049A  2CE8               	goto	l1459
  2047  049B                     u620:
  2048  049B                     l1441:
  2049  049B  01C7               	clrf	___lldiv@counter
  2050  049C  0AC7               	incf	___lldiv@counter,f
  2051  049D  2CAB               	goto	l1445
  2052  049E                     l1443:
  2053  049E  3001               	movlw	1
  2054  049F  00C2               	movwf	??___lldiv
  2055  04A0                     u635:
  2056  04A0  1003               	clrc
  2057  04A1  0DBA               	rlf	___lldiv@divisor,f
  2058  04A2  0DBB               	rlf	___lldiv@divisor+1,f
  2059  04A3  0DBC               	rlf	___lldiv@divisor+2,f
  2060  04A4  0DBD               	rlf	___lldiv@divisor+3,f
  2061  04A5  0BC2               	decfsz	??___lldiv,f
  2062  04A6  2CA0               	goto	u635
  2063  04A7  3001               	movlw	1
  2064  04A8  00C2               	movwf	??___lldiv
  2065  04A9  0842               	movf	??___lldiv,w
  2066  04AA  07C7               	addwf	___lldiv@counter,f
  2067  04AB                     l1445:
  2068  04AB  1FBD               	btfss	___lldiv@divisor+3,7
  2069  04AC  2CAE               	goto	u641
  2070  04AD  2CAF               	goto	u640
  2071  04AE                     u641:
  2072  04AE  2C9E               	goto	l1443
  2073  04AF                     u640:
  2074  04AF                     l1447:
  2075  04AF  3001               	movlw	1
  2076  04B0  00C2               	movwf	??___lldiv
  2077  04B1                     u655:
  2078  04B1  1003               	clrc
  2079  04B2  0DC3               	rlf	___lldiv@quotient,f
  2080  04B3  0DC4               	rlf	___lldiv@quotient+1,f
  2081  04B4  0DC5               	rlf	___lldiv@quotient+2,f
  2082  04B5  0DC6               	rlf	___lldiv@quotient+3,f
  2083  04B6  0BC2               	decfsz	??___lldiv,f
  2084  04B7  2CB1               	goto	u655
  2085  04B8                     l1449:
  2086  04B8  083D               	movf	___lldiv@divisor+3,w
  2087  04B9  0241               	subwf	___lldiv@dividend+3,w
  2088  04BA  1D03               	skipz
  2089  04BB  2CC6               	goto	u665
  2090  04BC  083C               	movf	___lldiv@divisor+2,w
  2091  04BD  0240               	subwf	___lldiv@dividend+2,w
  2092  04BE  1D03               	skipz
  2093  04BF  2CC6               	goto	u665
  2094  04C0  083B               	movf	___lldiv@divisor+1,w
  2095  04C1  023F               	subwf	___lldiv@dividend+1,w
  2096  04C2  1D03               	skipz
  2097  04C3  2CC6               	goto	u665
  2098  04C4  083A               	movf	___lldiv@divisor,w
  2099  04C5  023E               	subwf	___lldiv@dividend,w
  2100  04C6                     u665:
  2101  04C6  1C03               	skipc
  2102  04C7  2CC9               	goto	u661
  2103  04C8  2CCA               	goto	u660
  2104  04C9                     u661:
  2105  04C9  2CD9               	goto	l1455
  2106  04CA                     u660:
  2107  04CA                     l1451:
  2108  04CA  083A               	movf	___lldiv@divisor,w
  2109  04CB  02BE               	subwf	___lldiv@dividend,f
  2110  04CC  083B               	movf	___lldiv@divisor+1,w
  2111  04CD  1C03               	skipc
  2112  04CE  0F3B               	incfsz	___lldiv@divisor+1,w
  2113  04CF  02BF               	subwf	___lldiv@dividend+1,f
  2114  04D0  083C               	movf	___lldiv@divisor+2,w
  2115  04D1  1C03               	skipc
  2116  04D2  0F3C               	incfsz	___lldiv@divisor+2,w
  2117  04D3  02C0               	subwf	___lldiv@dividend+2,f
  2118  04D4  083D               	movf	___lldiv@divisor+3,w
  2119  04D5  1C03               	skipc
  2120  04D6  0F3D               	incfsz	___lldiv@divisor+3,w
  2121  04D7  02C1               	subwf	___lldiv@dividend+3,f
  2122  04D8                     l1453:
  2123  04D8  1443               	bsf	___lldiv@quotient,0
  2124  04D9                     l1455:
  2125  04D9  3001               	movlw	1
  2126  04DA                     u675:
  2127  04DA  1003               	clrc
  2128  04DB  0CBD               	rrf	___lldiv@divisor+3,f
  2129  04DC  0CBC               	rrf	___lldiv@divisor+2,f
  2130  04DD  0CBB               	rrf	___lldiv@divisor+1,f
  2131  04DE  0CBA               	rrf	___lldiv@divisor,f
  2132  04DF  3EFF               	addlw	-1
  2133  04E0  1D03               	skipz
  2134  04E1  2CDA               	goto	u675
  2135  04E2                     l1457:
  2136  04E2  3001               	movlw	1
  2137  04E3  02C7               	subwf	___lldiv@counter,f
  2138  04E4  1D03               	btfss	3,2
  2139  04E5  2CE7               	goto	u681
  2140  04E6  2CE8               	goto	u680
  2141  04E7                     u681:
  2142  04E7  2CAF               	goto	l1447
  2143  04E8                     u680:
  2144  04E8                     l1459:
  2145  04E8  0846               	movf	___lldiv@quotient+3,w
  2146  04E9  00BD               	movwf	?___lldiv+3
  2147  04EA  0845               	movf	___lldiv@quotient+2,w
  2148  04EB  00BC               	movwf	?___lldiv+2
  2149  04EC  0844               	movf	___lldiv@quotient+1,w
  2150  04ED  00BB               	movwf	?___lldiv+1
  2151  04EE  0843               	movf	___lldiv@quotient,w
  2152  04EF  00BA               	movwf	?___lldiv
  2153  04F0                     l425:
  2154  04F0  0008               	return
  2155  04F1                     __end_of___lldiv:
  2156                           
  2157                           	psect	text4
  2158  066A                     __ptext4:	
  2159 ;; *************** function _Lcd_Write_String *****************
  2160 ;; Defined at:
  2161 ;;		line 77 in file "LCD.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  a               1    wreg     PTR unsigned char 
  2164 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(4), 
  2165 ;;		 -> STR_6(2), STR_5(4), STR_4(2), STR_3(4), 
  2166 ;;		 -> STR_2(2), STR_1(4), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  a               1    7[BANK0 ] PTR unsigned char 
  2169 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(4), 
  2170 ;;		 -> STR_6(2), STR_5(4), STR_4(2), STR_3(4), 
  2171 ;;		 -> STR_2(2), STR_1(4), 
  2172 ;;  i               2    5[BANK0 ] int 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2182 ;;      Params:         0       0       0       0       0
  2183 ;;      Locals:         0       3       0       0       0
  2184 ;;      Temps:          0       0       0       0       0
  2185 ;;      Totals:         0       3       0       0       0
  2186 ;;Total ram usage:        3 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    4
  2189 ;; This function calls:
  2190 ;;		_Lcd_Write_Char
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _Lcd_Write_String
  2198  066A                     _Lcd_Write_String:
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2202                           ;Lcd_Write_String@a stored from wreg
  2203  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2204  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2205  066C  00C1               	movwf	Lcd_Write_String@a
  2206  066D                     l1711:
  2207                           
  2208                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2209  066D  01BF               	clrf	Lcd_Write_String@i
  2210  066E  01C0               	clrf	Lcd_Write_String@i+1
  2211  066F  2E85               	goto	l1717
  2212  0670                     l1713:
  2213                           
  2214                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2215  0670  083F               	movf	Lcd_Write_String@i,w
  2216  0671  0741               	addwf	Lcd_Write_String@a,w
  2217  0672  0084               	movwf	4
  2218  0673  120A  118A  2700  120A  118A  	fcall	stringdir
  2219  0678  120A  118A  26B8  120A  118A  	fcall	_Lcd_Write_Char
  2220  067D                     l1715:
  2221  067D  3001               	movlw	1
  2222  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2223  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0680  07BF               	addwf	Lcd_Write_String@i,f
  2225  0681  1803               	skipnc
  2226  0682  0AC0               	incf	Lcd_Write_String@i+1,f
  2227  0683  3000               	movlw	0
  2228  0684  07C0               	addwf	Lcd_Write_String@i+1,f
  2229  0685                     l1717:
  2230  0685  083F               	movf	Lcd_Write_String@i,w
  2231  0686  0741               	addwf	Lcd_Write_String@a,w
  2232  0687  0084               	movwf	4
  2233  0688  120A  118A  2700  120A  118A  	fcall	stringdir
  2234  068D  3A00               	xorlw	0
  2235  068E  1D03               	skipz
  2236  068F  2E91               	goto	u901
  2237  0690  2E92               	goto	u900
  2238  0691                     u901:
  2239  0691  2E70               	goto	l1713
  2240  0692                     u900:
  2241  0692                     l242:
  2242  0692  0008               	return
  2243  0693                     __end_of_Lcd_Write_String:
  2244                           
  2245                           	psect	text5
  2246  06B8                     __ptext5:	
  2247 ;; *************** function _Lcd_Write_Char *****************
  2248 ;; Defined at:
  2249 ;;		line 65 in file "LCD.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  a               1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  a               1    2[BANK0 ] unsigned char 
  2254 ;;  y               1    4[BANK0 ] unsigned char 
  2255 ;;  temp            1    3[BANK0 ] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       3       0       0       0
  2267 ;;      Temps:          0       1       0       0       0
  2268 ;;      Totals:         0       4       0       0       0
  2269 ;;Total ram usage:        4 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		_Lcd_Port
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;;		_Lcd_Write_String
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _Lcd_Write_Char
  2282  06B8                     _Lcd_Write_Char:
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2286                           ;Lcd_Write_Char@a stored from wreg
  2287  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2288  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2289  06BA  00BC               	movwf	Lcd_Write_Char@a
  2290  06BB                     l1463:
  2291                           
  2292                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2293  06BB  083C               	movf	Lcd_Write_Char@a,w
  2294  06BC  00BB               	movwf	??_Lcd_Write_Char
  2295  06BD  083B               	movf	??_Lcd_Write_Char,w
  2296  06BE  00BD               	movwf	Lcd_Write_Char@temp
  2297                           
  2298                           ;LCD.c: 68:     y = temp;
  2299  06BF  083D               	movf	Lcd_Write_Char@temp,w
  2300  06C0  00BB               	movwf	??_Lcd_Write_Char
  2301  06C1  083B               	movf	??_Lcd_Write_Char,w
  2302  06C2  00BE               	movwf	Lcd_Write_Char@y
  2303  06C3                     l1465:
  2304                           
  2305                           ;LCD.c: 69:     RE0 = 1;
  2306  06C3  1409               	bsf	9,0	;volatile
  2307  06C4                     l1467:
  2308                           
  2309                           ;LCD.c: 70:     Lcd_Port(y);
  2310  06C4  083E               	movf	Lcd_Write_Char@y,w
  2311  06C5  120A  118A  2782  120A  118A  	fcall	_Lcd_Port
  2312  06CA                     l1469:
  2313                           
  2314                           ;LCD.c: 71:     RE1 = 1;
  2315  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2316  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2317  06CC  1489               	bsf	9,1	;volatile
  2318  06CD                     l1471:
  2319                           
  2320                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2321  06CD  300C               	movlw	12
  2322  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2323  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2324  06D0  00BB               	movwf	??_Lcd_Write_Char
  2325  06D1                     u1407:
  2326  06D1  0BBB               	decfsz	??_Lcd_Write_Char,f
  2327  06D2  2ED1               	goto	u1407
  2328  06D3  0000               	nop
  2329  06D4                     l1473:
  2330                           
  2331                           ;LCD.c: 73:     RE1 = 0;
  2332  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2333  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  2334  06D6  1089               	bcf	9,1	;volatile
  2335  06D7                     l236:
  2336  06D7  0008               	return
  2337  06D8                     __end_of_Lcd_Write_Char:
  2338                           
  2339                           	psect	text6
  2340  0558                     __ptext6:	
  2341 ;; *************** function _Lcd_Set_Cursor *****************
  2342 ;; Defined at:
  2343 ;;		line 30 in file "LCD.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  a               1    wreg     unsigned char 
  2346 ;;  b               1    4[BANK0 ] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  a               1    7[BANK0 ] unsigned char 
  2349 ;;  temp            1   10[BANK0 ] unsigned char 
  2350 ;;  y               1    9[BANK0 ] unsigned char 
  2351 ;;  z               1    8[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       1       0       0       0
  2362 ;;      Locals:         0       4       0       0       0
  2363 ;;      Temps:          0       2       0       0       0
  2364 ;;      Totals:         0       7       0       0       0
  2365 ;;Total ram usage:        7 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    4
  2368 ;; This function calls:
  2369 ;;		_Lcd_Cmd
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _Lcd_Set_Cursor
  2377  0558                     _Lcd_Set_Cursor:
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2381                           ;Lcd_Set_Cursor@a stored from wreg
  2382  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2384  055A  00C1               	movwf	Lcd_Set_Cursor@a
  2385  055B                     l1691:
  2386                           
  2387                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2388  055B  0341               	decf	Lcd_Set_Cursor@a,w
  2389  055C  1D03               	btfss	3,2
  2390  055D  2D5F               	goto	u861
  2391  055E  2D60               	goto	u860
  2392  055F                     u861:
  2393  055F  2D85               	goto	l1701
  2394  0560                     u860:
  2395  0560                     l1693:
  2396                           
  2397                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2398  0560  083E               	movf	Lcd_Set_Cursor@b,w
  2399  0561  3E7F               	addlw	127
  2400  0562  00BF               	movwf	??_Lcd_Set_Cursor
  2401  0563  083F               	movf	??_Lcd_Set_Cursor,w
  2402  0564  00C4               	movwf	Lcd_Set_Cursor@temp
  2403                           
  2404                           ;LCD.c: 34:         z = temp >> 4;
  2405  0565  0844               	movf	Lcd_Set_Cursor@temp,w
  2406  0566  00BF               	movwf	??_Lcd_Set_Cursor
  2407  0567  3004               	movlw	4
  2408  0568                     u875:
  2409  0568  1003               	clrc
  2410  0569  0CBF               	rrf	??_Lcd_Set_Cursor,f
  2411  056A  3EFF               	addlw	-1
  2412  056B  1D03               	skipz
  2413  056C  2D68               	goto	u875
  2414  056D  083F               	movf	??_Lcd_Set_Cursor,w
  2415  056E  00C0               	movwf	??_Lcd_Set_Cursor+1
  2416  056F  0840               	movf	??_Lcd_Set_Cursor+1,w
  2417  0570  00C2               	movwf	Lcd_Set_Cursor@z
  2418  0571                     l1695:
  2419                           
  2420                           ;LCD.c: 35:         y = temp & 0x0F;
  2421  0571  0844               	movf	Lcd_Set_Cursor@temp,w
  2422  0572  390F               	andlw	15
  2423  0573  00BF               	movwf	??_Lcd_Set_Cursor
  2424  0574  083F               	movf	??_Lcd_Set_Cursor,w
  2425  0575  00C3               	movwf	Lcd_Set_Cursor@y
  2426  0576                     l1697:
  2427                           
  2428                           ;LCD.c: 36:         Lcd_Cmd(z);
  2429  0576  0842               	movf	Lcd_Set_Cursor@z,w
  2430  0577  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2431  057C                     l1699:
  2432                           
  2433                           ;LCD.c: 37:         Lcd_Cmd(y);
  2434  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2435  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2436  057E  0843               	movf	Lcd_Set_Cursor@y,w
  2437  057F  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2438                           
  2439                           ;LCD.c: 38:     } else if (a == 2) {
  2440  0584  2DAF               	goto	l230
  2441  0585                     l1701:
  2442  0585  3002               	movlw	2
  2443  0586  0641               	xorwf	Lcd_Set_Cursor@a,w
  2444  0587  1D03               	btfss	3,2
  2445  0588  2D8A               	goto	u881
  2446  0589  2D8B               	goto	u880
  2447  058A                     u881:
  2448  058A  2DAF               	goto	l230
  2449  058B                     u880:
  2450  058B                     l1703:
  2451                           
  2452                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2453  058B  083E               	movf	Lcd_Set_Cursor@b,w
  2454  058C  3EBF               	addlw	191
  2455  058D  00BF               	movwf	??_Lcd_Set_Cursor
  2456  058E  083F               	movf	??_Lcd_Set_Cursor,w
  2457  058F  00C4               	movwf	Lcd_Set_Cursor@temp
  2458                           
  2459                           ;LCD.c: 40:         z = temp >> 4;
  2460  0590  0844               	movf	Lcd_Set_Cursor@temp,w
  2461  0591  00BF               	movwf	??_Lcd_Set_Cursor
  2462  0592  3004               	movlw	4
  2463  0593                     u895:
  2464  0593  1003               	clrc
  2465  0594  0CBF               	rrf	??_Lcd_Set_Cursor,f
  2466  0595  3EFF               	addlw	-1
  2467  0596  1D03               	skipz
  2468  0597  2D93               	goto	u895
  2469  0598  083F               	movf	??_Lcd_Set_Cursor,w
  2470  0599  00C0               	movwf	??_Lcd_Set_Cursor+1
  2471  059A  0840               	movf	??_Lcd_Set_Cursor+1,w
  2472  059B  00C2               	movwf	Lcd_Set_Cursor@z
  2473  059C                     l1705:
  2474                           
  2475                           ;LCD.c: 41:         y = temp & 0xF0;
  2476  059C  0844               	movf	Lcd_Set_Cursor@temp,w
  2477  059D  39F0               	andlw	240
  2478  059E  00BF               	movwf	??_Lcd_Set_Cursor
  2479  059F  083F               	movf	??_Lcd_Set_Cursor,w
  2480  05A0  00C3               	movwf	Lcd_Set_Cursor@y
  2481  05A1                     l1707:
  2482                           
  2483                           ;LCD.c: 42:         Lcd_Cmd(z);
  2484  05A1  0842               	movf	Lcd_Set_Cursor@z,w
  2485  05A2  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2486  05A7                     l1709:
  2487                           
  2488                           ;LCD.c: 43:         Lcd_Cmd(y);
  2489  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2490  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2491  05A9  0843               	movf	Lcd_Set_Cursor@y,w
  2492  05AA  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2493  05AF                     l230:
  2494  05AF  0008               	return
  2495  05B0                     __end_of_Lcd_Set_Cursor:
  2496                           
  2497                           	psect	text7
  2498  05B0                     __ptext7:	
  2499 ;; *************** function _Lcd_Init *****************
  2500 ;; Defined at:
  2501 ;;		line 47 in file "LCD.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       2       0       0       0
  2518 ;;      Totals:         0       2       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    4
  2522 ;; This function calls:
  2523 ;;		_Lcd_Cmd
  2524 ;;		_Lcd_Port
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _Lcd_Init
  2532  05B0                     _Lcd_Init:
  2533  05B0                     l1635:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2536                           
  2537                           
  2538                           ;LCD.c: 48:     Lcd_Port(0x00);
  2539  05B0  3000               	movlw	0
  2540  05B1  120A  118A  2782  120A  118A  	fcall	_Lcd_Port
  2541  05B6                     l1637:
  2542                           
  2543                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2544  05B6  301A               	movlw	26
  2545  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2546  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2547  05B9  00BF               	movwf	??_Lcd_Init+1
  2548  05BA  30F7               	movlw	247
  2549  05BB  00BE               	movwf	??_Lcd_Init
  2550  05BC                     u1417:
  2551  05BC  0BBE               	decfsz	??_Lcd_Init,f
  2552  05BD  2DBC               	goto	u1417
  2553  05BE  0BBF               	decfsz	??_Lcd_Init+1,f
  2554  05BF  2DBC               	goto	u1417
  2555  05C0  2DC1               	nop2
  2556  05C1                     l1639:
  2557                           
  2558                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2559  05C1  3030               	movlw	48
  2560  05C2  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2561                           
  2562                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2563  05C7  3007               	movlw	7
  2564  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2565  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2566  05CA  00BF               	movwf	??_Lcd_Init+1
  2567  05CB  307C               	movlw	124
  2568  05CC  00BE               	movwf	??_Lcd_Init
  2569  05CD                     u1427:
  2570  05CD  0BBE               	decfsz	??_Lcd_Init,f
  2571  05CE  2DCD               	goto	u1427
  2572  05CF  0BBF               	decfsz	??_Lcd_Init+1,f
  2573  05D0  2DCD               	goto	u1427
  2574  05D1  0000               	nop
  2575  05D2                     l1641:
  2576                           
  2577                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2578  05D2  3030               	movlw	48
  2579  05D3  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2580  05D8                     l1643:
  2581                           
  2582                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2583  05D8  3041               	movlw	65
  2584  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2585  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2586  05DB  00BE               	movwf	??_Lcd_Init
  2587  05DC                     u1437:
  2588  05DC  0BBE               	decfsz	??_Lcd_Init,f
  2589  05DD  2DDC               	goto	u1437
  2590  05DE  2DDF               	nop2
  2591                           
  2592                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2593  05DF  3030               	movlw	48
  2594  05E0  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2595                           
  2596                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2597  05E5  303C               	movlw	60
  2598  05E6  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2599                           
  2600                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2601  05EB  3008               	movlw	8
  2602  05EC  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2603                           
  2604                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2605  05F1  3001               	movlw	1
  2606  05F2  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2607                           
  2608                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2609  05F7  3006               	movlw	6
  2610  05F8  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2611  05FD                     l233:
  2612  05FD  0008               	return
  2613  05FE                     __end_of_Lcd_Init:
  2614                           
  2615                           	psect	text8
  2616  0744                     __ptext8:	
  2617 ;; *************** function _Lcd_Clear *****************
  2618 ;; Defined at:
  2619 ;;		line 25 in file "LCD.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    4
  2640 ;; This function calls:
  2641 ;;		_Lcd_Cmd
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _Lcd_Clear
  2649  0744                     _Lcd_Clear:
  2650  0744                     l1689:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2653                           
  2654                           
  2655                           ;LCD.c: 26:     Lcd_Cmd(0);
  2656  0744  3000               	movlw	0
  2657  0745  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2658                           
  2659                           ;LCD.c: 27:     Lcd_Cmd(1);
  2660  074A  3001               	movlw	1
  2661  074B  120A  118A  26D8  120A  118A  	fcall	_Lcd_Cmd
  2662  0750                     l224:
  2663  0750  0008               	return
  2664  0751                     __end_of_Lcd_Clear:
  2665                           
  2666                           	psect	text9
  2667  06D8                     __ptext9:	
  2668 ;; *************** function _Lcd_Cmd *****************
  2669 ;; Defined at:
  2670 ;;		line 17 in file "LCD.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  a               1    wreg     unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  a               1    3[BANK0 ] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         0       1       0       0       0
  2686 ;;      Temps:          0       2       0       0       0
  2687 ;;      Totals:         0       3       0       0       0
  2688 ;;Total ram usage:        3 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    3
  2691 ;; This function calls:
  2692 ;;		_Lcd_Port
  2693 ;; This function is called by:
  2694 ;;		_Lcd_Clear
  2695 ;;		_Lcd_Set_Cursor
  2696 ;;		_Lcd_Init
  2697 ;;		_Lcd_Shift_Right
  2698 ;;		_Lcd_Shift_Left
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _Lcd_Cmd
  2704  06D8                     _Lcd_Cmd:
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2708                           ;Lcd_Cmd@a stored from wreg
  2709  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2710  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2711  06DA  00BD               	movwf	Lcd_Cmd@a
  2712  06DB                     l1487:
  2713                           
  2714                           ;LCD.c: 18:     RE0 = 0;
  2715  06DB  1009               	bcf	9,0	;volatile
  2716  06DC                     l1489:
  2717                           
  2718                           ;LCD.c: 19:     Lcd_Port(a);
  2719  06DC  083D               	movf	Lcd_Cmd@a,w
  2720  06DD  120A  118A  2782  120A  118A  	fcall	_Lcd_Port
  2721  06E2                     l1491:
  2722                           
  2723                           ;LCD.c: 20:     RE1 = 1;
  2724  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2725  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2726  06E4  1489               	bsf	9,1	;volatile
  2727  06E5                     l1493:
  2728                           
  2729                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2730  06E5  3006               	movlw	6
  2731  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2732  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2733  06E8  00BC               	movwf	??_Lcd_Cmd+1
  2734  06E9  302F               	movlw	47
  2735  06EA  00BB               	movwf	??_Lcd_Cmd
  2736  06EB                     u1447:
  2737  06EB  0BBB               	decfsz	??_Lcd_Cmd,f
  2738  06EC  2EEB               	goto	u1447
  2739  06ED  0BBC               	decfsz	??_Lcd_Cmd+1,f
  2740  06EE  2EEB               	goto	u1447
  2741  06EF  2EF0               	nop2
  2742  06F0                     l1495:
  2743                           
  2744                           ;LCD.c: 22:     RE1 = 0;
  2745  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2746  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2747  06F2  1089               	bcf	9,1	;volatile
  2748  06F3                     l221:
  2749  06F3  0008               	return
  2750  06F4                     __end_of_Lcd_Cmd:
  2751                           
  2752                           	psect	text10
  2753  0782                     __ptext10:	
  2754 ;; *************** function _Lcd_Port *****************
  2755 ;; Defined at:
  2756 ;;		line 12 in file "LCD.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  a               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  a               1    0[BANK0 ] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         0       1       0       0       0
  2772 ;;      Temps:          0       0       0       0       0
  2773 ;;      Totals:         0       1       0       0       0
  2774 ;;Total ram usage:        1 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    2
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_Lcd_Cmd
  2781 ;;		_Lcd_Init
  2782 ;;		_Lcd_Write_Char
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _Lcd_Port
  2788  0782                     _Lcd_Port:
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _Lcd_Port: [wreg]
  2792                           ;Lcd_Port@a stored from wreg
  2793  0782  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0783  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0784  00BA               	movwf	Lcd_Port@a
  2796  0785                     l1437:
  2797                           
  2798                           ;LCD.c: 13:     PORTD = a;
  2799  0785  083A               	movf	Lcd_Port@a,w
  2800  0786  0088               	movwf	8	;volatile
  2801  0787                     l218:
  2802  0787  0008               	return
  2803  0788                     __end_of_Lcd_Port:
  2804                           
  2805                           	psect	text11
  2806  075E                     __ptext11:	
  2807 ;; *************** function _I2C_Master_Write *****************
  2808 ;; Defined at:
  2809 ;;		line 65 in file "I2C.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  d               2    0[BANK0 ] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       2       0       0       0
  2824 ;;      Locals:         0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       2       0       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    3
  2830 ;; This function calls:
  2831 ;;		_I2C_Master_Wait
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _I2C_Master_Write
  2839  075E                     _I2C_Master_Write:
  2840  075E                     l1649:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2843                           
  2844                           
  2845                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2846  075E  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  2847  0763                     l1651:
  2848                           
  2849                           ;I2C.c: 68:     SSPBUF = d;
  2850  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0765  083A               	movf	I2C_Master_Write@d,w
  2853  0766  0093               	movwf	19	;volatile
  2854  0767                     l295:
  2855  0767  0008               	return
  2856  0768                     __end_of_I2C_Master_Write:
  2857                           
  2858                           	psect	text12
  2859  0768                     __ptext12:	
  2860 ;; *************** function _I2C_Master_Stop *****************
  2861 ;; Defined at:
  2862 ;;		line 55 in file "I2C.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    3
  2883 ;; This function calls:
  2884 ;;		_I2C_Master_Wait
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _I2C_Master_Stop
  2892  0768                     _I2C_Master_Stop:
  2893  0768                     l1669:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2896                           
  2897                           
  2898                           ;I2C.c: 57:     I2C_Master_Wait();
  2899  0768  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  2900  076D                     l1671:
  2901                           
  2902                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2903  076D  1683               	bsf	3,5	;RP0=1, select bank1
  2904  076E  1303               	bcf	3,6	;RP1=0, select bank1
  2905  076F  1511               	bsf	17,2	;volatile
  2906  0770                     l292:
  2907  0770  0008               	return
  2908  0771                     __end_of_I2C_Master_Stop:
  2909                           
  2910                           	psect	text13
  2911  0771                     __ptext13:	
  2912 ;; *************** function _I2C_Master_Start *****************
  2913 ;; Defined at:
  2914 ;;		line 39 in file "I2C.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    3
  2935 ;; This function calls:
  2936 ;;		_I2C_Master_Wait
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _I2C_Master_Start
  2944  0771                     _I2C_Master_Start:
  2945  0771                     l1645:	
  2946                           ;incstack = 0
  2947                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2948                           
  2949                           
  2950                           ;I2C.c: 41:     I2C_Master_Wait();
  2951  0771  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  2952  0776                     l1647:
  2953                           
  2954                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2955  0776  1683               	bsf	3,5	;RP0=1, select bank1
  2956  0777  1303               	bcf	3,6	;RP1=0, select bank1
  2957  0778  1411               	bsf	17,0	;volatile
  2958  0779                     l286:
  2959  0779  0008               	return
  2960  077A                     __end_of_I2C_Master_Start:
  2961                           
  2962                           	psect	text14
  2963  0638                     __ptext14:	
  2964 ;; *************** function _I2C_Master_Read *****************
  2965 ;; Defined at:
  2966 ;;		line 74 in file "I2C.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  a               2    0[BANK0 ] unsigned short 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  temp            2    4[BANK0 ] unsigned short 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2    0[BANK0 ] unsigned short 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       2       0       0       0
  2981 ;;      Locals:         0       2       0       0       0
  2982 ;;      Temps:          0       2       0       0       0
  2983 ;;      Totals:         0       6       0       0       0
  2984 ;;Total ram usage:        6 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    3
  2987 ;; This function calls:
  2988 ;;		_I2C_Master_Wait
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _I2C_Master_Read
  2996  0638                     _I2C_Master_Read:
  2997  0638                     l1653:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3000                           
  3001                           
  3002                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3003  0638  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  3004  063D                     l1655:
  3005                           
  3006                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3007  063D  1683               	bsf	3,5	;RP0=1, select bank1
  3008  063E  1303               	bcf	3,6	;RP1=0, select bank1
  3009  063F  1591               	bsf	17,3	;volatile
  3010                           
  3011                           ;I2C.c: 79:     I2C_Master_Wait();
  3012  0640  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  3013  0645                     l1657:
  3014                           
  3015                           ;I2C.c: 80:     temp = SSPBUF;
  3016  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0647  0813               	movf	19,w	;volatile
  3019  0648  00BC               	movwf	??_I2C_Master_Read
  3020  0649  01BD               	clrf	??_I2C_Master_Read+1
  3021  064A  083C               	movf	??_I2C_Master_Read,w
  3022  064B  00BE               	movwf	I2C_Master_Read@temp
  3023  064C  083D               	movf	??_I2C_Master_Read+1,w
  3024  064D  00BF               	movwf	I2C_Master_Read@temp+1
  3025  064E                     l1659:
  3026                           
  3027                           ;I2C.c: 81:     I2C_Master_Wait();
  3028  064E  120A  118A  2751  120A  118A  	fcall	_I2C_Master_Wait
  3029  0653                     l1661:
  3030                           
  3031                           ;I2C.c: 82:     if(a == 1){
  3032  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0655  033A               	decf	I2C_Master_Read@a,w
  3035  0656  043B               	iorwf	I2C_Master_Read@a+1,w
  3036  0657  1D03               	btfss	3,2
  3037  0658  2E5A               	goto	u851
  3038  0659  2E5B               	goto	u850
  3039  065A                     u851:
  3040  065A  2E5F               	goto	l298
  3041  065B                     u850:
  3042  065B                     l1663:
  3043                           
  3044                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3045  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3046  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3047  065D  1291               	bcf	17,5	;volatile
  3048                           
  3049                           ;I2C.c: 84:     }else{
  3050  065E  2E62               	goto	l299
  3051  065F                     l298:
  3052                           
  3053                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3054  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3055  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3056  0661  1691               	bsf	17,5	;volatile
  3057  0662                     l299:	
  3058                           ;I2C.c: 86:     }
  3059                           
  3060                           
  3061                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3062  0662  1611               	bsf	17,4	;volatile
  3063  0663                     l1665:
  3064                           
  3065                           ;I2C.c: 88:     return temp;
  3066  0663  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0664  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0665  083F               	movf	I2C_Master_Read@temp+1,w
  3069  0666  00BB               	movwf	?_I2C_Master_Read+1
  3070  0667  083E               	movf	I2C_Master_Read@temp,w
  3071  0668  00BA               	movwf	?_I2C_Master_Read
  3072  0669                     l300:
  3073  0669  0008               	return
  3074  066A                     __end_of_I2C_Master_Read:
  3075                           
  3076                           	psect	text15
  3077  0751                     __ptext15:	
  3078 ;; *************** function _I2C_Master_Wait *****************
  3079 ;; Defined at:
  3080 ;;		line 32 in file "I2C.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_I2C_Master_Start
  3105 ;;		_I2C_Master_Stop
  3106 ;;		_I2C_Master_Write
  3107 ;;		_I2C_Master_Read
  3108 ;;		_I2C_Master_RepeatedStart
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _I2C_Master_Wait
  3114  0751                     _I2C_Master_Wait:
  3115  0751                     l1497:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3118                           
  3119  0751                     l280:	
  3120                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3121                           
  3122  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3123  0752  1303               	bcf	3,6	;RP1=0, select bank1
  3124  0753  1914               	btfsc	20,2	;volatile
  3125  0754  2F56               	goto	u701
  3126  0755  2F57               	goto	u700
  3127  0756                     u701:
  3128  0756  2F51               	goto	l280
  3129  0757                     u700:
  3130  0757                     l1499:
  3131  0757  0811               	movf	17,w	;volatile
  3132  0758  391F               	andlw	31
  3133  0759  1D03               	btfss	3,2
  3134  075A  2F5C               	goto	u711
  3135  075B  2F5D               	goto	u710
  3136  075C                     u711:
  3137  075C  2F51               	goto	l280
  3138  075D                     u710:
  3139  075D                     l283:
  3140  075D  0008               	return
  3141  075E                     __end_of_I2C_Master_Wait:
  3142                           
  3143                           	psect	text16
  3144  04F1                     __ptext16:	
  3145 ;; *************** function _Decimal *****************
  3146 ;; Defined at:
  3147 ;;		line 313 in file "master_main.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  variable        1    wreg     unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  variable        1   12[BANK0 ] unsigned char 
  3152 ;;  valor           1   13[BANK0 ] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       0       0       0       0
  3163 ;;      Locals:         0       2       0       0       0
  3164 ;;      Temps:          0       3       0       0       0
  3165 ;;      Totals:         0       5       0       0       0
  3166 ;;Total ram usage:        5 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    3
  3169 ;; This function calls:
  3170 ;;		___awdiv
  3171 ;;		___bmul
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _Decimal
  3179  04F1                     _Decimal:
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _Decimal: [wreg+status,2+status,0+pclath+cstack]
  3183                           ;Decimal@variable stored from wreg
  3184  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3185  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3186  04F3  00C6               	movwf	Decimal@variable
  3187  04F4                     l1673:
  3188                           
  3189                           ;master_main.c: 314:     uint8_t valor;;master_main.c: 315:     valor = variable;
  3190  04F4  0846               	movf	Decimal@variable,w
  3191  04F5  00C3               	movwf	??_Decimal
  3192  04F6  0843               	movf	??_Decimal,w
  3193  04F7  00C7               	movwf	Decimal@valor
  3194  04F8                     l1675:
  3195                           
  3196                           ;master_main.c: 316:     Primer_digito = (valor/100) ;
  3197  04F8  3064               	movlw	100
  3198  04F9  00BA               	movwf	___awdiv@divisor
  3199  04FA  3000               	movlw	0
  3200  04FB  00BB               	movwf	___awdiv@divisor+1
  3201  04FC  0847               	movf	Decimal@valor,w
  3202  04FD  00C3               	movwf	??_Decimal
  3203  04FE  01C4               	clrf	??_Decimal+1
  3204  04FF  0843               	movf	??_Decimal,w
  3205  0500  00BC               	movwf	___awdiv@dividend
  3206  0501  0844               	movf	??_Decimal+1,w
  3207  0502  00BD               	movwf	___awdiv@dividend+1
  3208  0503  120A  118A  2420  120A  118A  	fcall	___awdiv
  3209  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3211  050A  083A               	movf	?___awdiv,w
  3212  050B  00C5               	movwf	??_Decimal+2
  3213  050C  0845               	movf	??_Decimal+2,w
  3214  050D  00B9               	movwf	_Primer_digito
  3215  050E                     l1677:
  3216                           
  3217                           ;master_main.c: 317:     valor = (valor - (Primer_digito*100));
  3218  050E  309C               	movlw	156
  3219  050F  00C3               	movwf	??_Decimal
  3220  0510  0843               	movf	??_Decimal,w
  3221  0511  00BA               	movwf	___bmul@multiplicand
  3222  0512  0839               	movf	_Primer_digito,w
  3223  0513  120A  118A  2718  120A  118A  	fcall	___bmul
  3224  0518  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0519  1303               	bcf	3,6	;RP1=0, select bank0
  3226  051A  0747               	addwf	Decimal@valor,w
  3227  051B  00C4               	movwf	??_Decimal+1
  3228  051C  0844               	movf	??_Decimal+1,w
  3229  051D  00C7               	movwf	Decimal@valor
  3230  051E                     l1679:
  3231                           
  3232                           ;master_main.c: 318:     Segundo_digito = (valor/10);
  3233  051E  300A               	movlw	10
  3234  051F  00BA               	movwf	___awdiv@divisor
  3235  0520  3000               	movlw	0
  3236  0521  00BB               	movwf	___awdiv@divisor+1
  3237  0522  0847               	movf	Decimal@valor,w
  3238  0523  00C3               	movwf	??_Decimal
  3239  0524  01C4               	clrf	??_Decimal+1
  3240  0525  0843               	movf	??_Decimal,w
  3241  0526  00BC               	movwf	___awdiv@dividend
  3242  0527  0844               	movf	??_Decimal+1,w
  3243  0528  00BD               	movwf	___awdiv@dividend+1
  3244  0529  120A  118A  2420  120A  118A  	fcall	___awdiv
  3245  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3246  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0530  083A               	movf	?___awdiv,w
  3248  0531  00C5               	movwf	??_Decimal+2
  3249  0532  0845               	movf	??_Decimal+2,w
  3250  0533  00B8               	movwf	_Segundo_digito
  3251  0534                     l1681:
  3252                           
  3253                           ;master_main.c: 319:     valor = (valor - (Segundo_digito*10));
  3254  0534  30F6               	movlw	246
  3255  0535  00C3               	movwf	??_Decimal
  3256  0536  0843               	movf	??_Decimal,w
  3257  0537  00BA               	movwf	___bmul@multiplicand
  3258  0538  0838               	movf	_Segundo_digito,w
  3259  0539  120A  118A  2718  120A  118A  	fcall	___bmul
  3260  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3261  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3262  0540  0747               	addwf	Decimal@valor,w
  3263  0541  00C4               	movwf	??_Decimal+1
  3264  0542  0844               	movf	??_Decimal+1,w
  3265  0543  00C7               	movwf	Decimal@valor
  3266                           
  3267                           ;master_main.c: 320:     Tercer_digito = valor;
  3268  0544  0847               	movf	Decimal@valor,w
  3269  0545  00C3               	movwf	??_Decimal
  3270  0546  0843               	movf	??_Decimal,w
  3271  0547  00B7               	movwf	_Tercer_digito
  3272  0548                     l1683:
  3273                           
  3274                           ;master_main.c: 322:     Primer_digito = Primer_digito + 48;
  3275  0548  0839               	movf	_Primer_digito,w
  3276  0549  3E30               	addlw	48
  3277  054A  00C3               	movwf	??_Decimal
  3278  054B  0843               	movf	??_Decimal,w
  3279  054C  00B9               	movwf	_Primer_digito
  3280  054D                     l1685:
  3281                           
  3282                           ;master_main.c: 323:     Segundo_digito = Segundo_digito + 48;
  3283  054D  0838               	movf	_Segundo_digito,w
  3284  054E  3E30               	addlw	48
  3285  054F  00C3               	movwf	??_Decimal
  3286  0550  0843               	movf	??_Decimal,w
  3287  0551  00B8               	movwf	_Segundo_digito
  3288  0552                     l1687:
  3289                           
  3290                           ;master_main.c: 324:     Tercer_digito = Tercer_digito + 48;
  3291  0552  0837               	movf	_Tercer_digito,w
  3292  0553  3E30               	addlw	48
  3293  0554  00C3               	movwf	??_Decimal
  3294  0555  0843               	movf	??_Decimal,w
  3295  0556  00B7               	movwf	_Tercer_digito
  3296  0557                     l201:
  3297  0557  0008               	return
  3298  0558                     __end_of_Decimal:
  3299                           
  3300                           	psect	text17
  3301  0718                     __ptext17:	
  3302 ;; *************** function ___bmul *****************
  3303 ;; Defined at:
  3304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  multiplier      1    wreg     unsigned char 
  3307 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3310 ;;  product         1    2[BANK0 ] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      unsigned char 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3320 ;;      Params:         0       1       0       0       0
  3321 ;;      Locals:         0       2       0       0       0
  3322 ;;      Temps:          0       1       0       0       0
  3323 ;;      Totals:         0       4       0       0       0
  3324 ;;Total ram usage:        4 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    2
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_Decimal
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function ___bmul
  3336  0718                     ___bmul:
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3340                           ;___bmul@multiplier stored from wreg
  3341  0718  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0719  1303               	bcf	3,6	;RP1=0, select bank0
  3343  071A  00BD               	movwf	___bmul@multiplier
  3344  071B                     l1501:
  3345  071B  01BC               	clrf	___bmul@product
  3346  071C                     l1503:
  3347  071C  1C3D               	btfss	___bmul@multiplier,0
  3348  071D  2F1F               	goto	u721
  3349  071E  2F20               	goto	u720
  3350  071F                     u721:
  3351  071F  2F24               	goto	l1507
  3352  0720                     u720:
  3353  0720                     l1505:
  3354  0720  083A               	movf	___bmul@multiplicand,w
  3355  0721  00BB               	movwf	??___bmul
  3356  0722  083B               	movf	??___bmul,w
  3357  0723  07BC               	addwf	___bmul@product,f
  3358  0724                     l1507:
  3359  0724  1003               	clrc
  3360  0725  0DBA               	rlf	___bmul@multiplicand,f
  3361  0726                     l1509:
  3362  0726  1003               	clrc
  3363  0727  0CBD               	rrf	___bmul@multiplier,f
  3364  0728  083D               	movf	___bmul@multiplier,w
  3365  0729  1D03               	btfss	3,2
  3366  072A  2F2C               	goto	u731
  3367  072B  2F2D               	goto	u730
  3368  072C                     u731:
  3369  072C  2F1C               	goto	l1503
  3370  072D                     u730:
  3371  072D                     l1511:
  3372  072D  083C               	movf	___bmul@product,w
  3373  072E                     l415:
  3374  072E  0008               	return
  3375  072F                     __end_of___bmul:
  3376                           
  3377                           	psect	text18
  3378  0420                     __ptext18:	
  3379 ;; *************** function ___awdiv *****************
  3380 ;; Defined at:
  3381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  divisor         2    0[BANK0 ] int 
  3384 ;;  dividend        2    2[BANK0 ] int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  quotient        2    7[BANK0 ] int 
  3387 ;;  sign            1    6[BANK0 ] unsigned char 
  3388 ;;  counter         1    5[BANK0 ] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  2    0[BANK0 ] int 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       4       0       0       0
  3399 ;;      Locals:         0       4       0       0       0
  3400 ;;      Temps:          0       1       0       0       0
  3401 ;;      Totals:         0       9       0       0       0
  3402 ;;Total ram usage:        9 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    2
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_Decimal
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function ___awdiv
  3414  0420                     ___awdiv:
  3415  0420                     l1515:	
  3416                           ;incstack = 0
  3417                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3418                           
  3419  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0422  01C0               	clrf	___awdiv@sign
  3422  0423                     l1517:
  3423  0423  1FBB               	btfss	___awdiv@divisor+1,7
  3424  0424  2C26               	goto	u741
  3425  0425  2C27               	goto	u740
  3426  0426                     u741:
  3427  0426  2C2E               	goto	l1523
  3428  0427                     u740:
  3429  0427                     l1519:
  3430  0427  09BA               	comf	___awdiv@divisor,f
  3431  0428  09BB               	comf	___awdiv@divisor+1,f
  3432  0429  0ABA               	incf	___awdiv@divisor,f
  3433  042A  1903               	skipnz
  3434  042B  0ABB               	incf	___awdiv@divisor+1,f
  3435  042C                     l1521:
  3436  042C  01C0               	clrf	___awdiv@sign
  3437  042D  0AC0               	incf	___awdiv@sign,f
  3438  042E                     l1523:
  3439  042E  1FBD               	btfss	___awdiv@dividend+1,7
  3440  042F  2C31               	goto	u751
  3441  0430  2C32               	goto	u750
  3442  0431                     u751:
  3443  0431  2C3B               	goto	l1529
  3444  0432                     u750:
  3445  0432                     l1525:
  3446  0432  09BC               	comf	___awdiv@dividend,f
  3447  0433  09BD               	comf	___awdiv@dividend+1,f
  3448  0434  0ABC               	incf	___awdiv@dividend,f
  3449  0435  1903               	skipnz
  3450  0436  0ABD               	incf	___awdiv@dividend+1,f
  3451  0437                     l1527:
  3452  0437  3001               	movlw	1
  3453  0438  00BE               	movwf	??___awdiv
  3454  0439  083E               	movf	??___awdiv,w
  3455  043A  06C0               	xorwf	___awdiv@sign,f
  3456  043B                     l1529:
  3457  043B  01C1               	clrf	___awdiv@quotient
  3458  043C  01C2               	clrf	___awdiv@quotient+1
  3459  043D                     l1531:
  3460  043D  083A               	movf	___awdiv@divisor,w
  3461  043E  043B               	iorwf	___awdiv@divisor+1,w
  3462  043F  1903               	btfsc	3,2
  3463  0440  2C42               	goto	u761
  3464  0441  2C43               	goto	u760
  3465  0442                     u761:
  3466  0442  2C7A               	goto	l1551
  3467  0443                     u760:
  3468  0443                     l1533:
  3469  0443  01BF               	clrf	___awdiv@counter
  3470  0444  0ABF               	incf	___awdiv@counter,f
  3471  0445  2C51               	goto	l1539
  3472  0446                     l1535:
  3473  0446  3001               	movlw	1
  3474  0447                     u775:
  3475  0447  1003               	clrc
  3476  0448  0DBA               	rlf	___awdiv@divisor,f
  3477  0449  0DBB               	rlf	___awdiv@divisor+1,f
  3478  044A  3EFF               	addlw	-1
  3479  044B  1D03               	skipz
  3480  044C  2C47               	goto	u775
  3481  044D                     l1537:
  3482  044D  3001               	movlw	1
  3483  044E  00BE               	movwf	??___awdiv
  3484  044F  083E               	movf	??___awdiv,w
  3485  0450  07BF               	addwf	___awdiv@counter,f
  3486  0451                     l1539:
  3487  0451  1FBB               	btfss	___awdiv@divisor+1,7
  3488  0452  2C54               	goto	u781
  3489  0453  2C55               	goto	u780
  3490  0454                     u781:
  3491  0454  2C46               	goto	l1535
  3492  0455                     u780:
  3493  0455                     l1541:
  3494  0455  3001               	movlw	1
  3495  0456                     u795:
  3496  0456  1003               	clrc
  3497  0457  0DC1               	rlf	___awdiv@quotient,f
  3498  0458  0DC2               	rlf	___awdiv@quotient+1,f
  3499  0459  3EFF               	addlw	-1
  3500  045A  1D03               	skipz
  3501  045B  2C56               	goto	u795
  3502  045C  083B               	movf	___awdiv@divisor+1,w
  3503  045D  023D               	subwf	___awdiv@dividend+1,w
  3504  045E  1D03               	skipz
  3505  045F  2C62               	goto	u805
  3506  0460  083A               	movf	___awdiv@divisor,w
  3507  0461  023C               	subwf	___awdiv@dividend,w
  3508  0462                     u805:
  3509  0462  1C03               	skipc
  3510  0463  2C65               	goto	u801
  3511  0464  2C66               	goto	u800
  3512  0465                     u801:
  3513  0465  2C6D               	goto	l1547
  3514  0466                     u800:
  3515  0466                     l1543:
  3516  0466  083A               	movf	___awdiv@divisor,w
  3517  0467  02BC               	subwf	___awdiv@dividend,f
  3518  0468  083B               	movf	___awdiv@divisor+1,w
  3519  0469  1C03               	skipc
  3520  046A  03BD               	decf	___awdiv@dividend+1,f
  3521  046B  02BD               	subwf	___awdiv@dividend+1,f
  3522  046C                     l1545:
  3523  046C  1441               	bsf	___awdiv@quotient,0
  3524  046D                     l1547:
  3525  046D  3001               	movlw	1
  3526  046E                     u815:
  3527  046E  1003               	clrc
  3528  046F  0CBB               	rrf	___awdiv@divisor+1,f
  3529  0470  0CBA               	rrf	___awdiv@divisor,f
  3530  0471  3EFF               	addlw	-1
  3531  0472  1D03               	skipz
  3532  0473  2C6E               	goto	u815
  3533  0474                     l1549:
  3534  0474  3001               	movlw	1
  3535  0475  02BF               	subwf	___awdiv@counter,f
  3536  0476  1D03               	btfss	3,2
  3537  0477  2C79               	goto	u821
  3538  0478  2C7A               	goto	u820
  3539  0479                     u821:
  3540  0479  2C55               	goto	l1541
  3541  047A                     u820:
  3542  047A                     l1551:
  3543  047A  0840               	movf	___awdiv@sign,w
  3544  047B  1903               	btfsc	3,2
  3545  047C  2C7E               	goto	u831
  3546  047D  2C7F               	goto	u830
  3547  047E                     u831:
  3548  047E  2C84               	goto	l1555
  3549  047F                     u830:
  3550  047F                     l1553:
  3551  047F  09C1               	comf	___awdiv@quotient,f
  3552  0480  09C2               	comf	___awdiv@quotient+1,f
  3553  0481  0AC1               	incf	___awdiv@quotient,f
  3554  0482  1903               	skipnz
  3555  0483  0AC2               	incf	___awdiv@quotient+1,f
  3556  0484                     l1555:
  3557  0484  0842               	movf	___awdiv@quotient+1,w
  3558  0485  00BB               	movwf	?___awdiv+1
  3559  0486  0841               	movf	___awdiv@quotient,w
  3560  0487  00BA               	movwf	?___awdiv
  3561  0488                     l542:
  3562  0488  0008               	return
  3563  0489                     __end_of___awdiv:
  3564                           
  3565                           	psect	text19
  3566  0286                     __ptext19:	
  3567 ;; *************** function _isr *****************
  3568 ;; Defined at:
  3569 ;;		line 228 in file "master_main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          6       0       0       0       0
  3586 ;;      Totals:         6       0       0       0       0
  3587 ;;Total ram usage:        6 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    1
  3590 ;; This function calls:
  3591 ;;		___wmul
  3592 ;;		i1___bmul
  3593 ;; This function is called by:
  3594 ;;		Interrupt level 1
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _isr
  3600  0286                     _isr:
  3601  0286                     i1l1843:
  3602                           
  3603                           ;master_main.c: 230:     if (INTCONbits.T0IF){
  3604  0286  1D0B               	btfss	11,2	;volatile
  3605  0287  2A89               	goto	u101_21
  3606  0288  2A8A               	goto	u101_20
  3607  0289                     u101_21:
  3608  0289  2A9C               	goto	i1l1855
  3609  028A                     u101_20:
  3610  028A                     i1l1845:
  3611                           
  3612                           ;master_main.c: 231:         cont--;
  3613  028A  3001               	movlw	1
  3614  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3615  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3616  028D  02A0               	subwf	_cont,f
  3617  028E  3000               	movlw	0
  3618  028F  1C03               	skipc
  3619  0290  03A1               	decf	_cont+1,f
  3620  0291  02A1               	subwf	_cont+1,f
  3621  0292                     i1l1847:
  3622                           
  3623                           ;master_main.c: 232:         if(cont == 0){
  3624  0292  0820               	movf	_cont,w
  3625  0293  0421               	iorwf	_cont+1,w
  3626  0294  1D03               	btfss	3,2
  3627  0295  2A97               	goto	u102_21
  3628  0296  2A98               	goto	u102_20
  3629  0297                     u102_21:
  3630  0297  2A99               	goto	i1l1851
  3631  0298                     u102_20:
  3632  0298                     i1l1849:
  3633                           
  3634                           ;master_main.c: 233:             val = 0;
  3635  0298  01A3               	clrf	_val
  3636  0299                     i1l1851:
  3637                           
  3638                           ;master_main.c: 235:         TMR0 = 248;
  3639  0299  30F8               	movlw	248
  3640  029A  0081               	movwf	1	;volatile
  3641  029B                     i1l1853:
  3642                           
  3643                           ;master_main.c: 236:         INTCONbits.T0IF = 0;
  3644  029B  110B               	bcf	11,2	;volatile
  3645  029C                     i1l1855:
  3646                           
  3647                           ;master_main.c: 239:     if(INTCONbits.RBIF){
  3648  029C  1C0B               	btfss	11,0	;volatile
  3649  029D  2A9F               	goto	u103_21
  3650  029E  2AA0               	goto	u103_20
  3651  029F                     u103_21:
  3652  029F  2AC9               	goto	i1l1869
  3653  02A0                     u103_20:
  3654  02A0                     i1l1857:
  3655                           
  3656                           ;master_main.c: 240:         if(PORTBbits.RB1 == 1){
  3657  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3658  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  3659  02A2  1C86               	btfss	6,1	;volatile
  3660  02A3  2AA5               	goto	u104_21
  3661  02A4  2AA6               	goto	u104_20
  3662  02A5                     u104_21:
  3663  02A5  2AC8               	goto	i1l1867
  3664  02A6                     u104_20:
  3665  02A6                     i1l1859:
  3666                           
  3667                           ;master_main.c: 241:             if(flag){
  3668  02A6  0822               	movf	_flag,w
  3669  02A7  1903               	btfsc	3,2
  3670  02A8  2AAA               	goto	u105_21
  3671  02A9  2AAB               	goto	u105_20
  3672  02AA                     u105_21:
  3673  02AA  2AC2               	goto	i1l1863
  3674  02AB                     u105_20:
  3675  02AB                     i1l1861:
  3676                           
  3677                           ;master_main.c: 242:                cont = PORTA*1000;
  3678  02AB  0805               	movf	5,w	;volatile
  3679  02AC  00F6               	movwf	??_isr
  3680  02AD  01F7               	clrf	??_isr+1
  3681  02AE  0876               	movf	??_isr,w
  3682  02AF  00F0               	movwf	___wmul@multiplier
  3683  02B0  0877               	movf	??_isr+1,w
  3684  02B1  00F1               	movwf	___wmul@multiplier+1
  3685  02B2  30E8               	movlw	232
  3686  02B3  00F2               	movwf	___wmul@multiplicand
  3687  02B4  3003               	movlw	3
  3688  02B5  00F3               	movwf	___wmul@multiplicand+1
  3689  02B6  120A  118A  2693  120A  118A  	fcall	___wmul
  3690  02BB  0871               	movf	?___wmul+1,w
  3691  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3692  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3693  02BE  00A1               	movwf	_cont+1
  3694  02BF  0870               	movf	?___wmul,w
  3695  02C0  00A0               	movwf	_cont
  3696                           
  3697                           ;master_main.c: 243:            }
  3698  02C1  2AC6               	goto	i1l1865
  3699  02C2                     i1l1863:
  3700                           
  3701                           ;master_main.c: 245:                cont = 5*1000;
  3702  02C2  3088               	movlw	136
  3703  02C3  00A0               	movwf	_cont
  3704  02C4  3013               	movlw	19
  3705  02C5  00A1               	movwf	_cont+1
  3706  02C6                     i1l1865:
  3707                           
  3708                           ;master_main.c: 247:            val = 1;
  3709  02C6  01A3               	clrf	_val
  3710  02C7  0AA3               	incf	_val,f
  3711  02C8                     i1l1867:
  3712                           
  3713                           ;master_main.c: 249:       INTCONbits.RBIF = 0;
  3714  02C8  100B               	bcf	11,0	;volatile
  3715  02C9                     i1l1869:
  3716                           
  3717                           ;master_main.c: 252:     if(PIR1bits.RCIF == 1){
  3718  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  3719  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  3720  02CB  1E8C               	btfss	12,5	;volatile
  3721  02CC  2ACE               	goto	u106_21
  3722  02CD  2ACF               	goto	u106_20
  3723  02CE                     u106_21:
  3724  02CE  2BAB               	goto	i1l198
  3725  02CF                     u106_20:
  3726  02CF                     i1l1871:
  3727                           
  3728                           ;master_main.c: 253:         if (RCREG == 0x0D){
  3729  02CF  300D               	movlw	13
  3730  02D0  061A               	xorwf	26,w	;volatile
  3731  02D1  1D03               	btfss	3,2
  3732  02D2  2AD4               	goto	u107_21
  3733  02D3  2AD5               	goto	u107_20
  3734  02D4                     u107_21:
  3735  02D4  2ADF               	goto	i1l1887
  3736  02D5                     u107_20:
  3737  02D5                     i1l1873:
  3738                           
  3739                           ;master_main.c: 254:         PORTA = valor;
  3740  02D5  0824               	movf	_valor,w
  3741  02D6  0085               	movwf	5	;volatile
  3742  02D7                     i1l1875:
  3743                           
  3744                           ;master_main.c: 255:         cont_temp = 0;
  3745  02D7  01FC               	clrf	_cont_temp
  3746  02D8                     i1l1877:
  3747                           
  3748                           ;master_main.c: 256:         valor = 0;
  3749  02D8  01A4               	clrf	_valor
  3750  02D9                     i1l1879:
  3751                           
  3752                           ;master_main.c: 257:         u_flag = 1;
  3753  02D9  01D3               	clrf	_u_flag
  3754  02DA  0AD3               	incf	_u_flag,f
  3755  02DB                     i1l1881:
  3756                           
  3757                           ;master_main.c: 258:         d_flag = 0;
  3758  02DB  01A8               	clrf	_d_flag
  3759  02DC                     i1l1883:
  3760                           
  3761                           ;master_main.c: 259:         c_flag = 0;
  3762  02DC  01A7               	clrf	_c_flag
  3763  02DD                     i1l1885:
  3764                           
  3765                           ;master_main.c: 260:         flag = 1;
  3766  02DD  01A2               	clrf	_flag
  3767  02DE  0AA2               	incf	_flag,f
  3768  02DF                     i1l1887:
  3769                           
  3770                           ;master_main.c: 263:         if (RCREG != 0x0D){
  3771  02DF  300D               	movlw	13
  3772  02E0  061A               	xorwf	26,w	;volatile
  3773  02E1  1903               	btfsc	3,2
  3774  02E2  2AE4               	goto	u108_21
  3775  02E3  2AE5               	goto	u108_20
  3776  02E4                     u108_21:
  3777  02E4  2BA4               	goto	i1l1953
  3778  02E5                     u108_20:
  3779  02E5                     i1l1889:
  3780                           
  3781                           ;master_main.c: 264:         var_temp = RCREG;
  3782  02E5  081A               	movf	26,w	;volatile
  3783  02E6  00F6               	movwf	??_isr
  3784  02E7  0876               	movf	??_isr,w
  3785  02E8  00FD               	movwf	_var_temp
  3786  02E9                     i1l1891:
  3787                           
  3788                           ;master_main.c: 265:             if(var_temp==48){
  3789  02E9  3030               	movlw	48
  3790  02EA  067D               	xorwf	_var_temp,w
  3791  02EB  1D03               	btfss	3,2
  3792  02EC  2AEE               	goto	u109_21
  3793  02ED  2AEF               	goto	u109_20
  3794  02EE                     u109_21:
  3795  02EE  2AF1               	goto	i1l1895
  3796  02EF                     u109_20:
  3797  02EF                     i1l1893:
  3798                           
  3799                           ;master_main.c: 266:                 cont_temp = 0;
  3800  02EF  01FC               	clrf	_cont_temp
  3801                           
  3802                           ;master_main.c: 267:             }else if(var_temp==49){
  3803  02F0  2B52               	goto	i1l1931
  3804  02F1                     i1l1895:
  3805  02F1  3031               	movlw	49
  3806  02F2  067D               	xorwf	_var_temp,w
  3807  02F3  1D03               	btfss	3,2
  3808  02F4  2AF6               	goto	u110_21
  3809  02F5  2AF7               	goto	u110_20
  3810  02F6                     u110_21:
  3811  02F6  2AFA               	goto	i1l1899
  3812  02F7                     u110_20:
  3813  02F7                     i1l1897:
  3814                           
  3815                           ;master_main.c: 268:                 cont_temp = 1;
  3816  02F7  01FC               	clrf	_cont_temp
  3817  02F8  0AFC               	incf	_cont_temp,f
  3818                           
  3819                           ;master_main.c: 269:             }else if(var_temp==50){
  3820  02F9  2B52               	goto	i1l1931
  3821  02FA                     i1l1899:
  3822  02FA  3032               	movlw	50
  3823  02FB  067D               	xorwf	_var_temp,w
  3824  02FC  1D03               	btfss	3,2
  3825  02FD  2AFF               	goto	u111_21
  3826  02FE  2B00               	goto	u111_20
  3827  02FF                     u111_21:
  3828  02FF  2B05               	goto	i1l1903
  3829  0300                     u111_20:
  3830  0300                     i1l1901:
  3831                           
  3832                           ;master_main.c: 270:                 cont_temp = 2;
  3833  0300  3002               	movlw	2
  3834  0301  00F6               	movwf	??_isr
  3835  0302  0876               	movf	??_isr,w
  3836  0303  00FC               	movwf	_cont_temp
  3837                           
  3838                           ;master_main.c: 271:             }else if(var_temp==51){
  3839  0304  2B52               	goto	i1l1931
  3840  0305                     i1l1903:
  3841  0305  3033               	movlw	51
  3842  0306  067D               	xorwf	_var_temp,w
  3843  0307  1D03               	btfss	3,2
  3844  0308  2B0A               	goto	u112_21
  3845  0309  2B0B               	goto	u112_20
  3846  030A                     u112_21:
  3847  030A  2B10               	goto	i1l1907
  3848  030B                     u112_20:
  3849  030B                     i1l1905:
  3850                           
  3851                           ;master_main.c: 272:                 cont_temp = 3;
  3852  030B  3003               	movlw	3
  3853  030C  00F6               	movwf	??_isr
  3854  030D  0876               	movf	??_isr,w
  3855  030E  00FC               	movwf	_cont_temp
  3856                           
  3857                           ;master_main.c: 273:             }else if(var_temp==52){
  3858  030F  2B52               	goto	i1l1931
  3859  0310                     i1l1907:
  3860  0310  3034               	movlw	52
  3861  0311  067D               	xorwf	_var_temp,w
  3862  0312  1D03               	btfss	3,2
  3863  0313  2B15               	goto	u113_21
  3864  0314  2B16               	goto	u113_20
  3865  0315                     u113_21:
  3866  0315  2B1B               	goto	i1l1911
  3867  0316                     u113_20:
  3868  0316                     i1l1909:
  3869                           
  3870                           ;master_main.c: 274:                 cont_temp = 4;
  3871  0316  3004               	movlw	4
  3872  0317  00F6               	movwf	??_isr
  3873  0318  0876               	movf	??_isr,w
  3874  0319  00FC               	movwf	_cont_temp
  3875                           
  3876                           ;master_main.c: 275:             }else if(var_temp==53){
  3877  031A  2B52               	goto	i1l1931
  3878  031B                     i1l1911:
  3879  031B  3035               	movlw	53
  3880  031C  067D               	xorwf	_var_temp,w
  3881  031D  1D03               	btfss	3,2
  3882  031E  2B20               	goto	u114_21
  3883  031F  2B21               	goto	u114_20
  3884  0320                     u114_21:
  3885  0320  2B26               	goto	i1l1915
  3886  0321                     u114_20:
  3887  0321                     i1l1913:
  3888                           
  3889                           ;master_main.c: 276:                 cont_temp = 5;
  3890  0321  3005               	movlw	5
  3891  0322  00F6               	movwf	??_isr
  3892  0323  0876               	movf	??_isr,w
  3893  0324  00FC               	movwf	_cont_temp
  3894                           
  3895                           ;master_main.c: 277:             }else if(var_temp==54){
  3896  0325  2B52               	goto	i1l1931
  3897  0326                     i1l1915:
  3898  0326  3036               	movlw	54
  3899  0327  067D               	xorwf	_var_temp,w
  3900  0328  1D03               	btfss	3,2
  3901  0329  2B2B               	goto	u115_21
  3902  032A  2B2C               	goto	u115_20
  3903  032B                     u115_21:
  3904  032B  2B31               	goto	i1l1919
  3905  032C                     u115_20:
  3906  032C                     i1l1917:
  3907                           
  3908                           ;master_main.c: 278:                 cont_temp = 6;
  3909  032C  3006               	movlw	6
  3910  032D  00F6               	movwf	??_isr
  3911  032E  0876               	movf	??_isr,w
  3912  032F  00FC               	movwf	_cont_temp
  3913                           
  3914                           ;master_main.c: 279:             }else if(var_temp==55){
  3915  0330  2B52               	goto	i1l1931
  3916  0331                     i1l1919:
  3917  0331  3037               	movlw	55
  3918  0332  067D               	xorwf	_var_temp,w
  3919  0333  1D03               	btfss	3,2
  3920  0334  2B36               	goto	u116_21
  3921  0335  2B37               	goto	u116_20
  3922  0336                     u116_21:
  3923  0336  2B3C               	goto	i1l1923
  3924  0337                     u116_20:
  3925  0337                     i1l1921:
  3926                           
  3927                           ;master_main.c: 280:                 cont_temp = 7;
  3928  0337  3007               	movlw	7
  3929  0338  00F6               	movwf	??_isr
  3930  0339  0876               	movf	??_isr,w
  3931  033A  00FC               	movwf	_cont_temp
  3932                           
  3933                           ;master_main.c: 281:             }else if(var_temp==56){
  3934  033B  2B52               	goto	i1l1931
  3935  033C                     i1l1923:
  3936  033C  3038               	movlw	56
  3937  033D  067D               	xorwf	_var_temp,w
  3938  033E  1D03               	btfss	3,2
  3939  033F  2B41               	goto	u117_21
  3940  0340  2B42               	goto	u117_20
  3941  0341                     u117_21:
  3942  0341  2B47               	goto	i1l1927
  3943  0342                     u117_20:
  3944  0342                     i1l1925:
  3945                           
  3946                           ;master_main.c: 282:                 cont_temp = 8;
  3947  0342  3008               	movlw	8
  3948  0343  00F6               	movwf	??_isr
  3949  0344  0876               	movf	??_isr,w
  3950  0345  00FC               	movwf	_cont_temp
  3951                           
  3952                           ;master_main.c: 283:             }else if(var_temp==57){
  3953  0346  2B52               	goto	i1l1931
  3954  0347                     i1l1927:
  3955  0347  3039               	movlw	57
  3956  0348  067D               	xorwf	_var_temp,w
  3957  0349  1D03               	btfss	3,2
  3958  034A  2B4C               	goto	u118_21
  3959  034B  2B4D               	goto	u118_20
  3960  034C                     u118_21:
  3961  034C  2B52               	goto	i1l186
  3962  034D                     u118_20:
  3963  034D                     i1l1929:
  3964                           
  3965                           ;master_main.c: 284:                 cont_temp = 9;
  3966  034D  3009               	movlw	9
  3967  034E  00F6               	movwf	??_isr
  3968  034F  0876               	movf	??_isr,w
  3969  0350  00FC               	movwf	_cont_temp
  3970  0351  2B52               	goto	i1l1931
  3971  0352                     i1l186:
  3972  0352                     i1l1931:
  3973                           
  3974                           ;master_main.c: 286:         if (u_flag == 1){
  3975  0352  0353               	decf	_u_flag,w
  3976  0353  1D03               	btfss	3,2
  3977  0354  2B56               	goto	u119_21
  3978  0355  2B57               	goto	u119_20
  3979  0356                     u119_21:
  3980  0356  2B63               	goto	i1l1939
  3981  0357                     u119_20:
  3982  0357                     i1l1933:
  3983                           
  3984                           ;master_main.c: 287:             valor = cont_temp;
  3985  0357  087C               	movf	_cont_temp,w
  3986  0358  00F6               	movwf	??_isr
  3987  0359  0876               	movf	??_isr,w
  3988  035A  00A4               	movwf	_valor
  3989                           
  3990                           ;master_main.c: 288:             unidad = cont_temp;
  3991  035B  087C               	movf	_cont_temp,w
  3992  035C  00F6               	movwf	??_isr
  3993  035D  0876               	movf	??_isr,w
  3994  035E  00A6               	movwf	_unidad
  3995  035F                     i1l1935:
  3996                           
  3997                           ;master_main.c: 289:             u_flag = 0;
  3998  035F  01D3               	clrf	_u_flag
  3999  0360                     i1l1937:
  4000                           
  4001                           ;master_main.c: 290:             d_flag = 1;
  4002  0360  01A8               	clrf	_d_flag
  4003  0361  0AA8               	incf	_d_flag,f
  4004                           
  4005                           ;master_main.c: 291:         }
  4006  0362  2BA4               	goto	i1l1953
  4007  0363                     i1l1939:
  4008  0363  0328               	decf	_d_flag,w
  4009  0364  1D03               	btfss	3,2
  4010  0365  2B67               	goto	u120_21
  4011  0366  2B68               	goto	u120_20
  4012  0367                     u120_21:
  4013  0367  2B80               	goto	i1l1949
  4014  0368                     u120_20:
  4015  0368                     i1l1941:
  4016                           
  4017                           ;master_main.c: 293:             valor = (unidad*10)+cont_temp;
  4018  0368  300A               	movlw	10
  4019  0369  00F6               	movwf	??_isr
  4020  036A  0876               	movf	??_isr,w
  4021  036B  00F0               	movwf	i1___bmul@multiplicand
  4022  036C  0826               	movf	_unidad,w
  4023  036D  120A  118A  272F  120A  118A  	fcall	i1___bmul
  4024  0372  077C               	addwf	_cont_temp,w
  4025  0373  00F7               	movwf	??_isr+1
  4026  0374  0877               	movf	??_isr+1,w
  4027  0375  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0376  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0377  00A4               	movwf	_valor
  4030  0378                     i1l1943:
  4031                           
  4032                           ;master_main.c: 294:             decena = cont_temp;
  4033  0378  087C               	movf	_cont_temp,w
  4034  0379  00F6               	movwf	??_isr
  4035  037A  0876               	movf	??_isr,w
  4036  037B  00A5               	movwf	_decena
  4037  037C                     i1l1945:
  4038                           
  4039                           ;master_main.c: 295:             d_flag = 0;
  4040  037C  01A8               	clrf	_d_flag
  4041  037D                     i1l1947:
  4042                           
  4043                           ;master_main.c: 296:             c_flag = 1;
  4044  037D  01A7               	clrf	_c_flag
  4045  037E  0AA7               	incf	_c_flag,f
  4046                           
  4047                           ;master_main.c: 297:         }
  4048  037F  2BA4               	goto	i1l1953
  4049  0380                     i1l1949:
  4050  0380  0327               	decf	_c_flag,w
  4051  0381  1D03               	btfss	3,2
  4052  0382  2B84               	goto	u121_21
  4053  0383  2B85               	goto	u121_20
  4054  0384                     u121_21:
  4055  0384  2BA4               	goto	i1l193
  4056  0385                     u121_20:
  4057  0385                     i1l1951:
  4058                           
  4059                           ;master_main.c: 299:             valor = (unidad*100)+(decena*10)+cont_temp;
  4060  0385  300A               	movlw	10
  4061  0386  00F6               	movwf	??_isr
  4062  0387  0876               	movf	??_isr,w
  4063  0388  00F0               	movwf	i1___bmul@multiplicand
  4064  0389  0825               	movf	_decena,w
  4065  038A  120A  118A  272F  120A  118A  	fcall	i1___bmul
  4066  038F  00F7               	movwf	??_isr+1
  4067  0390  3064               	movlw	100
  4068  0391  00F8               	movwf	??_isr+2
  4069  0392  0878               	movf	??_isr+2,w
  4070  0393  00F0               	movwf	i1___bmul@multiplicand
  4071  0394  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0395  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0396  0826               	movf	_unidad,w
  4074  0397  120A  118A  272F  120A  118A  	fcall	i1___bmul
  4075  039C  0777               	addwf	??_isr+1,w
  4076  039D  077C               	addwf	_cont_temp,w
  4077  039E  00F9               	movwf	??_isr+3
  4078  039F  0879               	movf	??_isr+3,w
  4079  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  4080  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  4081  03A2  00A4               	movwf	_valor
  4082  03A3  2BA4               	goto	i1l1953
  4083  03A4                     i1l193:
  4084  03A4                     i1l1953:
  4085                           
  4086                           ;master_main.c: 303:         if(RCREG == 115){
  4087  03A4  3073               	movlw	115
  4088  03A5  061A               	xorwf	26,w	;volatile
  4089  03A6  1D03               	btfss	3,2
  4090  03A7  2BA9               	goto	u122_21
  4091  03A8  2BAA               	goto	u122_20
  4092  03A9                     u122_21:
  4093  03A9  2BAB               	goto	i1l198
  4094  03AA                     u122_20:
  4095  03AA                     i1l1955:
  4096                           
  4097                           ;master_main.c: 304:             flag =0;
  4098  03AA  01A2               	clrf	_flag
  4099  03AB                     i1l198:
  4100  03AB  087B               	movf	??_isr+5,w
  4101  03AC  008A               	movwf	10
  4102  03AD  0E7A               	swapf	??_isr+4,w
  4103  03AE  0083               	movwf	3
  4104  03AF  0EFE               	swapf	btemp,f
  4105  03B0  0E7E               	swapf	btemp,w
  4106  03B1  0009               	retfie
  4107  03B2                     __end_of_isr:
  4108                           
  4109                           	psect	intentry
  4110  0004                     __pintentry:	
  4111                           ;incstack = 0
  4112                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4113                           
  4114  0004                     interrupt_function:
  4115  007E                     saved_w	set	btemp
  4116  0004  00FE               	movwf	btemp
  4117  0005  0E03               	swapf	3,w
  4118  0006  00FA               	movwf	??_isr+4
  4119  0007  080A               	movf	10,w
  4120  0008  00FB               	movwf	??_isr+5
  4121  0009  120A  118A  2A86   	ljmp	_isr
  4122                           
  4123                           	psect	text20
  4124  072F                     __ptext20:	
  4125 ;; *************** function i1___bmul *****************
  4126 ;; Defined at:
  4127 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  multiplier      1    wreg     unsigned char 
  4130 ;;  multiplicand    1    0[COMMON] unsigned char 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  multiplier      1    3[COMMON] unsigned char 
  4133 ;;  product         1    2[COMMON] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      unsigned char 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4143 ;;      Params:         1       0       0       0       0
  4144 ;;      Locals:         2       0       0       0       0
  4145 ;;      Temps:          1       0       0       0       0
  4146 ;;      Totals:         4       0       0       0       0
  4147 ;;Total ram usage:        4 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_isr
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           
  4157                           ;psect for function i1___bmul
  4158  072F                     i1___bmul:
  4159                           
  4160                           ;incstack = 0
  4161                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  4162                           ;i1___bmul@multiplier stored from wreg
  4163  072F  00F3               	movwf	i1___bmul@multiplier
  4164  0730                     i1l1733:
  4165  0730  01F2               	clrf	i1___bmul@product
  4166  0731                     i1l1735:
  4167  0731  1C73               	btfss	i1___bmul@multiplier,0
  4168  0732  2F34               	goto	u95_21
  4169  0733  2F35               	goto	u95_20
  4170  0734                     u95_21:
  4171  0734  2F39               	goto	i1l1739
  4172  0735                     u95_20:
  4173  0735                     i1l1737:
  4174  0735  0870               	movf	i1___bmul@multiplicand,w
  4175  0736  00F1               	movwf	??i1___bmul
  4176  0737  0871               	movf	??i1___bmul,w
  4177  0738  07F2               	addwf	i1___bmul@product,f
  4178  0739                     i1l1739:
  4179  0739  1003               	clrc
  4180  073A  0DF0               	rlf	i1___bmul@multiplicand,f
  4181  073B                     i1l1741:
  4182  073B  1003               	clrc
  4183  073C  0CF3               	rrf	i1___bmul@multiplier,f
  4184  073D  0873               	movf	i1___bmul@multiplier,w
  4185  073E  1D03               	btfss	3,2
  4186  073F  2F41               	goto	u96_21
  4187  0740  2F42               	goto	u96_20
  4188  0741                     u96_21:
  4189  0741  2F31               	goto	i1l1735
  4190  0742                     u96_20:
  4191  0742                     i1l1743:
  4192  0742  0872               	movf	i1___bmul@product,w
  4193  0743                     i1l415:
  4194  0743  0008               	return
  4195  0744                     __end_ofi1___bmul:
  4196                           
  4197                           	psect	text21
  4198  0693                     __ptext21:	
  4199 ;; *************** function ___wmul *****************
  4200 ;; Defined at:
  4201 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  multiplier      2    0[COMMON] unsigned int 
  4204 ;;  multiplicand    2    2[COMMON] unsigned int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  product         2    4[COMMON] unsigned int 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    0[COMMON] unsigned int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         4       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         6       0       0       0       0
  4220 ;;Total ram usage:        6 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_isr
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           
  4230                           ;psect for function ___wmul
  4231  0693                     ___wmul:
  4232  0693                     i1l1719:	
  4233                           ;incstack = 0
  4234                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4235                           
  4236  0693  01F4               	clrf	___wmul@product
  4237  0694  01F5               	clrf	___wmul@product+1
  4238  0695                     i1l1721:
  4239  0695  1C70               	btfss	___wmul@multiplier,0
  4240  0696  2E98               	goto	u91_21
  4241  0697  2E99               	goto	u91_20
  4242  0698                     u91_21:
  4243  0698  2E9F               	goto	i1l389
  4244  0699                     u91_20:
  4245  0699                     i1l1723:
  4246  0699  0872               	movf	___wmul@multiplicand,w
  4247  069A  07F4               	addwf	___wmul@product,f
  4248  069B  1803               	skipnc
  4249  069C  0AF5               	incf	___wmul@product+1,f
  4250  069D  0873               	movf	___wmul@multiplicand+1,w
  4251  069E  07F5               	addwf	___wmul@product+1,f
  4252  069F                     i1l389:
  4253  069F  3001               	movlw	1
  4254  06A0                     u92_25:
  4255  06A0  1003               	clrc
  4256  06A1  0DF2               	rlf	___wmul@multiplicand,f
  4257  06A2  0DF3               	rlf	___wmul@multiplicand+1,f
  4258  06A3  3EFF               	addlw	-1
  4259  06A4  1D03               	skipz
  4260  06A5  2EA0               	goto	u92_25
  4261  06A6                     i1l1725:
  4262  06A6  3001               	movlw	1
  4263  06A7                     u93_25:
  4264  06A7  1003               	clrc
  4265  06A8  0CF1               	rrf	___wmul@multiplier+1,f
  4266  06A9  0CF0               	rrf	___wmul@multiplier,f
  4267  06AA  3EFF               	addlw	-1
  4268  06AB  1D03               	skipz
  4269  06AC  2EA7               	goto	u93_25
  4270  06AD                     i1l1727:
  4271  06AD  0870               	movf	___wmul@multiplier,w
  4272  06AE  0471               	iorwf	___wmul@multiplier+1,w
  4273  06AF  1D03               	btfss	3,2
  4274  06B0  2EB2               	goto	u94_21
  4275  06B1  2EB3               	goto	u94_20
  4276  06B2                     u94_21:
  4277  06B2  2E95               	goto	i1l1721
  4278  06B3                     u94_20:
  4279  06B3                     i1l1729:
  4280  06B3  0875               	movf	___wmul@product+1,w
  4281  06B4  00F1               	movwf	?___wmul+1
  4282  06B5  0874               	movf	___wmul@product,w
  4283  06B6  00F0               	movwf	?___wmul
  4284  06B7                     i1l391:
  4285  06B7  0008               	return
  4286  06B8                     __end_of___wmul:
  4287  007E                     btemp	set	126	;btemp
  4288  007E                     wtemp0	set	126
  4289                           
  4290                           	psect	config
  4291                           
  4292                           ;Config register CONFIG1 @ 0x2007
  4293                           ;	Oscillator Selection bits
  4294                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4295                           ;	Watchdog Timer Enable bit
  4296                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4297                           ;	Power-up Timer Enable bit
  4298                           ;	PWRTE = OFF, PWRT disabled
  4299                           ;	RE3/MCLR pin function select bit
  4300                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4301                           ;	Code Protection bit
  4302                           ;	CP = OFF, Program memory code protection is disabled
  4303                           ;	Data Code Protection bit
  4304                           ;	CPD = OFF, Data memory code protection is disabled
  4305                           ;	Brown Out Reset Selection bits
  4306                           ;	BOREN = OFF, BOR disabled
  4307                           ;	Internal External Switchover bit
  4308                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4309                           ;	Fail-Safe Clock Monitor Enabled bit
  4310                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4311                           ;	Low Voltage Programming Enable bit
  4312                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4313                           ;	In-Circuit Debugger Mode bit
  4314                           ;	DEBUG = 0x1, unprogrammed default
  4315  2007                     	org	8199
  4316  2007  20D4               	dw	8404
  4317                           
  4318                           ;Config register CONFIG2 @ 0x2008
  4319                           ;	Brown-out Reset Selection bit
  4320                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4321                           ;	Flash Program Memory Self Write Enable bits
  4322                           ;	WRT = OFF, Write protection off
  4323  2008                     	org	8200
  4324  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        1
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     25      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[4]), 
		 -> STR_6(CODE[2]), STR_5(CODE[4]), STR_4(CODE[2]), STR_3(CODE[4]), 
		 -> STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3092
                                             22 BANK0      3     3      0
                            _Decimal
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     510
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Decimal                                              5     5      0    1133
                                              9 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     394
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     414
                                              6 COMMON     6     6      0
                             ___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decimal
     ___awdiv
     ___bmul
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Master_Init
       ___lldiv

 _isr (ROOT)
   ___wmul
   i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      42      12        0.0%
ABS                  0      0      42       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 29 14:01:56 2021

                        pc 0002             ___bmul@product 003C               ___awdiv@sign 0040  
                       fsr 0004        ___wmul@multiplicand 0072                        l201 0557  
                      l300 0669                        l204 03F0                        l221 06F3  
                      l230 05AF                        l206 03F4                        l207 041F  
                      l151 002E                        l224 0750                        l233 05FD  
                      l218 0787                        l242 0692                        l155 01AF  
                      l236 06D7                        l415 072E                        l280 0751  
                      l425 04F0                        l283 075D                        l292 0770  
                      l277 0637                        l542 0488                        l286 0779  
                      l295 0767                        l298 065F                        l299 0662  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _PR2 0092                        u700 0757                        u620 049B  
                      u701 0756                        u621 049A                        u710 075D  
                      u711 075C                        u800 0466                        u720 0720  
                      u640 04AF                        u801 0465                        u721 071F  
                      u641 04AE                        u730 072D                        u731 072C  
                      u635 04A0                        u820 047A                        u740 0427  
                      u900 0692                        u660 04CA                        u821 0479  
                      u805 0462                        u741 0426                        u901 0691  
                      u661 04C9                        u830 047F                        u750 0432  
                      u831 047E                        u815 046E                        u751 0431  
                      u655 04B1                        u760 0443                        u680 04E8  
                      u840 03F4                        u761 0442                        u681 04E7  
                      u665 04C6                        u841 03F3                        u850 065B  
                      u690 0615                        u851 065A                        u675 04DA  
                      u780 0455                        u860 0560                        u781 0454  
                      u861 055F                        u775 0447                        u695 0610  
                      u880 058B                        u881 058A                        u970 009D  
                      u795 0456                        u875 0568                        u971 009C  
                      u980 00B0                        u981 00AF                        u990 01A2  
                      u895 0593                        u991 01A1                        _isr 0286  
                      _val 0023                        fsr0 0004                        indf 0000  
                     l1501 071B                       l1511 072D                       l1503 071C  
                     l1521 042C                       l1505 0720                       l1441 049B  
                     l1601 03EC                       l1531 043D                       l1523 042E  
                     l1515 0420                       l1507 0724                       l1451 04CA  
                     l1443 049E                       l1611 0400                       l1603 03ED  
                     l1541 0455                       l1533 0443                       l1525 0432  
                     l1517 0423                       l1509 0726                       l1437 0785  
                     l1701 0585                       l1453 04D8                       l1445 04AB  
                     l1621 0409                       l1613 0401                       l1605 03EE  
                     l1543 0466                       l1535 0446                       l1551 047A  
                     l1527 0437                       l1519 0427                       l1703 058B  
                     l1471 06CD                       l1463 06BB                       l1711 066D  
                     l1455 04D9                       l1447 04AF                       l1439 0489  
                     l1631 040E                       l1623 040A                       l1615 0404  
                     l1607 03EF                       l1553 047F                       l1545 046C  
                     l1537 044D                       l1529 043B                       l1641 05D2  
                     l1705 059C                       l1473 06D4                       l1465 06C3  
                     l1713 0670                       l1457 04E2                       l1449 04B8  
                     l1481 0634                       l1633 0412                       l1625 040B  
                     l1617 0405                       l1609 03FC                       l1561 03B8  
                     l1801 012B                       l1555 0484                       l1547 046D  
                     l1539 0451                       l1651 0763                       l1491 06E2  
                     l1643 05D8                       l1635 05B0                       l1707 05A1  
                     l1467 06C4                       l1715 067D                       l1459 04E8  
                     l1483 0635                       l1475 05FE                       l1627 040C  
                     l1619 0406                       l1571 03C8                       l1563 03BF  
                     l1811 0153                       l1803 0131                       l1549 0474  
                     l1661 0653                       l1653 0638                       l1645 0771  
                     l1493 06E5                       l1637 05B6                       l1709 05A7  
                     l1469 06CA                       l1717 0685                       l1485 0636  
                     l1477 0602                       l1629 040D                       l1581 03CF  
                     l1573 03CB                       l1565 03C1                       l1821 0177  
                     l1813 0159                       l1805 013B                       l1663 065B  
                     l1655 063D                       l1647 0776                       l1671 076D  
                     l1495 06F0                       l1487 06DB                       l1639 05C1  
                     l1479 0605                       l1591 03D8                       l1583 03D0  
                     l1575 03CC                       l1567 03C5                       l1559 03B2  
                     l1831 019B                       l1823 017D                       l1815 0161  
                     l1807 0143                       l1751 0062                       l1681 0534  
                     l1673 04F4                       l1497 0751                       l1665 0663  
                     l1657 0645                       l1649 075E                       l1489 06DC  
                     l1593 03DD                       l1585 03D1                       l1577 03CD  
                     l1569 03C6                       l1841 027F                       l1833 01A2  
                     l1825 0185                       l1817 0169                       l1809 014B  
                     l1761 0096                       l1753 0067                       l1683 0548  
                     l1675 04F8                       l1499 0757                       l1659 064E  
                     l1691 055B                       l1595 03E0                       l1587 03D2  
                     l1579 03CE                       l1835 01A9                       l1827 018D  
                     l1819 0171                       l1771 00C2                       l1763 009D  
                     l1755 0072                       l1747 0024                       l1685 054D  
                     l1677 050E                       l1669 0768                       l1693 0560  
                     l1597 03E4                       l1589 03D5                       l1837 01C7  
                     l1829 0195                       l1781 00E0                       l1773 00C8  
                     l1765 00A9                       l1757 0082                       l1749 0053  
                     l1687 0552                       l1679 051E                       l1695 0571  
                     l1599 03EA                       l1839 01CD                       l1791 010D  
                     l1783 00E4                       l1775 00CC                       l1767 00B0  
                     l1759 0087                       l1689 0744                       l1697 0576  
                     l1793 0113                       l1785 00F8                       l1777 00D6  
                     l1769 00BC                       l1699 057C                       l1795 0119  
                     l1787 00FD                       l1779 00DC                       l1797 011F  
                     l1789 0107                       l1799 0125                       ?_isr 0070  
                     STR_1 070E                       STR_2 0716                       STR_3 0712  
                     STR_4 0716                       STR_5 0706                       STR_6 0716  
                     STR_7 070A                       STR_8 0716                       STR_9 0716  
                     u1000 01CD                       u1001 01CC                       u1307 01FD  
                     _IOCB 0096                       u1317 020B                       u1237 005B  
                     u1407 06D1                       u1327 0219                       u1247 008F  
                     u1417 05BC                       u1337 0227                       u1257 00A5  
                     u1427 05CD                       u1347 0235                       u1267 00B8  
                     u1437 05DC                       u1357 0243                       u1277 01D3  
                     u1447 06EB                       u1367 0251                       u1287 01E1  
                     u1377 025F                       u1297 01EF                       u1387 026D  
                     u1397 027B                       _PEIE 005E                       _TMR0 0001  
                     _WPUB 0095          ?_Lcd_Write_String 0070                       _flag 0022  
                     _cont 0020                       _main 0024                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 003F            __end_of_Decimal 0558  
          __end_of_Lcd_Cmd 06F4          ___bmul@multiplier 003D             _Segundo_digito 0038  
                    ??_isr 0076           ?_I2C_Master_Init 0048           ?_I2C_Master_Read 003A  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 0489                      STR_10 0716                      _ANSEL 0188  
          __end_of___lldiv 04F1            ___awdiv@divisor 003A                      i1l415 0743  
                    i1l193 03A4                      i1l186 0352                      i1l198 03AB  
                    i1l391 06B7            _sensor1_decenas 0030                      i1l389 069F  
          ___awdiv@counter 003F                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      u91_20 0699                      u91_21 0698  
                    u92_25 06A0                      u93_25 06A7                      u94_20 06B3  
                    u94_21 06B2                      u95_20 0735                      u95_21 0734  
                    u96_20 0742                      u96_21 0741                      _TXREG 0019  
          _sensor2_decenas 002D            _sensor3_decenas 002A                      _valor 0024  
                    _setup 03B2           __end_ofi1___bmul 0744                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 05FE  
         __end_of_Lcd_Port 0788            __initialization 000F               __end_of_main 0286  
                   ??_main 0050         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 003A         ??_I2C_Master_Start 003A         ??_I2C_Master_Write 003C  
                   _CCPR1L 0015           ___awdiv@dividend 003C                     ?_setup 0070  
                   _ANSELH 0189                     u101_20 028A                     u101_21 0289  
                   u110_20 02F7                     u102_20 0298                     u110_21 02F6  
                   u102_21 0297                     u111_20 0300                     u103_20 02A0  
                   u111_21 02FF                     u103_21 029F                     u120_20 0368  
                   u112_20 030B                     u104_20 02A6                     u120_21 0367  
                   u112_21 030A                     u104_21 02A5                     u121_20 0385  
                   u113_20 0316                     u105_20 02AB                     i1l1721 0695  
                   u121_21 0384                     u113_21 0315                     u105_21 02AA  
                   i1l1723 0699                     i1l1725 06A6                     i1l1741 073B  
                   i1l1733 0730                     i1l1901 0300                     i1l1727 06AD  
                   i1l1719 0693                     i1l1743 0742                     i1l1735 0731  
                   i1l1911 031B                     i1l1903 0305                     u122_20 03AA  
                   u114_20 0321                     u106_20 02CF                     i1l1729 06B3  
                   i1l1737 0735                     u122_21 03A9                     i1l1921 0337  
                   i1l1913 0321                     u114_21 0320                     i1l1905 030B  
                   u106_21 02CE                     i1l1739 0739                     i1l1923 033C  
                   i1l1915 0326                     i1l1907 0310                     i1l1931 0352  
                   i1l1851 0299                     i1l1843 0286                     i1l1941 0368  
                   i1l1933 0357                     i1l1925 0342                     i1l1917 032C  
                   i1l1909 0316                     i1l1861 02AB                     i1l1853 029B  
                   i1l1845 028A                     i1l1951 0385                     i1l1943 0378  
                   i1l1935 035F                     i1l1927 0347                     i1l1919 0331  
                   i1l1871 02CF                     i1l1863 02C2                     i1l1847 0292  
                   i1l1855 029C                     u115_20 032C                     u107_20 02D5  
                   i1l1945 037C                     i1l1937 0360                     i1l1929 034D  
                   u115_21 032B                     i1l1953 03A4                     i1l1881 02DB  
                   i1l1873 02D5                     u107_21 02D4                     i1l1865 02C6  
                   i1l1857 02A0                     i1l1849 0298                     i1l1955 03AA  
                   i1l1947 037D                     i1l1939 0363                     i1l1891 02E9  
                   i1l1883 02DC                     i1l1875 02D7                     i1l1859 02A6  
                   i1l1867 02C8                     i1l1949 0380                     i1l1893 02EF  
                   i1l1885 02DD                     i1l1877 02D8                     i1l1869 02C9  
                ??_Decimal 0043                     i1l1895 02F1                     i1l1879 02D9  
                   i1l1887 02DF                     u116_20 0337                     u108_20 02E5  
                   u116_21 0336                     i1l1897 02F7                     i1l1889 02E5  
                   u108_21 02E4                     i1l1899 02FA                     u117_20 0342  
                   u109_20 02EF                     u117_21 0341                     u109_21 02EE  
                   u118_20 034D                     u118_21 034C                     u119_20 0357  
                   u119_21 0356                  ??_Lcd_Cmd 003B                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0020                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         _sensor1_centenas 0031           _sensor2_centenas 002E                     ___bmul 0718  
         _sensor3_centenas 002B                     _c_flag 0027                     _d_flag 0028  
                   ___wmul 0693                  ??___awdiv 003E                     _decena 0025  
                ??___lldiv 0042                     _u_flag 0053           ___awdiv@quotient 0041  
                   _slave1 0036                     _slave2 0035                     _unidad 0026  
         _sensor1_unidades 002F                     saved_w 007E           _sensor2_unidades 002C  
          Lcd_Set_Cursor@a 0041            Lcd_Set_Cursor@b 003E            Lcd_Set_Cursor@y 0043  
          Lcd_Set_Cursor@z 0042           _sensor3_unidades 0029    __end_of__initialization 0020  
        __end_of_Lcd_Clear 0751        ___bmul@multiplicand 003A             __pcstackCOMMON 0070  
             __pidataBANK0 0788              __end_of_setup 0420                  ?i1___bmul 0070  
           _Lcd_Set_Cursor 0558             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070           i1___bmul@product 0072                    ??_setup 0050  
               __pbssBANK0 0020                 __pmaintext 0024                    ?___bmul 003A  
                  ?___wmul 0070                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 05B0                 ??i1___bmul 0071                 ??_Lcd_Init 003E  
               ??_Lcd_Port 003A                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0700                    _Decimal 04F1             _Lcd_Write_Char 06B8  
                  _Lcd_Cmd 06D8            __size_of___bmul 0017                    ___awdiv 0420  
                  ___lldiv 0489            __size_of___wmul 0025            ?_Lcd_Set_Cursor 003E  
                  __ptext1 03B2                    __ptext2 05FE                    __ptext3 0489  
                  __ptext4 066A                    __ptext5 06B8                    __ptext6 0558  
                  __ptext7 05B0                    __ptext8 0744                    __ptext9 06D8  
                _T2CONbits 0012               __size_of_isr 012C        i1___bmul@multiplier 0073  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0032                    _sensor1 0034  
                  _sensor2 0033                    _sensor3 0032   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 077B     __end_of_Lcd_Write_Char 06D8  
     end_of_initialization 0020  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
             Decimal@valor 0047            ___lldiv@divisor 003A            ___lldiv@counter 0047  
                _RCSTAbits 0018           I2C_Master_Init@c 0048           I2C_Master_Read@a 003A  
                Lcd_Port@a 003A                  _PORTBbits 0006                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0041          Lcd_Write_String@i 003F  
              _CCP1CONbits 0017                  _TXSTAbits 0098                  _Lcd_Clear 0744  
           __end_of___bmul 072F             __end_of___wmul 06B8           _Lcd_Write_String 066A  
              _BAUDCTLbits 0187          __size_ofi1___bmul 0015        start_initialization 000F  
              __end_of_isr 03B2          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 004C          ??_I2C_Master_Read 003C          ??_I2C_Master_Wait 003A  
        ??_I2C_Master_Stop 003A                 ?_Lcd_Clear 0070                   ??___bmul 003B  
                 ??___wmul 0074                __pdataBANK0 0053            Lcd_Write_Char@a 003C  
          Lcd_Write_Char@y 003E              _Tercer_digito 0037                __pbssCOMMON 007C  
                ___latbits 0002              __pcstackBANK0 003A                   ?_Decimal 0070  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 0771           _I2C_Master_Write 075E  
         ??_Lcd_Set_Cursor 003F                   ?___awdiv 003A                   ?___lldiv 003A  
                __pstrings 0700            Decimal@variable 0046                  _cont_temp 007C  
           __size_of_setup 006E          interrupt_function 0004              _Primer_digito 0039  
           ___wmul@product 0074                  clear_ram0 077A                   _PIE1bits 008C  
    i1___bmul@multiplicand 0070                   Lcd_Cmd@a 003D                   _PIR1bits 000C  
              ??_Lcd_Clear 003E                   i1___bmul 072F                __stringbase 0705  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 003B                   _Lcd_Init 05B0  
                 _Lcd_Port 0782        I2C_Master_Read@temp 003E   __end_of_Lcd_Write_String 0693  
         __size_of_Decimal 0067           __size_of_Lcd_Cmd 001C           __size_of___awdiv 0069  
         __size_of___lldiv 0068         __end_of__stringtab 0706            _I2C_Master_Init 05FE  
          _I2C_Master_Read 0638            _I2C_Master_Wait 0751            _I2C_Master_Stop 0768  
                 __ptext10 0782                   __ptext11 075E                   __ptext20 072F  
                 __ptext12 0768                   __ptext21 0693                   __ptext13 0771  
                 __ptext14 0638                   __ptext15 0751                   __ptext16 04F1  
                 __ptext17 0718                   __ptext18 0420                   __ptext19 0286  
            __size_of_main 0262                   _var_temp 007D   __end_of_I2C_Master_Start 077A  
 __end_of_I2C_Master_Write 0768                 _INTCONbits 000B         Lcd_Write_Char@temp 003D  
                 intlevel1 0000           ___lldiv@dividend 003E                  stringcode 0700  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0638    __end_of_I2C_Master_Read 066A  
  __end_of_I2C_Master_Wait 075E    __end_of_I2C_Master_Stop 0771         Lcd_Set_Cursor@temp 0044  
         ___lldiv@quotient 0043          I2C_Master_Write@d 003A                   stringdir 0700  
                 stringtab 0700                _SSPCON2bits 0091  
